// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameserver_gate_client.proto

#ifndef PROTOBUF_gameserver_5fgate_5fclient_2eproto__INCLUDED
#define PROTOBUF_gameserver_5fgate_5fclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)

namespace protoc {
namespace gameproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

class ClientLoginGateReq;
class ClientLoginGateAck;
class ClientLoginAgainGateReq;
class ClientLoginAgainGateAck;
class ClientLeaveGameReq;
class ClientLeaveGameAck;
class SysErrorNtf;
class KeepClientAlive;
class KeepClientAliveAck;
class TestReq;
class TestAck;
class PlayerBaseData;
class MsgNodeText;
class UniqueID;
class Priority;
class RepeatCount;
class MsgNodePlayerIDName;
class MessageRepeateNode;
class MessageNode;
class ChatRpt;
class ChatNtf;
class GSChatNtf;
class GSSystemMessageNtf;
class SystemMessage;
class GMExecuteResult;
class TeXiaoItem;
class TeXiao;
class TeXiaoTypeNtf;
class GetKeyAwardReq;
class GetKeyAwardAck;
class NeedCreatePlayerName;
class CreatePlayerNameReq;
class CreatePlayerNameAck;
class ShangChengGoods;
class LabelShangChengGoods;
class GetShangChengGoodsListAck;
class GetShangChengGoodsListReq;
class CommonDialog;
class GetGMAward;
class GetGMAwardAck;
class UpdateExp;
class UpdateGold;
class UpdateLevel;
class UpdateYuanBao;
class PetRecord;
class PetRecordSIGN;
class AddPet;
class DelPet;
class UpdatePet;
class PetList;
class SystemData;
class GetAllSysMsgReq;
class GetAllSysMsgAck;
class DeleteSysMsgReq;
class DeleteSysMsgAck;
class SendSysMsgReq;
class SendSysMsgAck;
class ReadSysMsgReq;
class ReadSysMsgAck;
class GetEmailAwardReq;
class GetEmailAwardAck;
class OneKeyGetEmailAwardReq;
class EmailMessageNtf;
class ProtectPetReq;
class ProtectPetAck;
class SellPetToSysReq;
class SellPetToSysAck;
class PetInBianDui;
class BianDuiData;
class BianDuiList;
class SubBianDuiReq;
class SubBianDuiAck;
class ModifyBianDuiNameReq;
class ModifyBianDuiNameAck;
class ModifyBIanDuiDataReq;
class ModifyBIanDuiDataAck;
class BianDuiNtf;
class AddBianDui;
class GetCurBianDuiReq;
class GetCurBianDuiAck;
class SetCurBianDuiReq;
class SetCurBianDuiAck;
class AddPetToBianDuiReq;
class AddPetToBianDuiAck;
class DelPetToBianDuiReq;
class DelPetToBianDuiAck;
class AddPetMaxNumberReq;
class AddPetMaxNumberAck;
class AddQueueMaxNumberReq;
class AddQueueMaxNumberAck;
class PetMaxNumberNtf;
class QueueMaxNumberNtf;
class UpdateCurBianDuiIdx;
class RecoverActiveCountReq;
class RecoverActiveCountAck;
class ActiveCountNtf;
class SpiritNtf;
class UpdateHp;
class UpdateMp;
class GoodsOfSell;
class GetShopListReq;
class GetShopListAck;
class ShoppingReq;
class ShoppingAck;
class UpdateVIPLevel;
class UpdateFriendShip;
class ChongZhiOrderNtf;
class BuffItemListReq;
class BuffItemListAck;
class BuffItemBuyReq;
class BuffItemInfo;
class RandomItemListReq;
class RandomItemListAck;
class RandomItemBuyReq;
class FriendData;
class FriendList;
class UpdateFriend;
class DelFriendReq;
class DelFriendAck;
class DelFriendNtf;
class VisitFriendReq;
class VisitFriendAck;
class AskFriendData;
class GetAskFriendReq;
class GetAskFriendAck;
class SearchPlayerReq;
class SearchPlayerAck;
class AskFriendReq;
class AskFriendAck;
class AddAskFriendNtf;
class ReplyAskReq;
class ReplyAskAck;
class NewAskFriendNtf;
class SetAskFriendStateReq;
class SetAskFriendStateAck;
class GetChapterReq;
class OneCheckPoint;
class OneChapter;
class GetChapterAck;
class OneChapterLoseActivity;
class ChaptersLoseActivityNtf;
class AddActiveChapterNtf;
class UpdateCheckPointNtf;
class SelectCheckPointReq;
class SelectCheckPointAck;
class GetCheckPointRankReq;
class FriendRankItem;
class GetCheckPointRankAck;
class GetFriendArmsReq;
class FriendArms;
class GetFriendArmsAck;
class BeginWarReq;
class MonsterBurstItem;
class TreasureBurstItem;
class BufferItem;
class BeginWarAck;
class NowStartWarRpt;
class DeadMonster;
class WarResultReq;
class WarResultAck;
class DeadInWarNtf;
class DeadInWarAck;
class ReviveReq;
class ReviveAck;
class PetUpgradeReq;
class PetUpgradeAck;
class PetEvolveReq;
class PetEvolveAck;
class OwnedPetIDListReq;
class OwnedPetIDListAck;
class NewPetOpenedNtf;
class ChenJiuData;
class ChenJiuKind;
class GetChenJiuReq;
class GetChenJiuAck;
class UpdateChenJiu;
class GetChenJiuAwardReq;
class GetChenJiuAwardAck;
class OneKeyGetChenJiuAwardReq;
class QuestData;
class GetQuestListReq;
class GetQuestListAck;
class QuestUpdateData;
class UpdateQuestNtf;
class GetQuestAwardReq;
class GetQuestAwardAck;
class OneKeyGetQuestAwardReq;
class RefreshQuestNtf;
class GetCurPvpDataReq;
class GetCurPvpDataAck;
class PvpData;
class GetAllRankReq;
class GetAllRankAck;
class PvpFriendData;
class GetFriendRankReq;
class GetFriendRankAck;
class GetSumRankReq;
class GetSumRankAck;
class ClearPvpCDReq;
class ClearPvpCDAck;
class GetPvpAwardReq;
class GetPvpAwardAck;
class PvpWarBeginReq;
class PvpWarBeginAck;
class PvpWarResultReq;
class PvpWarResultAck;
class ActionCountTickNtf;
class CustomerServiceUrlNtf;
class SkillPage;
class Skill;
class GetSkillListReq;
class GetSkillListAck;
class SaveSkillPageReq;
class SaveSkillPageAck;
class SaveActiveSkillReq;
class SaveActiveSkillAck;
class GoodsItem;
class GoodsList;
class AddGoodsItem;
class UpdateGoodsNumber;
class EquipData;
class EquipList;
class AddEquip;
class DelEquip;
class UpdateEquip;
class PutOnEquipReq;
class PutOnEquipAck;
class TongShiEquip;
class StrengEquipReq;
class StrengEquipAck;
class JinJieEquipReq;
class JinJieEquipAck;
class HeChengEquipReq;
class HeChengEquipAck;
class SellGoodsReq;
class SellGoodsAck;
class EquipSetStoreReq;
class EquipSetStoreAck;
class ShareDataNtf;
class CompleteLoadDataNtf;
class SetPetNewStateReq;
class SetPetNewStateAck;
class UpdateBuyActionCounts;
class PythonMsg_example;
class PythonMessage;
class PyChouKaReq;
class PyPetInfo;
class PyChouKaAck;
class PyGenGaoData;
class PyGetGenGaoReq;
class PyGetGenGaoAck;
class PyGetGoodActivePanelReq;
class PyGoodActiveInfo;
class PyGetGoodActivePanelAck;
class PyGetActiveAwardReq;
class PyGetActiveAwardAck;
class PyEveryDataActiveNtf;
class PySaveGuideStepReq;
class PySaveGuideStepAck;
class PyBuyCheckPointChallengeCountReq;
class PyBuyCheckPointChallengeCountAck;

enum TeXiaoItem_ITEM_TYPE {
  TeXiaoItem_ITEM_TYPE_AWARD_EXP = 1,
  TeXiaoItem_ITEM_TYPE_AWARD_GOLD = 2,
  TeXiaoItem_ITEM_TYPE_AWARD_YUAN_BAO = 3,
  TeXiaoItem_ITEM_TYPE_AWARD_PET = 4,
  TeXiaoItem_ITEM_TYPE_AWARD_ACTION_COUNT = 5,
  TeXiaoItem_ITEM_TYPE_AWARD_FRIENDSHIP = 6,
  TeXiaoItem_ITEM_TYPE_AWARD_EQUIP = 7,
  TeXiaoItem_ITEM_TYPE_AWARD_RANDOM_PET = 8,
  TeXiaoItem_ITEM_TYPE_AWARD_RANDOM_EQUIP = 9,
  TeXiaoItem_ITEM_TYPE_AWARD_GOODS = 10
};
bool TeXiaoItem_ITEM_TYPE_IsValid(int value);
const TeXiaoItem_ITEM_TYPE TeXiaoItem_ITEM_TYPE_ITEM_TYPE_MIN = TeXiaoItem_ITEM_TYPE_AWARD_EXP;
const TeXiaoItem_ITEM_TYPE TeXiaoItem_ITEM_TYPE_ITEM_TYPE_MAX = TeXiaoItem_ITEM_TYPE_AWARD_GOODS;
const int TeXiaoItem_ITEM_TYPE_ITEM_TYPE_ARRAYSIZE = TeXiaoItem_ITEM_TYPE_ITEM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* TeXiaoItem_ITEM_TYPE_descriptor();
inline const ::std::string& TeXiaoItem_ITEM_TYPE_Name(TeXiaoItem_ITEM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    TeXiaoItem_ITEM_TYPE_descriptor(), value);
}
inline bool TeXiaoItem_ITEM_TYPE_Parse(
    const ::std::string& name, TeXiaoItem_ITEM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeXiaoItem_ITEM_TYPE>(
    TeXiaoItem_ITEM_TYPE_descriptor(), name, value);
}
enum BufferItem_BufferEffectType {
  BufferItem_BufferEffectType_no_type = 0,
  BufferItem_BufferEffectType_hurt = 1,
  BufferItem_BufferEffectType_reply = 2,
  BufferItem_BufferEffectType_hp = 3,
  BufferItem_BufferEffectType_spirit = 4,
  BufferItem_BufferEffectType_speed = 5,
  BufferItem_BufferEffectType_crit = 6,
  BufferItem_BufferEffectType_magic_reply = 7
};
bool BufferItem_BufferEffectType_IsValid(int value);
const BufferItem_BufferEffectType BufferItem_BufferEffectType_BufferEffectType_MIN = BufferItem_BufferEffectType_no_type;
const BufferItem_BufferEffectType BufferItem_BufferEffectType_BufferEffectType_MAX = BufferItem_BufferEffectType_magic_reply;
const int BufferItem_BufferEffectType_BufferEffectType_ARRAYSIZE = BufferItem_BufferEffectType_BufferEffectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BufferItem_BufferEffectType_descriptor();
inline const ::std::string& BufferItem_BufferEffectType_Name(BufferItem_BufferEffectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BufferItem_BufferEffectType_descriptor(), value);
}
inline bool BufferItem_BufferEffectType_Parse(
    const ::std::string& name, BufferItem_BufferEffectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BufferItem_BufferEffectType>(
    BufferItem_BufferEffectType_descriptor(), name, value);
}
enum CHAT_MSG_TYPE {
  E_PRIVATE_TALK = 0,
  E_UNION_TALK = 1,
  E_WORLD_TALK = 2
};
bool CHAT_MSG_TYPE_IsValid(int value);
const CHAT_MSG_TYPE CHAT_MSG_TYPE_MIN = E_PRIVATE_TALK;
const CHAT_MSG_TYPE CHAT_MSG_TYPE_MAX = E_WORLD_TALK;
const int CHAT_MSG_TYPE_ARRAYSIZE = CHAT_MSG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHAT_MSG_TYPE_descriptor();
inline const ::std::string& CHAT_MSG_TYPE_Name(CHAT_MSG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHAT_MSG_TYPE_descriptor(), value);
}
inline bool CHAT_MSG_TYPE_Parse(
    const ::std::string& name, CHAT_MSG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHAT_MSG_TYPE>(
    CHAT_MSG_TYPE_descriptor(), name, value);
}
enum CHAT_MSG_NODE_TYPE {
  E_TEXT = 0,
  E_PLAYER_ID_NAME = 1,
  E_PRIORITY = 16,
  E_REPEAT_COUNT = 17,
  E_RONGHUN_KIND = 18
};
bool CHAT_MSG_NODE_TYPE_IsValid(int value);
const CHAT_MSG_NODE_TYPE CHAT_MSG_NODE_TYPE_MIN = E_TEXT;
const CHAT_MSG_NODE_TYPE CHAT_MSG_NODE_TYPE_MAX = E_RONGHUN_KIND;
const int CHAT_MSG_NODE_TYPE_ARRAYSIZE = CHAT_MSG_NODE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CHAT_MSG_NODE_TYPE_descriptor();
inline const ::std::string& CHAT_MSG_NODE_TYPE_Name(CHAT_MSG_NODE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHAT_MSG_NODE_TYPE_descriptor(), value);
}
inline bool CHAT_MSG_NODE_TYPE_Parse(
    const ::std::string& name, CHAT_MSG_NODE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHAT_MSG_NODE_TYPE>(
    CHAT_MSG_NODE_TYPE_descriptor(), name, value);
}
enum SYSTEM_MSG_TYPE {
  E_NORMALL_MSG = 0,
  E_GM_MSG = 1,
  E_PLAYERTOALL_MSG = 2,
  E_PAOMADENG_MSG = 3,
  E_GM_Urgent_Msg = 4,
  E_POP_NORMAL_MSG = 5
};
bool SYSTEM_MSG_TYPE_IsValid(int value);
const SYSTEM_MSG_TYPE SYSTEM_MSG_TYPE_MIN = E_NORMALL_MSG;
const SYSTEM_MSG_TYPE SYSTEM_MSG_TYPE_MAX = E_POP_NORMAL_MSG;
const int SYSTEM_MSG_TYPE_ARRAYSIZE = SYSTEM_MSG_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SYSTEM_MSG_TYPE_descriptor();
inline const ::std::string& SYSTEM_MSG_TYPE_Name(SYSTEM_MSG_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SYSTEM_MSG_TYPE_descriptor(), value);
}
inline bool SYSTEM_MSG_TYPE_Parse(
    const ::std::string& name, SYSTEM_MSG_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SYSTEM_MSG_TYPE>(
    SYSTEM_MSG_TYPE_descriptor(), name, value);
}
enum TEXIAO_TYPE {
  e_default_texiao = 0,
  e_jinyingdai_texiao = 1,
  e_show_li_bao = 2
};
bool TEXIAO_TYPE_IsValid(int value);
const TEXIAO_TYPE TEXIAO_TYPE_MIN = e_default_texiao;
const TEXIAO_TYPE TEXIAO_TYPE_MAX = e_show_li_bao;
const int TEXIAO_TYPE_ARRAYSIZE = TEXIAO_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* TEXIAO_TYPE_descriptor();
inline const ::std::string& TEXIAO_TYPE_Name(TEXIAO_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    TEXIAO_TYPE_descriptor(), value);
}
inline bool TEXIAO_TYPE_Parse(
    const ::std::string& name, TEXIAO_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TEXIAO_TYPE>(
    TEXIAO_TYPE_descriptor(), name, value);
}
enum CommonDialogType {
  E_ONLY_OK_BTN = 1,
  E_BOTH_OK_CANCEL = 2,
  E_BOTH_OK_CANCEL_INPUT = 3
};
bool CommonDialogType_IsValid(int value);
const CommonDialogType CommonDialogType_MIN = E_ONLY_OK_BTN;
const CommonDialogType CommonDialogType_MAX = E_BOTH_OK_CANCEL_INPUT;
const int CommonDialogType_ARRAYSIZE = CommonDialogType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonDialogType_descriptor();
inline const ::std::string& CommonDialogType_Name(CommonDialogType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonDialogType_descriptor(), value);
}
inline bool CommonDialogType_Parse(
    const ::std::string& name, CommonDialogType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonDialogType>(
    CommonDialogType_descriptor(), name, value);
}
enum PET_POSITION {
  e_pet_in_group = 0,
  e_pet_in_sell = 1
};
bool PET_POSITION_IsValid(int value);
const PET_POSITION PET_POSITION_MIN = e_pet_in_group;
const PET_POSITION PET_POSITION_MAX = e_pet_in_sell;
const int PET_POSITION_ARRAYSIZE = PET_POSITION_MAX + 1;

const ::google::protobuf::EnumDescriptor* PET_POSITION_descriptor();
inline const ::std::string& PET_POSITION_Name(PET_POSITION value) {
  return ::google::protobuf::internal::NameOfEnum(
    PET_POSITION_descriptor(), value);
}
inline bool PET_POSITION_Parse(
    const ::std::string& name, PET_POSITION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PET_POSITION>(
    PET_POSITION_descriptor(), name, value);
}
enum BUFF_TYPE {
  E_BUFFTYPE_PVE = 0,
  E_BUFFTYPE_PVP = 1
};
bool BUFF_TYPE_IsValid(int value);
const BUFF_TYPE BUFF_TYPE_MIN = E_BUFFTYPE_PVE;
const BUFF_TYPE BUFF_TYPE_MAX = E_BUFFTYPE_PVP;
const int BUFF_TYPE_ARRAYSIZE = BUFF_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* BUFF_TYPE_descriptor();
inline const ::std::string& BUFF_TYPE_Name(BUFF_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    BUFF_TYPE_descriptor(), value);
}
inline bool BUFF_TYPE_Parse(
    const ::std::string& name, BUFF_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BUFF_TYPE>(
    BUFF_TYPE_descriptor(), name, value);
}
enum SELL_TYPE {
  E_GOLD = 0,
  E_GEM = 1,
  E_FRIENDSHIP_POINT = 2,
  E_RMB = 3
};
bool SELL_TYPE_IsValid(int value);
const SELL_TYPE SELL_TYPE_MIN = E_GOLD;
const SELL_TYPE SELL_TYPE_MAX = E_RMB;
const int SELL_TYPE_ARRAYSIZE = SELL_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SELL_TYPE_descriptor();
inline const ::std::string& SELL_TYPE_Name(SELL_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SELL_TYPE_descriptor(), value);
}
inline bool SELL_TYPE_Parse(
    const ::std::string& name, SELL_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SELL_TYPE>(
    SELL_TYPE_descriptor(), name, value);
}
enum Period {
  E_NONE = 0,
  E_DAILY = 1,
  E_WEEKLY = 2,
  E_FESTIVAL = 3
};
bool Period_IsValid(int value);
const Period Period_MIN = E_NONE;
const Period Period_MAX = E_FESTIVAL;
const int Period_ARRAYSIZE = Period_MAX + 1;

const ::google::protobuf::EnumDescriptor* Period_descriptor();
inline const ::std::string& Period_Name(Period value) {
  return ::google::protobuf::internal::NameOfEnum(
    Period_descriptor(), value);
}
inline bool Period_Parse(
    const ::std::string& name, Period* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Period>(
    Period_descriptor(), name, value);
}
// ===================================================================

class ClientLoginGateReq : public ::google::protobuf::Message {
 public:
  ClientLoginGateReq();
  virtual ~ClientLoginGateReq();

  ClientLoginGateReq(const ClientLoginGateReq& from);

  inline ClientLoginGateReq& operator=(const ClientLoginGateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginGateReq& default_instance();

  void Swap(ClientLoginGateReq* other);

  // implements Message ----------------------------------------------

  ClientLoginGateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginGateReq& from);
  void MergeFrom(const ClientLoginGateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 digit_account = 1;
  inline bool has_digit_account() const;
  inline void clear_digit_account();
  static const int kDigitAccountFieldNumber = 1;
  inline ::google::protobuf::uint64 digit_account() const;
  inline void set_digit_account(::google::protobuf::uint64 value);

  // required string str_account = 2;
  inline bool has_str_account() const;
  inline void clear_str_account();
  static const int kStrAccountFieldNumber = 2;
  inline const ::std::string& str_account() const;
  inline void set_str_account(const ::std::string& value);
  inline void set_str_account(const char* value);
  inline void set_str_account(const char* value, size_t size);
  inline ::std::string* mutable_str_account();
  inline ::std::string* release_str_account();
  inline void set_allocated_str_account(::std::string* str_account);

  // optional string login_gate_key = 3;
  inline bool has_login_gate_key() const;
  inline void clear_login_gate_key();
  static const int kLoginGateKeyFieldNumber = 3;
  inline const ::std::string& login_gate_key() const;
  inline void set_login_gate_key(const ::std::string& value);
  inline void set_login_gate_key(const char* value);
  inline void set_login_gate_key(const char* value, size_t size);
  inline ::std::string* mutable_login_gate_key();
  inline ::std::string* release_login_gate_key();
  inline void set_allocated_login_gate_key(::std::string* login_gate_key);

  // optional string opt = 4;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 4;
  inline const ::std::string& opt() const;
  inline void set_opt(const ::std::string& value);
  inline void set_opt(const char* value);
  inline void set_opt(const char* value, size_t size);
  inline ::std::string* mutable_opt();
  inline ::std::string* release_opt();
  inline void set_allocated_opt(::std::string* opt);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLoginGateReq)
 private:
  inline void set_has_digit_account();
  inline void clear_has_digit_account();
  inline void set_has_str_account();
  inline void clear_has_str_account();
  inline void set_has_login_gate_key();
  inline void clear_has_login_gate_key();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 digit_account_;
  ::std::string* str_account_;
  ::std::string* login_gate_key_;
  ::std::string* opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginGateReq* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginGateAck : public ::google::protobuf::Message {
 public:
  ClientLoginGateAck();
  virtual ~ClientLoginGateAck();

  ClientLoginGateAck(const ClientLoginGateAck& from);

  inline ClientLoginGateAck& operator=(const ClientLoginGateAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginGateAck& default_instance();

  void Swap(ClientLoginGateAck* other);

  // implements Message ----------------------------------------------

  ClientLoginGateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginGateAck& from);
  void MergeFrom(const ClientLoginGateAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional int32 coding_id = 2;
  inline bool has_coding_id() const;
  inline void clear_coding_id();
  static const int kCodingIdFieldNumber = 2;
  inline ::google::protobuf::int32 coding_id() const;
  inline void set_coding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLoginGateAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_coding_id();
  inline void clear_has_coding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 coding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginGateAck* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginAgainGateReq : public ::google::protobuf::Message {
 public:
  ClientLoginAgainGateReq();
  virtual ~ClientLoginAgainGateReq();

  ClientLoginAgainGateReq(const ClientLoginAgainGateReq& from);

  inline ClientLoginAgainGateReq& operator=(const ClientLoginAgainGateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginAgainGateReq& default_instance();

  void Swap(ClientLoginAgainGateReq* other);

  // implements Message ----------------------------------------------

  ClientLoginAgainGateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginAgainGateReq& from);
  void MergeFrom(const ClientLoginAgainGateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 digit_account = 1;
  inline bool has_digit_account() const;
  inline void clear_digit_account();
  static const int kDigitAccountFieldNumber = 1;
  inline ::google::protobuf::uint64 digit_account() const;
  inline void set_digit_account(::google::protobuf::uint64 value);

  // required string str_account = 2;
  inline bool has_str_account() const;
  inline void clear_str_account();
  static const int kStrAccountFieldNumber = 2;
  inline const ::std::string& str_account() const;
  inline void set_str_account(const ::std::string& value);
  inline void set_str_account(const char* value);
  inline void set_str_account(const char* value, size_t size);
  inline ::std::string* mutable_str_account();
  inline ::std::string* release_str_account();
  inline void set_allocated_str_account(::std::string* str_account);

  // optional string login_gate_key = 3;
  inline bool has_login_gate_key() const;
  inline void clear_login_gate_key();
  static const int kLoginGateKeyFieldNumber = 3;
  inline const ::std::string& login_gate_key() const;
  inline void set_login_gate_key(const ::std::string& value);
  inline void set_login_gate_key(const char* value);
  inline void set_login_gate_key(const char* value, size_t size);
  inline ::std::string* mutable_login_gate_key();
  inline ::std::string* release_login_gate_key();
  inline void set_allocated_login_gate_key(::std::string* login_gate_key);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLoginAgainGateReq)
 private:
  inline void set_has_digit_account();
  inline void clear_has_digit_account();
  inline void set_has_str_account();
  inline void clear_has_str_account();
  inline void set_has_login_gate_key();
  inline void clear_has_login_gate_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 digit_account_;
  ::std::string* str_account_;
  ::std::string* login_gate_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginAgainGateReq* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginAgainGateAck : public ::google::protobuf::Message {
 public:
  ClientLoginAgainGateAck();
  virtual ~ClientLoginAgainGateAck();

  ClientLoginAgainGateAck(const ClientLoginAgainGateAck& from);

  inline ClientLoginAgainGateAck& operator=(const ClientLoginAgainGateAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginAgainGateAck& default_instance();

  void Swap(ClientLoginAgainGateAck* other);

  // implements Message ----------------------------------------------

  ClientLoginAgainGateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginAgainGateAck& from);
  void MergeFrom(const ClientLoginAgainGateAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional int32 coding_id = 2;
  inline bool has_coding_id() const;
  inline void clear_coding_id();
  static const int kCodingIdFieldNumber = 2;
  inline ::google::protobuf::int32 coding_id() const;
  inline void set_coding_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLoginAgainGateAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_coding_id();
  inline void clear_has_coding_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 coding_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginAgainGateAck* default_instance_;
};
// -------------------------------------------------------------------

class ClientLeaveGameReq : public ::google::protobuf::Message {
 public:
  ClientLeaveGameReq();
  virtual ~ClientLeaveGameReq();

  ClientLeaveGameReq(const ClientLeaveGameReq& from);

  inline ClientLeaveGameReq& operator=(const ClientLeaveGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLeaveGameReq& default_instance();

  void Swap(ClientLeaveGameReq* other);

  // implements Message ----------------------------------------------

  ClientLeaveGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLeaveGameReq& from);
  void MergeFrom(const ClientLeaveGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 leave_type = 3;
  inline bool has_leave_type() const;
  inline void clear_leave_type();
  static const int kLeaveTypeFieldNumber = 3;
  inline ::google::protobuf::int32 leave_type() const;
  inline void set_leave_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLeaveGameReq)
 private:
  inline void set_has_leave_type();
  inline void clear_has_leave_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 leave_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLeaveGameReq* default_instance_;
};
// -------------------------------------------------------------------

class ClientLeaveGameAck : public ::google::protobuf::Message {
 public:
  ClientLeaveGameAck();
  virtual ~ClientLeaveGameAck();

  ClientLeaveGameAck(const ClientLeaveGameAck& from);

  inline ClientLeaveGameAck& operator=(const ClientLeaveGameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLeaveGameAck& default_instance();

  void Swap(ClientLeaveGameAck* other);

  // implements Message ----------------------------------------------

  ClientLeaveGameAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLeaveGameAck& from);
  void MergeFrom(const ClientLeaveGameAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClientLeaveGameAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClientLeaveGameAck* default_instance_;
};
// -------------------------------------------------------------------

class SysErrorNtf : public ::google::protobuf::Message {
 public:
  SysErrorNtf();
  virtual ~SysErrorNtf();

  SysErrorNtf(const SysErrorNtf& from);

  inline SysErrorNtf& operator=(const SysErrorNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SysErrorNtf& default_instance();

  void Swap(SysErrorNtf* other);

  // implements Message ----------------------------------------------

  SysErrorNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SysErrorNtf& from);
  void MergeFrom(const SysErrorNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SysErrorNtf)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SysErrorNtf* default_instance_;
};
// -------------------------------------------------------------------

class KeepClientAlive : public ::google::protobuf::Message {
 public:
  KeepClientAlive();
  virtual ~KeepClientAlive();

  KeepClientAlive(const KeepClientAlive& from);

  inline KeepClientAlive& operator=(const KeepClientAlive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeepClientAlive& default_instance();

  void Swap(KeepClientAlive* other);

  // implements Message ----------------------------------------------

  KeepClientAlive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeepClientAlive& from);
  void MergeFrom(const KeepClientAlive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.KeepClientAlive)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static KeepClientAlive* default_instance_;
};
// -------------------------------------------------------------------

class KeepClientAliveAck : public ::google::protobuf::Message {
 public:
  KeepClientAliveAck();
  virtual ~KeepClientAliveAck();

  KeepClientAliveAck(const KeepClientAliveAck& from);

  inline KeepClientAliveAck& operator=(const KeepClientAliveAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeepClientAliveAck& default_instance();

  void Swap(KeepClientAliveAck* other);

  // implements Message ----------------------------------------------

  KeepClientAliveAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeepClientAliveAck& from);
  void MergeFrom(const KeepClientAliveAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.KeepClientAliveAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static KeepClientAliveAck* default_instance_;
};
// -------------------------------------------------------------------

class TestReq : public ::google::protobuf::Message {
 public:
  TestReq();
  virtual ~TestReq();

  TestReq(const TestReq& from);

  inline TestReq& operator=(const TestReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestReq& default_instance();

  void Swap(TestReq* other);

  // implements Message ----------------------------------------------

  TestReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestReq& from);
  void MergeFrom(const TestReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double t_double = 1;
  inline bool has_t_double() const;
  inline void clear_t_double();
  static const int kTDoubleFieldNumber = 1;
  inline double t_double() const;
  inline void set_t_double(double value);

  // optional float t_float = 2;
  inline bool has_t_float() const;
  inline void clear_t_float();
  static const int kTFloatFieldNumber = 2;
  inline float t_float() const;
  inline void set_t_float(float value);

  // optional int32 t_int32 = 3;
  inline bool has_t_int32() const;
  inline void clear_t_int32();
  static const int kTInt32FieldNumber = 3;
  inline ::google::protobuf::int32 t_int32() const;
  inline void set_t_int32(::google::protobuf::int32 value);

  // optional int64 t_int64 = 4;
  inline bool has_t_int64() const;
  inline void clear_t_int64();
  static const int kTInt64FieldNumber = 4;
  inline ::google::protobuf::int64 t_int64() const;
  inline void set_t_int64(::google::protobuf::int64 value);

  // optional uint32 t_uint32 = 5;
  inline bool has_t_uint32() const;
  inline void clear_t_uint32();
  static const int kTUint32FieldNumber = 5;
  inline ::google::protobuf::uint32 t_uint32() const;
  inline void set_t_uint32(::google::protobuf::uint32 value);

  // optional uint64 t_uint64 = 6;
  inline bool has_t_uint64() const;
  inline void clear_t_uint64();
  static const int kTUint64FieldNumber = 6;
  inline ::google::protobuf::uint64 t_uint64() const;
  inline void set_t_uint64(::google::protobuf::uint64 value);

  // optional sint32 t_sint32 = 7;
  inline bool has_t_sint32() const;
  inline void clear_t_sint32();
  static const int kTSint32FieldNumber = 7;
  inline ::google::protobuf::int32 t_sint32() const;
  inline void set_t_sint32(::google::protobuf::int32 value);

  // optional sint64 t_sint64 = 8;
  inline bool has_t_sint64() const;
  inline void clear_t_sint64();
  static const int kTSint64FieldNumber = 8;
  inline ::google::protobuf::int64 t_sint64() const;
  inline void set_t_sint64(::google::protobuf::int64 value);

  // optional bool t_bool = 9;
  inline bool has_t_bool() const;
  inline void clear_t_bool();
  static const int kTBoolFieldNumber = 9;
  inline bool t_bool() const;
  inline void set_t_bool(bool value);

  // optional string t_string = 10;
  inline bool has_t_string() const;
  inline void clear_t_string();
  static const int kTStringFieldNumber = 10;
  inline const ::std::string& t_string() const;
  inline void set_t_string(const ::std::string& value);
  inline void set_t_string(const char* value);
  inline void set_t_string(const char* value, size_t size);
  inline ::std::string* mutable_t_string();
  inline ::std::string* release_t_string();
  inline void set_allocated_t_string(::std::string* t_string);

  // optional bytes t_bytes = 11;
  inline bool has_t_bytes() const;
  inline void clear_t_bytes();
  static const int kTBytesFieldNumber = 11;
  inline const ::std::string& t_bytes() const;
  inline void set_t_bytes(const ::std::string& value);
  inline void set_t_bytes(const char* value);
  inline void set_t_bytes(const void* value, size_t size);
  inline ::std::string* mutable_t_bytes();
  inline ::std::string* release_t_bytes();
  inline void set_allocated_t_bytes(::std::string* t_bytes);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TestReq)
 private:
  inline void set_has_t_double();
  inline void clear_has_t_double();
  inline void set_has_t_float();
  inline void clear_has_t_float();
  inline void set_has_t_int32();
  inline void clear_has_t_int32();
  inline void set_has_t_int64();
  inline void clear_has_t_int64();
  inline void set_has_t_uint32();
  inline void clear_has_t_uint32();
  inline void set_has_t_uint64();
  inline void clear_has_t_uint64();
  inline void set_has_t_sint32();
  inline void clear_has_t_sint32();
  inline void set_has_t_sint64();
  inline void clear_has_t_sint64();
  inline void set_has_t_bool();
  inline void clear_has_t_bool();
  inline void set_has_t_string();
  inline void clear_has_t_string();
  inline void set_has_t_bytes();
  inline void clear_has_t_bytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double t_double_;
  float t_float_;
  ::google::protobuf::int32 t_int32_;
  ::google::protobuf::int64 t_int64_;
  ::google::protobuf::uint64 t_uint64_;
  ::google::protobuf::uint32 t_uint32_;
  ::google::protobuf::int32 t_sint32_;
  ::google::protobuf::int64 t_sint64_;
  ::std::string* t_string_;
  ::std::string* t_bytes_;
  bool t_bool_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TestReq* default_instance_;
};
// -------------------------------------------------------------------

class TestAck : public ::google::protobuf::Message {
 public:
  TestAck();
  virtual ~TestAck();

  TestAck(const TestAck& from);

  inline TestAck& operator=(const TestAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestAck& default_instance();

  void Swap(TestAck* other);

  // implements Message ----------------------------------------------

  TestAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestAck& from);
  void MergeFrom(const TestAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double t_double = 1;
  inline bool has_t_double() const;
  inline void clear_t_double();
  static const int kTDoubleFieldNumber = 1;
  inline double t_double() const;
  inline void set_t_double(double value);

  // optional float t_float = 2;
  inline bool has_t_float() const;
  inline void clear_t_float();
  static const int kTFloatFieldNumber = 2;
  inline float t_float() const;
  inline void set_t_float(float value);

  // optional int32 t_int32 = 3;
  inline bool has_t_int32() const;
  inline void clear_t_int32();
  static const int kTInt32FieldNumber = 3;
  inline ::google::protobuf::int32 t_int32() const;
  inline void set_t_int32(::google::protobuf::int32 value);

  // optional int64 t_int64 = 4;
  inline bool has_t_int64() const;
  inline void clear_t_int64();
  static const int kTInt64FieldNumber = 4;
  inline ::google::protobuf::int64 t_int64() const;
  inline void set_t_int64(::google::protobuf::int64 value);

  // optional uint32 t_uint32 = 5;
  inline bool has_t_uint32() const;
  inline void clear_t_uint32();
  static const int kTUint32FieldNumber = 5;
  inline ::google::protobuf::uint32 t_uint32() const;
  inline void set_t_uint32(::google::protobuf::uint32 value);

  // optional uint64 t_uint64 = 6;
  inline bool has_t_uint64() const;
  inline void clear_t_uint64();
  static const int kTUint64FieldNumber = 6;
  inline ::google::protobuf::uint64 t_uint64() const;
  inline void set_t_uint64(::google::protobuf::uint64 value);

  // optional sint32 t_sint32 = 7;
  inline bool has_t_sint32() const;
  inline void clear_t_sint32();
  static const int kTSint32FieldNumber = 7;
  inline ::google::protobuf::int32 t_sint32() const;
  inline void set_t_sint32(::google::protobuf::int32 value);

  // optional sint64 t_sint64 = 8;
  inline bool has_t_sint64() const;
  inline void clear_t_sint64();
  static const int kTSint64FieldNumber = 8;
  inline ::google::protobuf::int64 t_sint64() const;
  inline void set_t_sint64(::google::protobuf::int64 value);

  // optional bool t_bool = 9;
  inline bool has_t_bool() const;
  inline void clear_t_bool();
  static const int kTBoolFieldNumber = 9;
  inline bool t_bool() const;
  inline void set_t_bool(bool value);

  // optional string t_string = 10;
  inline bool has_t_string() const;
  inline void clear_t_string();
  static const int kTStringFieldNumber = 10;
  inline const ::std::string& t_string() const;
  inline void set_t_string(const ::std::string& value);
  inline void set_t_string(const char* value);
  inline void set_t_string(const char* value, size_t size);
  inline ::std::string* mutable_t_string();
  inline ::std::string* release_t_string();
  inline void set_allocated_t_string(::std::string* t_string);

  // optional bytes t_bytes = 11;
  inline bool has_t_bytes() const;
  inline void clear_t_bytes();
  static const int kTBytesFieldNumber = 11;
  inline const ::std::string& t_bytes() const;
  inline void set_t_bytes(const ::std::string& value);
  inline void set_t_bytes(const char* value);
  inline void set_t_bytes(const void* value, size_t size);
  inline ::std::string* mutable_t_bytes();
  inline ::std::string* release_t_bytes();
  inline void set_allocated_t_bytes(::std::string* t_bytes);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TestAck)
 private:
  inline void set_has_t_double();
  inline void clear_has_t_double();
  inline void set_has_t_float();
  inline void clear_has_t_float();
  inline void set_has_t_int32();
  inline void clear_has_t_int32();
  inline void set_has_t_int64();
  inline void clear_has_t_int64();
  inline void set_has_t_uint32();
  inline void clear_has_t_uint32();
  inline void set_has_t_uint64();
  inline void clear_has_t_uint64();
  inline void set_has_t_sint32();
  inline void clear_has_t_sint32();
  inline void set_has_t_sint64();
  inline void clear_has_t_sint64();
  inline void set_has_t_bool();
  inline void clear_has_t_bool();
  inline void set_has_t_string();
  inline void clear_has_t_string();
  inline void set_has_t_bytes();
  inline void clear_has_t_bytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double t_double_;
  float t_float_;
  ::google::protobuf::int32 t_int32_;
  ::google::protobuf::int64 t_int64_;
  ::google::protobuf::uint64 t_uint64_;
  ::google::protobuf::uint32 t_uint32_;
  ::google::protobuf::int32 t_sint32_;
  ::google::protobuf::int64 t_sint64_;
  ::std::string* t_string_;
  ::std::string* t_bytes_;
  bool t_bool_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TestAck* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBaseData : public ::google::protobuf::Message {
 public:
  PlayerBaseData();
  virtual ~PlayerBaseData();

  PlayerBaseData(const PlayerBaseData& from);

  inline PlayerBaseData& operator=(const PlayerBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBaseData& default_instance();

  void Swap(PlayerBaseData* other);

  // implements Message ----------------------------------------------

  PlayerBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBaseData& from);
  void MergeFrom(const PlayerBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playername = 1;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 1;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // optional uint32 vip_level = 2;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional int32 area_id = 3;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 3;
  inline ::google::protobuf::int32 area_id() const;
  inline void set_area_id(::google::protobuf::int32 value);

  // optional uint32 head_pic_id = 4;
  inline bool has_head_pic_id() const;
  inline void clear_head_pic_id();
  static const int kHeadPicIdFieldNumber = 4;
  inline ::google::protobuf::uint32 head_pic_id() const;
  inline void set_head_pic_id(::google::protobuf::uint32 value);

  // optional bool sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline bool sex() const;
  inline void set_sex(bool value);

  // optional uint32 exp = 6;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 6;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 gold = 7;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 7;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 action_count = 9;
  inline bool has_action_count() const;
  inline void clear_action_count();
  static const int kActionCountFieldNumber = 9;
  inline ::google::protobuf::uint32 action_count() const;
  inline void set_action_count(::google::protobuf::uint32 value);

  // optional uint32 spirit = 10;
  inline bool has_spirit() const;
  inline void clear_spirit();
  static const int kSpiritFieldNumber = 10;
  inline ::google::protobuf::uint32 spirit() const;
  inline void set_spirit(::google::protobuf::uint32 value);

  // optional uint32 hp = 11;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 11;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 mp = 12;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 12;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // optional uint32 yuan_bao = 13;
  inline bool has_yuan_bao() const;
  inline void clear_yuan_bao();
  static const int kYuanBaoFieldNumber = 13;
  inline ::google::protobuf::uint32 yuan_bao() const;
  inline void set_yuan_bao(::google::protobuf::uint32 value);

  // optional int32 gmlevel = 14;
  inline bool has_gmlevel() const;
  inline void clear_gmlevel();
  static const int kGmlevelFieldNumber = 14;
  inline ::google::protobuf::int32 gmlevel() const;
  inline void set_gmlevel(::google::protobuf::int32 value);

  // optional uint32 cur_queue_id = 15;
  inline bool has_cur_queue_id() const;
  inline void clear_cur_queue_id();
  static const int kCurQueueIdFieldNumber = 15;
  inline ::google::protobuf::uint32 cur_queue_id() const;
  inline void set_cur_queue_id(::google::protobuf::uint32 value);

  // optional int32 friend_ship = 16;
  inline bool has_friend_ship() const;
  inline void clear_friend_ship();
  static const int kFriendShipFieldNumber = 16;
  inline ::google::protobuf::int32 friend_ship() const;
  inline void set_friend_ship(::google::protobuf::int32 value);

  // optional bool not_ask_friend = 17;
  inline bool has_not_ask_friend() const;
  inline void clear_not_ask_friend();
  static const int kNotAskFriendFieldNumber = 17;
  inline bool not_ask_friend() const;
  inline void set_not_ask_friend(bool value);

  // optional bool today_first_login = 18;
  inline bool has_today_first_login() const;
  inline void clear_today_first_login();
  static const int kTodayFirstLoginFieldNumber = 18;
  inline bool today_first_login() const;
  inline void set_today_first_login(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PlayerBaseData)
 private:
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_area_id();
  inline void clear_has_area_id();
  inline void set_has_head_pic_id();
  inline void clear_has_head_pic_id();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_action_count();
  inline void clear_has_action_count();
  inline void set_has_spirit();
  inline void clear_has_spirit();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_mp();
  inline void clear_has_mp();
  inline void set_has_yuan_bao();
  inline void clear_has_yuan_bao();
  inline void set_has_gmlevel();
  inline void clear_has_gmlevel();
  inline void set_has_cur_queue_id();
  inline void clear_has_cur_queue_id();
  inline void set_has_friend_ship();
  inline void clear_has_friend_ship();
  inline void set_has_not_ask_friend();
  inline void clear_has_not_ask_friend();
  inline void set_has_today_first_login();
  inline void clear_has_today_first_login();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* playername_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::int32 area_id_;
  ::google::protobuf::uint32 head_pic_id_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 action_count_;
  ::google::protobuf::uint32 spirit_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 mp_;
  ::google::protobuf::uint32 yuan_bao_;
  bool sex_;
  bool not_ask_friend_;
  bool today_first_login_;
  ::google::protobuf::int32 gmlevel_;
  ::google::protobuf::uint32 cur_queue_id_;
  ::google::protobuf::int32 friend_ship_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PlayerBaseData* default_instance_;
};
// -------------------------------------------------------------------

class MsgNodeText : public ::google::protobuf::Message {
 public:
  MsgNodeText();
  virtual ~MsgNodeText();

  MsgNodeText(const MsgNodeText& from);

  inline MsgNodeText& operator=(const MsgNodeText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNodeText& default_instance();

  void Swap(MsgNodeText* other);

  // implements Message ----------------------------------------------

  MsgNodeText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNodeText& from);
  void MergeFrom(const MsgNodeText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.MsgNodeText)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static MsgNodeText* default_instance_;
};
// -------------------------------------------------------------------

class UniqueID : public ::google::protobuf::Message {
 public:
  UniqueID();
  virtual ~UniqueID();

  UniqueID(const UniqueID& from);

  inline UniqueID& operator=(const UniqueID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniqueID& default_instance();

  void Swap(UniqueID* other);

  // implements Message ----------------------------------------------

  UniqueID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniqueID& from);
  void MergeFrom(const UniqueID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UniqueID)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UniqueID* default_instance_;
};
// -------------------------------------------------------------------

class Priority : public ::google::protobuf::Message {
 public:
  Priority();
  virtual ~Priority();

  Priority(const Priority& from);

  inline Priority& operator=(const Priority& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Priority& default_instance();

  void Swap(Priority* other);

  // implements Message ----------------------------------------------

  Priority* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Priority& from);
  void MergeFrom(const Priority& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pri = 1;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 1;
  inline ::google::protobuf::uint32 pri() const;
  inline void set_pri(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.Priority)
 private:
  inline void set_has_pri();
  inline void clear_has_pri();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pri_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static Priority* default_instance_;
};
// -------------------------------------------------------------------

class RepeatCount : public ::google::protobuf::Message {
 public:
  RepeatCount();
  virtual ~RepeatCount();

  RepeatCount(const RepeatCount& from);

  inline RepeatCount& operator=(const RepeatCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RepeatCount& default_instance();

  void Swap(RepeatCount* other);

  // implements Message ----------------------------------------------

  RepeatCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RepeatCount& from);
  void MergeFrom(const RepeatCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RepeatCount)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RepeatCount* default_instance_;
};
// -------------------------------------------------------------------

class MsgNodePlayerIDName : public ::google::protobuf::Message {
 public:
  MsgNodePlayerIDName();
  virtual ~MsgNodePlayerIDName();

  MsgNodePlayerIDName(const MsgNodePlayerIDName& from);

  inline MsgNodePlayerIDName& operator=(const MsgNodePlayerIDName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNodePlayerIDName& default_instance();

  void Swap(MsgNodePlayerIDName* other);

  // implements Message ----------------------------------------------

  MsgNodePlayerIDName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgNodePlayerIDName& from);
  void MergeFrom(const MsgNodePlayerIDName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.MsgNodePlayerIDName)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static MsgNodePlayerIDName* default_instance_;
};
// -------------------------------------------------------------------

class MessageRepeateNode : public ::google::protobuf::Message {
 public:
  MessageRepeateNode();
  virtual ~MessageRepeateNode();

  MessageRepeateNode(const MessageRepeateNode& from);

  inline MessageRepeateNode& operator=(const MessageRepeateNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageRepeateNode& default_instance();

  void Swap(MessageRepeateNode* other);

  // implements Message ----------------------------------------------

  MessageRepeateNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageRepeateNode& from);
  void MergeFrom(const MessageRepeateNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.MessageNode nodes = 1;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 1;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.MessageRepeateNode)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static MessageRepeateNode* default_instance_;
};
// -------------------------------------------------------------------

class MessageNode : public ::google::protobuf::Message {
 public:
  MessageNode();
  virtual ~MessageNode();

  MessageNode(const MessageNode& from);

  inline MessageNode& operator=(const MessageNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNode& default_instance();

  void Swap(MessageNode* other);

  // implements Message ----------------------------------------------

  MessageNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageNode& from);
  void MergeFrom(const MessageNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.CHAT_MSG_NODE_TYPE node_type = 1;
  inline bool has_node_type() const;
  inline void clear_node_type();
  static const int kNodeTypeFieldNumber = 1;
  inline ::protoc::gameproto::CHAT_MSG_NODE_TYPE node_type() const;
  inline void set_node_type(::protoc::gameproto::CHAT_MSG_NODE_TYPE value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.MessageNode)
 private:
  inline void set_has_node_type();
  inline void clear_has_node_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  int node_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static MessageNode* default_instance_;
};
// -------------------------------------------------------------------

class ChatRpt : public ::google::protobuf::Message {
 public:
  ChatRpt();
  virtual ~ChatRpt();

  ChatRpt(const ChatRpt& from);

  inline ChatRpt& operator=(const ChatRpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpt& default_instance();

  void Swap(ChatRpt* other);

  // implements Message ----------------------------------------------

  ChatRpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatRpt& from);
  void MergeFrom(const ChatRpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::protoc::gameproto::CHAT_MSG_TYPE msg_type() const;
  inline void set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // optional uint64 to_playerid = 3;
  inline bool has_to_playerid() const;
  inline void clear_to_playerid();
  static const int kToPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint64 to_playerid() const;
  inline void set_to_playerid(::google::protobuf::uint64 value);

  // optional string to_playername = 4;
  inline bool has_to_playername() const;
  inline void clear_to_playername();
  static const int kToPlayernameFieldNumber = 4;
  inline const ::std::string& to_playername() const;
  inline void set_to_playername(const ::std::string& value);
  inline void set_to_playername(const char* value);
  inline void set_to_playername(const char* value, size_t size);
  inline ::std::string* mutable_to_playername();
  inline ::std::string* release_to_playername();
  inline void set_allocated_to_playername(::std::string* to_playername);

  // repeated .protoc.gameproto.MessageNode nodes = 5;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 5;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChatRpt)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_to_playerid();
  inline void clear_has_to_playerid();
  inline void set_has_to_playername();
  inline void clear_has_to_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  ::google::protobuf::uint64 to_playerid_;
  ::std::string* to_playername_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;
  int msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChatRpt* default_instance_;
};
// -------------------------------------------------------------------

class ChatNtf : public ::google::protobuf::Message {
 public:
  ChatNtf();
  virtual ~ChatNtf();

  ChatNtf(const ChatNtf& from);

  inline ChatNtf& operator=(const ChatNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatNtf& default_instance();

  void Swap(ChatNtf* other);

  // implements Message ----------------------------------------------

  ChatNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatNtf& from);
  void MergeFrom(const ChatNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::protoc::gameproto::CHAT_MSG_TYPE msg_type() const;
  inline void set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value);

  // repeated .protoc.gameproto.MessageNode nodes = 2;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 2;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChatNtf)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;
  int msg_type_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChatNtf* default_instance_;
};
// -------------------------------------------------------------------

class GSChatNtf : public ::google::protobuf::Message {
 public:
  GSChatNtf();
  virtual ~GSChatNtf();

  GSChatNtf(const GSChatNtf& from);

  inline GSChatNtf& operator=(const GSChatNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSChatNtf& default_instance();

  void Swap(GSChatNtf* other);

  // implements Message ----------------------------------------------

  GSChatNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSChatNtf& from);
  void MergeFrom(const GSChatNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::protoc::gameproto::CHAT_MSG_TYPE msg_type() const;
  inline void set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value);

  // optional uint64 playerid = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // optional uint64 to_playerid = 3;
  inline bool has_to_playerid() const;
  inline void clear_to_playerid();
  static const int kToPlayeridFieldNumber = 3;
  inline ::google::protobuf::uint64 to_playerid() const;
  inline void set_to_playerid(::google::protobuf::uint64 value);

  // optional string to_playername = 4;
  inline bool has_to_playername() const;
  inline void clear_to_playername();
  static const int kToPlayernameFieldNumber = 4;
  inline const ::std::string& to_playername() const;
  inline void set_to_playername(const ::std::string& value);
  inline void set_to_playername(const char* value);
  inline void set_to_playername(const char* value, size_t size);
  inline ::std::string* mutable_to_playername();
  inline ::std::string* release_to_playername();
  inline void set_allocated_to_playername(::std::string* to_playername);

  // repeated .protoc.gameproto.MessageNode nodes = 5;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 5;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GSChatNtf)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_to_playerid();
  inline void clear_has_to_playerid();
  inline void set_has_to_playername();
  inline void clear_has_to_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 to_playerid_;
  ::std::string* to_playername_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;
  int msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GSChatNtf* default_instance_;
};
// -------------------------------------------------------------------

class GSSystemMessageNtf : public ::google::protobuf::Message {
 public:
  GSSystemMessageNtf();
  virtual ~GSSystemMessageNtf();

  GSSystemMessageNtf(const GSSystemMessageNtf& from);

  inline GSSystemMessageNtf& operator=(const GSSystemMessageNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GSSystemMessageNtf& default_instance();

  void Swap(GSSystemMessageNtf* other);

  // implements Message ----------------------------------------------

  GSSystemMessageNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GSSystemMessageNtf& from);
  void MergeFrom(const GSSystemMessageNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.SYSTEM_MSG_TYPE msg_type = 1 [default = E_NORMALL_MSG];
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::protoc::gameproto::SYSTEM_MSG_TYPE msg_type() const;
  inline void set_msg_type(::protoc::gameproto::SYSTEM_MSG_TYPE value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // repeated .protoc.gameproto.MessageNode nodes = 3;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 3;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GSSystemMessageNtf)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;
  int msg_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GSSystemMessageNtf* default_instance_;
};
// -------------------------------------------------------------------

class SystemMessage : public ::google::protobuf::Message {
 public:
  SystemMessage();
  virtual ~SystemMessage();

  SystemMessage(const SystemMessage& from);

  inline SystemMessage& operator=(const SystemMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemMessage& default_instance();

  void Swap(SystemMessage* other);

  // implements Message ----------------------------------------------

  SystemMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemMessage& from);
  void MergeFrom(const SystemMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.SYSTEM_MSG_TYPE msg_type = 1 [default = E_NORMALL_MSG];
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::protoc::gameproto::SYSTEM_MSG_TYPE msg_type() const;
  inline void set_msg_type(::protoc::gameproto::SYSTEM_MSG_TYPE value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // repeated .protoc.gameproto.MessageNode nodes = 3;
  inline int nodes_size() const;
  inline void clear_nodes();
  static const int kNodesFieldNumber = 3;
  inline const ::protoc::gameproto::MessageNode& nodes(int index) const;
  inline ::protoc::gameproto::MessageNode* mutable_nodes(int index);
  inline ::protoc::gameproto::MessageNode* add_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
      nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
      mutable_nodes();

  // optional bool is_my_msg = 4;
  inline bool has_is_my_msg() const;
  inline void clear_is_my_msg();
  static const int kIsMyMsgFieldNumber = 4;
  inline bool is_my_msg() const;
  inline void set_is_my_msg(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SystemMessage)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_is_my_msg();
  inline void clear_has_is_my_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  int msg_type_;
  bool is_my_msg_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode > nodes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SystemMessage* default_instance_;
};
// -------------------------------------------------------------------

class GMExecuteResult : public ::google::protobuf::Message {
 public:
  GMExecuteResult();
  virtual ~GMExecuteResult();

  GMExecuteResult(const GMExecuteResult& from);

  inline GMExecuteResult& operator=(const GMExecuteResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMExecuteResult& default_instance();

  void Swap(GMExecuteResult* other);

  // implements Message ----------------------------------------------

  GMExecuteResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GMExecuteResult& from);
  void MergeFrom(const GMExecuteResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional string msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GMExecuteResult)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GMExecuteResult* default_instance_;
};
// -------------------------------------------------------------------

class TeXiaoItem : public ::google::protobuf::Message {
 public:
  TeXiaoItem();
  virtual ~TeXiaoItem();

  TeXiaoItem(const TeXiaoItem& from);

  inline TeXiaoItem& operator=(const TeXiaoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeXiaoItem& default_instance();

  void Swap(TeXiaoItem* other);

  // implements Message ----------------------------------------------

  TeXiaoItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeXiaoItem& from);
  void MergeFrom(const TeXiaoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TeXiaoItem_ITEM_TYPE ITEM_TYPE;
  static const ITEM_TYPE AWARD_EXP = TeXiaoItem_ITEM_TYPE_AWARD_EXP;
  static const ITEM_TYPE AWARD_GOLD = TeXiaoItem_ITEM_TYPE_AWARD_GOLD;
  static const ITEM_TYPE AWARD_YUAN_BAO = TeXiaoItem_ITEM_TYPE_AWARD_YUAN_BAO;
  static const ITEM_TYPE AWARD_PET = TeXiaoItem_ITEM_TYPE_AWARD_PET;
  static const ITEM_TYPE AWARD_ACTION_COUNT = TeXiaoItem_ITEM_TYPE_AWARD_ACTION_COUNT;
  static const ITEM_TYPE AWARD_FRIENDSHIP = TeXiaoItem_ITEM_TYPE_AWARD_FRIENDSHIP;
  static const ITEM_TYPE AWARD_EQUIP = TeXiaoItem_ITEM_TYPE_AWARD_EQUIP;
  static const ITEM_TYPE AWARD_RANDOM_PET = TeXiaoItem_ITEM_TYPE_AWARD_RANDOM_PET;
  static const ITEM_TYPE AWARD_RANDOM_EQUIP = TeXiaoItem_ITEM_TYPE_AWARD_RANDOM_EQUIP;
  static const ITEM_TYPE AWARD_GOODS = TeXiaoItem_ITEM_TYPE_AWARD_GOODS;
  static inline bool ITEM_TYPE_IsValid(int value) {
    return TeXiaoItem_ITEM_TYPE_IsValid(value);
  }
  static const ITEM_TYPE ITEM_TYPE_MIN =
    TeXiaoItem_ITEM_TYPE_ITEM_TYPE_MIN;
  static const ITEM_TYPE ITEM_TYPE_MAX =
    TeXiaoItem_ITEM_TYPE_ITEM_TYPE_MAX;
  static const int ITEM_TYPE_ARRAYSIZE =
    TeXiaoItem_ITEM_TYPE_ITEM_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ITEM_TYPE_descriptor() {
    return TeXiaoItem_ITEM_TYPE_descriptor();
  }
  static inline const ::std::string& ITEM_TYPE_Name(ITEM_TYPE value) {
    return TeXiaoItem_ITEM_TYPE_Name(value);
  }
  static inline bool ITEM_TYPE_Parse(const ::std::string& name,
      ITEM_TYPE* value) {
    return TeXiaoItem_ITEM_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.TeXiaoItem.ITEM_TYPE itemtype = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  inline ::protoc::gameproto::TeXiaoItem_ITEM_TYPE itemtype() const;
  inline void set_itemtype(::protoc::gameproto::TeXiaoItem_ITEM_TYPE value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TeXiaoItem)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int itemtype_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TeXiaoItem* default_instance_;
};
// -------------------------------------------------------------------

class TeXiao : public ::google::protobuf::Message {
 public:
  TeXiao();
  virtual ~TeXiao();

  TeXiao(const TeXiao& from);

  inline TeXiao& operator=(const TeXiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeXiao& default_instance();

  void Swap(TeXiao* other);

  // implements Message ----------------------------------------------

  TeXiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeXiao& from);
  void MergeFrom(const TeXiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.TEXIAO_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::protoc::gameproto::TEXIAO_TYPE type() const;
  inline void set_type(::protoc::gameproto::TEXIAO_TYPE value);

  // repeated .protoc.gameproto.TeXiaoItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::protoc::gameproto::TeXiaoItem& item(int index) const;
  inline ::protoc::gameproto::TeXiaoItem* mutable_item(int index);
  inline ::protoc::gameproto::TeXiaoItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TeXiao)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem > item_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TeXiao* default_instance_;
};
// -------------------------------------------------------------------

class TeXiaoTypeNtf : public ::google::protobuf::Message {
 public:
  TeXiaoTypeNtf();
  virtual ~TeXiaoTypeNtf();

  TeXiaoTypeNtf(const TeXiaoTypeNtf& from);

  inline TeXiaoTypeNtf& operator=(const TeXiaoTypeNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeXiaoTypeNtf& default_instance();

  void Swap(TeXiaoTypeNtf* other);

  // implements Message ----------------------------------------------

  TeXiaoTypeNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeXiaoTypeNtf& from);
  void MergeFrom(const TeXiaoTypeNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.TeXiao texiao = 1;
  inline bool has_texiao() const;
  inline void clear_texiao();
  static const int kTexiaoFieldNumber = 1;
  inline const ::protoc::gameproto::TeXiao& texiao() const;
  inline ::protoc::gameproto::TeXiao* mutable_texiao();
  inline ::protoc::gameproto::TeXiao* release_texiao();
  inline void set_allocated_texiao(::protoc::gameproto::TeXiao* texiao);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TeXiaoTypeNtf)
 private:
  inline void set_has_texiao();
  inline void clear_has_texiao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::TeXiao* texiao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TeXiaoTypeNtf* default_instance_;
};
// -------------------------------------------------------------------

class GetKeyAwardReq : public ::google::protobuf::Message {
 public:
  GetKeyAwardReq();
  virtual ~GetKeyAwardReq();

  GetKeyAwardReq(const GetKeyAwardReq& from);

  inline GetKeyAwardReq& operator=(const GetKeyAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetKeyAwardReq& default_instance();

  void Swap(GetKeyAwardReq* other);

  // implements Message ----------------------------------------------

  GetKeyAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetKeyAwardReq& from);
  void MergeFrom(const GetKeyAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetKeyAwardReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetKeyAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetKeyAwardAck : public ::google::protobuf::Message {
 public:
  GetKeyAwardAck();
  virtual ~GetKeyAwardAck();

  GetKeyAwardAck(const GetKeyAwardAck& from);

  inline GetKeyAwardAck& operator=(const GetKeyAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetKeyAwardAck& default_instance();

  void Swap(GetKeyAwardAck* other);

  // implements Message ----------------------------------------------

  GetKeyAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetKeyAwardAck& from);
  void MergeFrom(const GetKeyAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetKeyAwardAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetKeyAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class NeedCreatePlayerName : public ::google::protobuf::Message {
 public:
  NeedCreatePlayerName();
  virtual ~NeedCreatePlayerName();

  NeedCreatePlayerName(const NeedCreatePlayerName& from);

  inline NeedCreatePlayerName& operator=(const NeedCreatePlayerName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NeedCreatePlayerName& default_instance();

  void Swap(NeedCreatePlayerName* other);

  // implements Message ----------------------------------------------

  NeedCreatePlayerName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NeedCreatePlayerName& from);
  void MergeFrom(const NeedCreatePlayerName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.NeedCreatePlayerName)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static NeedCreatePlayerName* default_instance_;
};
// -------------------------------------------------------------------

class CreatePlayerNameReq : public ::google::protobuf::Message {
 public:
  CreatePlayerNameReq();
  virtual ~CreatePlayerNameReq();

  CreatePlayerNameReq(const CreatePlayerNameReq& from);

  inline CreatePlayerNameReq& operator=(const CreatePlayerNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePlayerNameReq& default_instance();

  void Swap(CreatePlayerNameReq* other);

  // implements Message ----------------------------------------------

  CreatePlayerNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePlayerNameReq& from);
  void MergeFrom(const CreatePlayerNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string newname = 1;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 1;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // optional uint32 head_pic_id = 2;
  inline bool has_head_pic_id() const;
  inline void clear_head_pic_id();
  static const int kHeadPicIdFieldNumber = 2;
  inline ::google::protobuf::uint32 head_pic_id() const;
  inline void set_head_pic_id(::google::protobuf::uint32 value);

  // optional bool sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline bool sex() const;
  inline void set_sex(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.CreatePlayerNameReq)
 private:
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_head_pic_id();
  inline void clear_has_head_pic_id();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* newname_;
  ::google::protobuf::uint32 head_pic_id_;
  bool sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CreatePlayerNameReq* default_instance_;
};
// -------------------------------------------------------------------

class CreatePlayerNameAck : public ::google::protobuf::Message {
 public:
  CreatePlayerNameAck();
  virtual ~CreatePlayerNameAck();

  CreatePlayerNameAck(const CreatePlayerNameAck& from);

  inline CreatePlayerNameAck& operator=(const CreatePlayerNameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePlayerNameAck& default_instance();

  void Swap(CreatePlayerNameAck* other);

  // implements Message ----------------------------------------------

  CreatePlayerNameAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePlayerNameAck& from);
  void MergeFrom(const CreatePlayerNameAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.CreatePlayerNameAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CreatePlayerNameAck* default_instance_;
};
// -------------------------------------------------------------------

class ShangChengGoods : public ::google::protobuf::Message {
 public:
  ShangChengGoods();
  virtual ~ShangChengGoods();

  ShangChengGoods(const ShangChengGoods& from);

  inline ShangChengGoods& operator=(const ShangChengGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShangChengGoods& default_instance();

  void Swap(ShangChengGoods* other);

  // implements Message ----------------------------------------------

  ShangChengGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShangChengGoods& from);
  void MergeFrom(const ShangChengGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 kind = 2;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 2;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 price_1 = 4;
  inline bool has_price_1() const;
  inline void clear_price_1();
  static const int kPrice1FieldNumber = 4;
  inline ::google::protobuf::uint32 price_1() const;
  inline void set_price_1(::google::protobuf::uint32 value);

  // optional int64 end_time = 5;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional int32 limit_number = 6;
  inline bool has_limit_number() const;
  inline void clear_limit_number();
  static const int kLimitNumberFieldNumber = 6;
  inline ::google::protobuf::int32 limit_number() const;
  inline void set_limit_number(::google::protobuf::int32 value);

  // optional int32 sell_type = 7;
  inline bool has_sell_type() const;
  inline void clear_sell_type();
  static const int kSellTypeFieldNumber = 7;
  inline ::google::protobuf::int32 sell_type() const;
  inline void set_sell_type(::google::protobuf::int32 value);

  // optional int32 percent = 8;
  inline bool has_percent() const;
  inline void clear_percent();
  static const int kPercentFieldNumber = 8;
  inline ::google::protobuf::int32 percent() const;
  inline void set_percent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ShangChengGoods)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_price_1();
  inline void clear_has_price_1();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_limit_number();
  inline void clear_has_limit_number();
  inline void set_has_sell_type();
  inline void clear_has_sell_type();
  inline void set_has_percent();
  inline void clear_has_percent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 price_1_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 limit_number_;
  ::google::protobuf::int32 sell_type_;
  ::google::protobuf::int32 percent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ShangChengGoods* default_instance_;
};
// -------------------------------------------------------------------

class LabelShangChengGoods : public ::google::protobuf::Message {
 public:
  LabelShangChengGoods();
  virtual ~LabelShangChengGoods();

  LabelShangChengGoods(const LabelShangChengGoods& from);

  inline LabelShangChengGoods& operator=(const LabelShangChengGoods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LabelShangChengGoods& default_instance();

  void Swap(LabelShangChengGoods* other);

  // implements Message ----------------------------------------------

  LabelShangChengGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LabelShangChengGoods& from);
  void MergeFrom(const LabelShangChengGoods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string label_name = 1;
  inline bool has_label_name() const;
  inline void clear_label_name();
  static const int kLabelNameFieldNumber = 1;
  inline const ::std::string& label_name() const;
  inline void set_label_name(const ::std::string& value);
  inline void set_label_name(const char* value);
  inline void set_label_name(const char* value, size_t size);
  inline ::std::string* mutable_label_name();
  inline ::std::string* release_label_name();
  inline void set_allocated_label_name(::std::string* label_name);

  // repeated .protoc.gameproto.ShangChengGoods sellgoodslist = 2;
  inline int sellgoodslist_size() const;
  inline void clear_sellgoodslist();
  static const int kSellgoodslistFieldNumber = 2;
  inline const ::protoc::gameproto::ShangChengGoods& sellgoodslist(int index) const;
  inline ::protoc::gameproto::ShangChengGoods* mutable_sellgoodslist(int index);
  inline ::protoc::gameproto::ShangChengGoods* add_sellgoodslist();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ShangChengGoods >&
      sellgoodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ShangChengGoods >*
      mutable_sellgoodslist();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.LabelShangChengGoods)
 private:
  inline void set_has_label_name();
  inline void clear_has_label_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* label_name_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ShangChengGoods > sellgoodslist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static LabelShangChengGoods* default_instance_;
};
// -------------------------------------------------------------------

class GetShangChengGoodsListAck : public ::google::protobuf::Message {
 public:
  GetShangChengGoodsListAck();
  virtual ~GetShangChengGoodsListAck();

  GetShangChengGoodsListAck(const GetShangChengGoodsListAck& from);

  inline GetShangChengGoodsListAck& operator=(const GetShangChengGoodsListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShangChengGoodsListAck& default_instance();

  void Swap(GetShangChengGoodsListAck* other);

  // implements Message ----------------------------------------------

  GetShangChengGoodsListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShangChengGoodsListAck& from);
  void MergeFrom(const GetShangChengGoodsListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shop_id = 1;
  inline bool has_shop_id() const;
  inline void clear_shop_id();
  static const int kShopIdFieldNumber = 1;
  inline ::google::protobuf::uint32 shop_id() const;
  inline void set_shop_id(::google::protobuf::uint32 value);

  // repeated .protoc.gameproto.LabelShangChengGoods labels = 2;
  inline int labels_size() const;
  inline void clear_labels();
  static const int kLabelsFieldNumber = 2;
  inline const ::protoc::gameproto::LabelShangChengGoods& labels(int index) const;
  inline ::protoc::gameproto::LabelShangChengGoods* mutable_labels(int index);
  inline ::protoc::gameproto::LabelShangChengGoods* add_labels();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::LabelShangChengGoods >&
      labels() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::LabelShangChengGoods >*
      mutable_labels();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetShangChengGoodsListAck)
 private:
  inline void set_has_shop_id();
  inline void clear_has_shop_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::LabelShangChengGoods > labels_;
  ::google::protobuf::uint32 shop_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetShangChengGoodsListAck* default_instance_;
};
// -------------------------------------------------------------------

class GetShangChengGoodsListReq : public ::google::protobuf::Message {
 public:
  GetShangChengGoodsListReq();
  virtual ~GetShangChengGoodsListReq();

  GetShangChengGoodsListReq(const GetShangChengGoodsListReq& from);

  inline GetShangChengGoodsListReq& operator=(const GetShangChengGoodsListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShangChengGoodsListReq& default_instance();

  void Swap(GetShangChengGoodsListReq* other);

  // implements Message ----------------------------------------------

  GetShangChengGoodsListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShangChengGoodsListReq& from);
  void MergeFrom(const GetShangChengGoodsListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetShangChengGoodsListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetShangChengGoodsListReq* default_instance_;
};
// -------------------------------------------------------------------

class CommonDialog : public ::google::protobuf::Message {
 public:
  CommonDialog();
  virtual ~CommonDialog();

  CommonDialog(const CommonDialog& from);

  inline CommonDialog& operator=(const CommonDialog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonDialog& default_instance();

  void Swap(CommonDialog* other);

  // implements Message ----------------------------------------------

  CommonDialog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonDialog& from);
  void MergeFrom(const CommonDialog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dlg_id = 1;
  inline bool has_dlg_id() const;
  inline void clear_dlg_id();
  static const int kDlgIdFieldNumber = 1;
  inline ::google::protobuf::int32 dlg_id() const;
  inline void set_dlg_id(::google::protobuf::int32 value);

  // optional .protoc.gameproto.CommonDialogType dlg_type = 2;
  inline bool has_dlg_type() const;
  inline void clear_dlg_type();
  static const int kDlgTypeFieldNumber = 2;
  inline ::protoc::gameproto::CommonDialogType dlg_type() const;
  inline void set_dlg_type(::protoc::gameproto::CommonDialogType value);

  // optional int32 dlg_return = 3;
  inline bool has_dlg_return() const;
  inline void clear_dlg_return();
  static const int kDlgReturnFieldNumber = 3;
  inline ::google::protobuf::int32 dlg_return() const;
  inline void set_dlg_return(::google::protobuf::int32 value);

  // optional string output_text = 4;
  inline bool has_output_text() const;
  inline void clear_output_text();
  static const int kOutputTextFieldNumber = 4;
  inline const ::std::string& output_text() const;
  inline void set_output_text(const ::std::string& value);
  inline void set_output_text(const char* value);
  inline void set_output_text(const char* value, size_t size);
  inline ::std::string* mutable_output_text();
  inline ::std::string* release_output_text();
  inline void set_allocated_output_text(::std::string* output_text);

  // optional string input_text = 5;
  inline bool has_input_text() const;
  inline void clear_input_text();
  static const int kInputTextFieldNumber = 5;
  inline const ::std::string& input_text() const;
  inline void set_input_text(const ::std::string& value);
  inline void set_input_text(const char* value);
  inline void set_input_text(const char* value, size_t size);
  inline ::std::string* mutable_input_text();
  inline ::std::string* release_input_text();
  inline void set_allocated_input_text(::std::string* input_text);

  // optional int32 r32_1 = 6;
  inline bool has_r32_1() const;
  inline void clear_r32_1();
  static const int kR321FieldNumber = 6;
  inline ::google::protobuf::int32 r32_1() const;
  inline void set_r32_1(::google::protobuf::int32 value);

  // optional int32 r32_2 = 7;
  inline bool has_r32_2() const;
  inline void clear_r32_2();
  static const int kR322FieldNumber = 7;
  inline ::google::protobuf::int32 r32_2() const;
  inline void set_r32_2(::google::protobuf::int32 value);

  // optional uint64 r64_1 = 8;
  inline bool has_r64_1() const;
  inline void clear_r64_1();
  static const int kR641FieldNumber = 8;
  inline ::google::protobuf::uint64 r64_1() const;
  inline void set_r64_1(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.CommonDialog)
 private:
  inline void set_has_dlg_id();
  inline void clear_has_dlg_id();
  inline void set_has_dlg_type();
  inline void clear_has_dlg_type();
  inline void set_has_dlg_return();
  inline void clear_has_dlg_return();
  inline void set_has_output_text();
  inline void clear_has_output_text();
  inline void set_has_input_text();
  inline void clear_has_input_text();
  inline void set_has_r32_1();
  inline void clear_has_r32_1();
  inline void set_has_r32_2();
  inline void clear_has_r32_2();
  inline void set_has_r64_1();
  inline void clear_has_r64_1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dlg_id_;
  int dlg_type_;
  ::std::string* output_text_;
  ::google::protobuf::int32 dlg_return_;
  ::google::protobuf::int32 r32_1_;
  ::std::string* input_text_;
  ::google::protobuf::uint64 r64_1_;
  ::google::protobuf::int32 r32_2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CommonDialog* default_instance_;
};
// -------------------------------------------------------------------

class GetGMAward : public ::google::protobuf::Message {
 public:
  GetGMAward();
  virtual ~GetGMAward();

  GetGMAward(const GetGMAward& from);

  inline GetGMAward& operator=(const GetGMAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGMAward& default_instance();

  void Swap(GetGMAward* other);

  // implements Message ----------------------------------------------

  GetGMAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGMAward& from);
  void MergeFrom(const GetGMAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetGMAward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetGMAward* default_instance_;
};
// -------------------------------------------------------------------

class GetGMAwardAck : public ::google::protobuf::Message {
 public:
  GetGMAwardAck();
  virtual ~GetGMAwardAck();

  GetGMAwardAck(const GetGMAwardAck& from);

  inline GetGMAwardAck& operator=(const GetGMAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGMAwardAck& default_instance();

  void Swap(GetGMAwardAck* other);

  // implements Message ----------------------------------------------

  GetGMAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGMAwardAck& from);
  void MergeFrom(const GetGMAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetGMAwardAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetGMAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class UpdateExp : public ::google::protobuf::Message {
 public:
  UpdateExp();
  virtual ~UpdateExp();

  UpdateExp(const UpdateExp& from);

  inline UpdateExp& operator=(const UpdateExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateExp& default_instance();

  void Swap(UpdateExp* other);

  // implements Message ----------------------------------------------

  UpdateExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateExp& from);
  void MergeFrom(const UpdateExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateExp)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateExp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGold : public ::google::protobuf::Message {
 public:
  UpdateGold();
  virtual ~UpdateGold();

  UpdateGold(const UpdateGold& from);

  inline UpdateGold& operator=(const UpdateGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGold& default_instance();

  void Swap(UpdateGold* other);

  // implements Message ----------------------------------------------

  UpdateGold* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGold& from);
  void MergeFrom(const UpdateGold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateGold)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateGold* default_instance_;
};
// -------------------------------------------------------------------

class UpdateLevel : public ::google::protobuf::Message {
 public:
  UpdateLevel();
  virtual ~UpdateLevel();

  UpdateLevel(const UpdateLevel& from);

  inline UpdateLevel& operator=(const UpdateLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateLevel& default_instance();

  void Swap(UpdateLevel* other);

  // implements Message ----------------------------------------------

  UpdateLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateLevel& from);
  void MergeFrom(const UpdateLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateLevel)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateLevel* default_instance_;
};
// -------------------------------------------------------------------

class UpdateYuanBao : public ::google::protobuf::Message {
 public:
  UpdateYuanBao();
  virtual ~UpdateYuanBao();

  UpdateYuanBao(const UpdateYuanBao& from);

  inline UpdateYuanBao& operator=(const UpdateYuanBao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateYuanBao& default_instance();

  void Swap(UpdateYuanBao* other);

  // implements Message ----------------------------------------------

  UpdateYuanBao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateYuanBao& from);
  void MergeFrom(const UpdateYuanBao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 yuan_bao = 1;
  inline bool has_yuan_bao() const;
  inline void clear_yuan_bao();
  static const int kYuanBaoFieldNumber = 1;
  inline ::google::protobuf::uint32 yuan_bao() const;
  inline void set_yuan_bao(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateYuanBao)
 private:
  inline void set_has_yuan_bao();
  inline void clear_has_yuan_bao();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 yuan_bao_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateYuanBao* default_instance_;
};
// -------------------------------------------------------------------

class PetRecord : public ::google::protobuf::Message {
 public:
  PetRecord();
  virtual ~PetRecord();

  PetRecord(const PetRecord& from);

  inline PetRecord& operator=(const PetRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetRecord& default_instance();

  void Swap(PetRecord* other);

  // implements Message ----------------------------------------------

  PetRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetRecord& from);
  void MergeFrom(const PetRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwid = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // optional uint32 pet_id = 2;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 2;
  inline ::google::protobuf::uint32 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint32 value);

  // optional .protoc.gameproto.PET_POSITION position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline ::protoc::gameproto::PET_POSITION position() const;
  inline void set_position(::protoc::gameproto::PET_POSITION value);

  // optional uint32 bind = 4;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 4;
  inline ::google::protobuf::uint32 bind() const;
  inline void set_bind(::google::protobuf::uint32 value);

  // optional uint32 recover = 5;
  inline bool has_recover() const;
  inline void clear_recover();
  static const int kRecoverFieldNumber = 5;
  inline ::google::protobuf::uint32 recover() const;
  inline void set_recover(::google::protobuf::uint32 value);

  // optional float dps = 6;
  inline bool has_dps() const;
  inline void clear_dps();
  static const int kDpsFieldNumber = 6;
  inline float dps() const;
  inline void set_dps(float value);

  // optional uint32 hp = 7;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 7;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 action_skill = 10;
  inline bool has_action_skill() const;
  inline void clear_action_skill();
  static const int kActionSkillFieldNumber = 10;
  inline ::google::protobuf::uint32 action_skill() const;
  inline void set_action_skill(::google::protobuf::uint32 value);

  // optional uint32 leader_skill = 11;
  inline bool has_leader_skill() const;
  inline void clear_leader_skill();
  static const int kLeaderSkillFieldNumber = 11;
  inline ::google::protobuf::uint32 leader_skill() const;
  inline void set_leader_skill(::google::protobuf::uint32 value);

  // repeated uint32 passive_skill = 12;
  inline int passive_skill_size() const;
  inline void clear_passive_skill();
  static const int kPassiveSkillFieldNumber = 12;
  inline ::google::protobuf::uint32 passive_skill(int index) const;
  inline void set_passive_skill(int index, ::google::protobuf::uint32 value);
  inline void add_passive_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      passive_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_passive_skill();

  // optional int64 create_time = 13;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 13;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional uint32 protect = 14;
  inline bool has_protect() const;
  inline void clear_protect();
  static const int kProtectFieldNumber = 14;
  inline ::google::protobuf::uint32 protect() const;
  inline void set_protect(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 15;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // repeated uint64 equip_id = 16;
  inline int equip_id_size() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 16;
  inline ::google::protobuf::uint64 equip_id(int index) const;
  inline void set_equip_id(int index, ::google::protobuf::uint64 value);
  inline void add_equip_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_id();

  // optional bool new_state = 17;
  inline bool has_new_state() const;
  inline void clear_new_state();
  static const int kNewStateFieldNumber = 17;
  inline bool new_state() const;
  inline void set_new_state(bool value);

  // optional uint32 pvp_number = 18;
  inline bool has_pvp_number() const;
  inline void clear_pvp_number();
  static const int kPvpNumberFieldNumber = 18;
  inline ::google::protobuf::uint32 pvp_number() const;
  inline void set_pvp_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetRecord)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_recover();
  inline void clear_has_recover();
  inline void set_has_dps();
  inline void clear_has_dps();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_action_skill();
  inline void clear_has_action_skill();
  inline void set_has_leader_skill();
  inline void clear_has_leader_skill();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_protect();
  inline void clear_has_protect();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_new_state();
  inline void clear_has_new_state();
  inline void set_has_pvp_number();
  inline void clear_has_pvp_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::google::protobuf::uint32 pet_id_;
  int position_;
  ::google::protobuf::uint32 bind_;
  ::google::protobuf::uint32 recover_;
  float dps_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 action_skill_;
  ::google::protobuf::uint32 leader_skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > passive_skill_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::uint32 protect_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_id_;
  bool new_state_;
  ::google::protobuf::uint32 pvp_number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetRecord* default_instance_;
};
// -------------------------------------------------------------------

class PetRecordSIGN : public ::google::protobuf::Message {
 public:
  PetRecordSIGN();
  virtual ~PetRecordSIGN();

  PetRecordSIGN(const PetRecordSIGN& from);

  inline PetRecordSIGN& operator=(const PetRecordSIGN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetRecordSIGN& default_instance();

  void Swap(PetRecordSIGN* other);

  // implements Message ----------------------------------------------

  PetRecordSIGN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetRecordSIGN& from);
  void MergeFrom(const PetRecordSIGN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwid = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // optional bytes sign_pet_id = 2;
  inline bool has_sign_pet_id() const;
  inline void clear_sign_pet_id();
  static const int kSignPetIdFieldNumber = 2;
  inline const ::std::string& sign_pet_id() const;
  inline void set_sign_pet_id(const ::std::string& value);
  inline void set_sign_pet_id(const char* value);
  inline void set_sign_pet_id(const void* value, size_t size);
  inline ::std::string* mutable_sign_pet_id();
  inline ::std::string* release_sign_pet_id();
  inline void set_allocated_sign_pet_id(::std::string* sign_pet_id);

  // optional bytes sign_recover = 3;
  inline bool has_sign_recover() const;
  inline void clear_sign_recover();
  static const int kSignRecoverFieldNumber = 3;
  inline const ::std::string& sign_recover() const;
  inline void set_sign_recover(const ::std::string& value);
  inline void set_sign_recover(const char* value);
  inline void set_sign_recover(const void* value, size_t size);
  inline ::std::string* mutable_sign_recover();
  inline ::std::string* release_sign_recover();
  inline void set_allocated_sign_recover(::std::string* sign_recover);

  // optional bytes sign_dps = 4;
  inline bool has_sign_dps() const;
  inline void clear_sign_dps();
  static const int kSignDpsFieldNumber = 4;
  inline const ::std::string& sign_dps() const;
  inline void set_sign_dps(const ::std::string& value);
  inline void set_sign_dps(const char* value);
  inline void set_sign_dps(const void* value, size_t size);
  inline ::std::string* mutable_sign_dps();
  inline ::std::string* release_sign_dps();
  inline void set_allocated_sign_dps(::std::string* sign_dps);

  // optional bytes sign_hp = 5;
  inline bool has_sign_hp() const;
  inline void clear_sign_hp();
  static const int kSignHpFieldNumber = 5;
  inline const ::std::string& sign_hp() const;
  inline void set_sign_hp(const ::std::string& value);
  inline void set_sign_hp(const char* value);
  inline void set_sign_hp(const void* value, size_t size);
  inline ::std::string* mutable_sign_hp();
  inline ::std::string* release_sign_hp();
  inline void set_allocated_sign_hp(::std::string* sign_hp);

  // optional bytes sign_action_skill = 6;
  inline bool has_sign_action_skill() const;
  inline void clear_sign_action_skill();
  static const int kSignActionSkillFieldNumber = 6;
  inline const ::std::string& sign_action_skill() const;
  inline void set_sign_action_skill(const ::std::string& value);
  inline void set_sign_action_skill(const char* value);
  inline void set_sign_action_skill(const void* value, size_t size);
  inline ::std::string* mutable_sign_action_skill();
  inline ::std::string* release_sign_action_skill();
  inline void set_allocated_sign_action_skill(::std::string* sign_action_skill);

  // optional bytes sign_leader_skill = 7;
  inline bool has_sign_leader_skill() const;
  inline void clear_sign_leader_skill();
  static const int kSignLeaderSkillFieldNumber = 7;
  inline const ::std::string& sign_leader_skill() const;
  inline void set_sign_leader_skill(const ::std::string& value);
  inline void set_sign_leader_skill(const char* value);
  inline void set_sign_leader_skill(const void* value, size_t size);
  inline ::std::string* mutable_sign_leader_skill();
  inline ::std::string* release_sign_leader_skill();
  inline void set_allocated_sign_leader_skill(::std::string* sign_leader_skill);

  // optional bytes sign_skill_level = 8;
  inline bool has_sign_skill_level() const;
  inline void clear_sign_skill_level();
  static const int kSignSkillLevelFieldNumber = 8;
  inline const ::std::string& sign_skill_level() const;
  inline void set_sign_skill_level(const ::std::string& value);
  inline void set_sign_skill_level(const char* value);
  inline void set_sign_skill_level(const void* value, size_t size);
  inline ::std::string* mutable_sign_skill_level();
  inline ::std::string* release_sign_skill_level();
  inline void set_allocated_sign_skill_level(::std::string* sign_skill_level);

  // optional bytes sign_mp = 9;
  inline bool has_sign_mp() const;
  inline void clear_sign_mp();
  static const int kSignMpFieldNumber = 9;
  inline const ::std::string& sign_mp() const;
  inline void set_sign_mp(const ::std::string& value);
  inline void set_sign_mp(const char* value);
  inline void set_sign_mp(const void* value, size_t size);
  inline ::std::string* mutable_sign_mp();
  inline ::std::string* release_sign_mp();
  inline void set_allocated_sign_mp(::std::string* sign_mp);

  // optional bytes sign_spirit = 10;
  inline bool has_sign_spirit() const;
  inline void clear_sign_spirit();
  static const int kSignSpiritFieldNumber = 10;
  inline const ::std::string& sign_spirit() const;
  inline void set_sign_spirit(const ::std::string& value);
  inline void set_sign_spirit(const char* value);
  inline void set_sign_spirit(const void* value, size_t size);
  inline ::std::string* mutable_sign_spirit();
  inline ::std::string* release_sign_spirit();
  inline void set_allocated_sign_spirit(::std::string* sign_spirit);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetRecordSIGN)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();
  inline void set_has_sign_pet_id();
  inline void clear_has_sign_pet_id();
  inline void set_has_sign_recover();
  inline void clear_has_sign_recover();
  inline void set_has_sign_dps();
  inline void clear_has_sign_dps();
  inline void set_has_sign_hp();
  inline void clear_has_sign_hp();
  inline void set_has_sign_action_skill();
  inline void clear_has_sign_action_skill();
  inline void set_has_sign_leader_skill();
  inline void clear_has_sign_leader_skill();
  inline void set_has_sign_skill_level();
  inline void clear_has_sign_skill_level();
  inline void set_has_sign_mp();
  inline void clear_has_sign_mp();
  inline void set_has_sign_spirit();
  inline void clear_has_sign_spirit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::std::string* sign_pet_id_;
  ::std::string* sign_recover_;
  ::std::string* sign_dps_;
  ::std::string* sign_hp_;
  ::std::string* sign_action_skill_;
  ::std::string* sign_leader_skill_;
  ::std::string* sign_skill_level_;
  ::std::string* sign_mp_;
  ::std::string* sign_spirit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetRecordSIGN* default_instance_;
};
// -------------------------------------------------------------------

class AddPet : public ::google::protobuf::Message {
 public:
  AddPet();
  virtual ~AddPet();

  AddPet(const AddPet& from);

  inline AddPet& operator=(const AddPet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPet& default_instance();

  void Swap(AddPet* other);

  // implements Message ----------------------------------------------

  AddPet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPet& from);
  void MergeFrom(const AddPet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.PetRecord pet = 1;
  inline bool has_pet() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 1;
  inline const ::protoc::gameproto::PetRecord& pet() const;
  inline ::protoc::gameproto::PetRecord* mutable_pet();
  inline ::protoc::gameproto::PetRecord* release_pet();
  inline void set_allocated_pet(::protoc::gameproto::PetRecord* pet);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddPet)
 private:
  inline void set_has_pet();
  inline void clear_has_pet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::PetRecord* pet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddPet* default_instance_;
};
// -------------------------------------------------------------------

class DelPet : public ::google::protobuf::Message {
 public:
  DelPet();
  virtual ~DelPet();

  DelPet(const DelPet& from);

  inline DelPet& operator=(const DelPet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelPet& default_instance();

  void Swap(DelPet* other);

  // implements Message ----------------------------------------------

  DelPet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelPet& from);
  void MergeFrom(const DelPet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelPet)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelPet* default_instance_;
};
// -------------------------------------------------------------------

class UpdatePet : public ::google::protobuf::Message {
 public:
  UpdatePet();
  virtual ~UpdatePet();

  UpdatePet(const UpdatePet& from);

  inline UpdatePet& operator=(const UpdatePet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePet& default_instance();

  void Swap(UpdatePet* other);

  // implements Message ----------------------------------------------

  UpdatePet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePet& from);
  void MergeFrom(const UpdatePet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.PetRecord pet = 1;
  inline bool has_pet() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 1;
  inline const ::protoc::gameproto::PetRecord& pet() const;
  inline ::protoc::gameproto::PetRecord* mutable_pet();
  inline ::protoc::gameproto::PetRecord* release_pet();
  inline void set_allocated_pet(::protoc::gameproto::PetRecord* pet);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdatePet)
 private:
  inline void set_has_pet();
  inline void clear_has_pet();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::PetRecord* pet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdatePet* default_instance_;
};
// -------------------------------------------------------------------

class PetList : public ::google::protobuf::Message {
 public:
  PetList();
  virtual ~PetList();

  PetList(const PetList& from);

  inline PetList& operator=(const PetList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetList& default_instance();

  void Swap(PetList* other);

  // implements Message ----------------------------------------------

  PetList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetList& from);
  void MergeFrom(const PetList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PetRecord talbe = 1;
  inline int talbe_size() const;
  inline void clear_talbe();
  static const int kTalbeFieldNumber = 1;
  inline const ::protoc::gameproto::PetRecord& talbe(int index) const;
  inline ::protoc::gameproto::PetRecord* mutable_talbe(int index);
  inline ::protoc::gameproto::PetRecord* add_talbe();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
      talbe() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
      mutable_talbe();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord > talbe_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetList* default_instance_;
};
// -------------------------------------------------------------------

class SystemData : public ::google::protobuf::Message {
 public:
  SystemData();
  virtual ~SystemData();

  SystemData(const SystemData& from);

  inline SystemData& operator=(const SystemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemData& default_instance();

  void Swap(SystemData* other);

  // implements Message ----------------------------------------------

  SystemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemData& from);
  void MergeFrom(const SystemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // optional uint32 msg_type = 2;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);

  // optional string send_name = 3;
  inline bool has_send_name() const;
  inline void clear_send_name();
  static const int kSendNameFieldNumber = 3;
  inline const ::std::string& send_name() const;
  inline void set_send_name(const ::std::string& value);
  inline void set_send_name(const char* value);
  inline void set_send_name(const char* value, size_t size);
  inline ::std::string* mutable_send_name();
  inline ::std::string* release_send_name();
  inline void set_allocated_send_name(::std::string* send_name);

  // optional string title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional bool read_flag = 5;
  inline bool has_read_flag() const;
  inline void clear_read_flag();
  static const int kReadFlagFieldNumber = 5;
  inline bool read_flag() const;
  inline void set_read_flag(bool value);

  // optional int64 msg_time = 6;
  inline bool has_msg_time() const;
  inline void clear_msg_time();
  static const int kMsgTimeFieldNumber = 6;
  inline ::google::protobuf::int64 msg_time() const;
  inline void set_msg_time(::google::protobuf::int64 value);

  // optional string award = 7;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 7;
  inline const ::std::string& award() const;
  inline void set_award(const ::std::string& value);
  inline void set_award(const char* value);
  inline void set_award(const char* value, size_t size);
  inline ::std::string* mutable_award();
  inline ::std::string* release_award();
  inline void set_allocated_award(::std::string* award);

  // optional uint32 last_days = 8;
  inline bool has_last_days() const;
  inline void clear_last_days();
  static const int kLastDaysFieldNumber = 8;
  inline ::google::protobuf::uint32 last_days() const;
  inline void set_last_days(::google::protobuf::uint32 value);

  // optional string content = 9;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 9;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SystemData)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_send_name();
  inline void clear_has_send_name();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_read_flag();
  inline void clear_has_read_flag();
  inline void set_has_msg_time();
  inline void clear_has_msg_time();
  inline void set_has_award();
  inline void clear_has_award();
  inline void set_has_last_days();
  inline void clear_has_last_days();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;
  ::std::string* send_name_;
  ::google::protobuf::uint32 msg_type_;
  bool read_flag_;
  ::std::string* title_;
  ::google::protobuf::int64 msg_time_;
  ::std::string* award_;
  ::std::string* content_;
  ::google::protobuf::uint32 last_days_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SystemData* default_instance_;
};
// -------------------------------------------------------------------

class GetAllSysMsgReq : public ::google::protobuf::Message {
 public:
  GetAllSysMsgReq();
  virtual ~GetAllSysMsgReq();

  GetAllSysMsgReq(const GetAllSysMsgReq& from);

  inline GetAllSysMsgReq& operator=(const GetAllSysMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllSysMsgReq& default_instance();

  void Swap(GetAllSysMsgReq* other);

  // implements Message ----------------------------------------------

  GetAllSysMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllSysMsgReq& from);
  void MergeFrom(const GetAllSysMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAllSysMsgReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAllSysMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllSysMsgAck : public ::google::protobuf::Message {
 public:
  GetAllSysMsgAck();
  virtual ~GetAllSysMsgAck();

  GetAllSysMsgAck(const GetAllSysMsgAck& from);

  inline GetAllSysMsgAck& operator=(const GetAllSysMsgAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllSysMsgAck& default_instance();

  void Swap(GetAllSysMsgAck* other);

  // implements Message ----------------------------------------------

  GetAllSysMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllSysMsgAck& from);
  void MergeFrom(const GetAllSysMsgAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.SystemData sysmsg = 1;
  inline int sysmsg_size() const;
  inline void clear_sysmsg();
  static const int kSysmsgFieldNumber = 1;
  inline const ::protoc::gameproto::SystemData& sysmsg(int index) const;
  inline ::protoc::gameproto::SystemData* mutable_sysmsg(int index);
  inline ::protoc::gameproto::SystemData* add_sysmsg();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SystemData >&
      sysmsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SystemData >*
      mutable_sysmsg();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAllSysMsgAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SystemData > sysmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAllSysMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSysMsgReq : public ::google::protobuf::Message {
 public:
  DeleteSysMsgReq();
  virtual ~DeleteSysMsgReq();

  DeleteSysMsgReq(const DeleteSysMsgReq& from);

  inline DeleteSysMsgReq& operator=(const DeleteSysMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSysMsgReq& default_instance();

  void Swap(DeleteSysMsgReq* other);

  // implements Message ----------------------------------------------

  DeleteSysMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteSysMsgReq& from);
  void MergeFrom(const DeleteSysMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 msg_ids = 1;
  inline int msg_ids_size() const;
  inline void clear_msg_ids();
  static const int kMsgIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_ids(int index) const;
  inline void set_msg_ids(int index, ::google::protobuf::uint64 value);
  inline void add_msg_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      msg_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_msg_ids();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DeleteSysMsgReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > msg_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DeleteSysMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSysMsgAck : public ::google::protobuf::Message {
 public:
  DeleteSysMsgAck();
  virtual ~DeleteSysMsgAck();

  DeleteSysMsgAck(const DeleteSysMsgAck& from);

  inline DeleteSysMsgAck& operator=(const DeleteSysMsgAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteSysMsgAck& default_instance();

  void Swap(DeleteSysMsgAck* other);

  // implements Message ----------------------------------------------

  DeleteSysMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteSysMsgAck& from);
  void MergeFrom(const DeleteSysMsgAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DeleteSysMsgAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DeleteSysMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class SendSysMsgReq : public ::google::protobuf::Message {
 public:
  SendSysMsgReq();
  virtual ~SendSysMsgReq();

  SendSysMsgReq(const SendSysMsgReq& from);

  inline SendSysMsgReq& operator=(const SendSysMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSysMsgReq& default_instance();

  void Swap(SendSysMsgReq* other);

  // implements Message ----------------------------------------------

  SendSysMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendSysMsgReq& from);
  void MergeFrom(const SendSysMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 1;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // optional string theme = 2;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 2;
  inline const ::std::string& theme() const;
  inline void set_theme(const ::std::string& value);
  inline void set_theme(const char* value);
  inline void set_theme(const char* value, size_t size);
  inline ::std::string* mutable_theme();
  inline ::std::string* release_theme();
  inline void set_allocated_theme(::std::string* theme);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional uint64 playerid = 4;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  inline ::google::protobuf::uint64 playerid() const;
  inline void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SendSysMsgReq)
 private:
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* player_name_;
  ::std::string* theme_;
  ::std::string* content_;
  ::google::protobuf::uint64 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SendSysMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class SendSysMsgAck : public ::google::protobuf::Message {
 public:
  SendSysMsgAck();
  virtual ~SendSysMsgAck();

  SendSysMsgAck(const SendSysMsgAck& from);

  inline SendSysMsgAck& operator=(const SendSysMsgAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSysMsgAck& default_instance();

  void Swap(SendSysMsgAck* other);

  // implements Message ----------------------------------------------

  SendSysMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendSysMsgAck& from);
  void MergeFrom(const SendSysMsgAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SendSysMsgAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SendSysMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class ReadSysMsgReq : public ::google::protobuf::Message {
 public:
  ReadSysMsgReq();
  virtual ~ReadSysMsgReq();

  ReadSysMsgReq(const ReadSysMsgReq& from);

  inline ReadSysMsgReq& operator=(const ReadSysMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSysMsgReq& default_instance();

  void Swap(ReadSysMsgReq* other);

  // implements Message ----------------------------------------------

  ReadSysMsgReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadSysMsgReq& from);
  void MergeFrom(const ReadSysMsgReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReadSysMsgReq)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReadSysMsgReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadSysMsgAck : public ::google::protobuf::Message {
 public:
  ReadSysMsgAck();
  virtual ~ReadSysMsgAck();

  ReadSysMsgAck(const ReadSysMsgAck& from);

  inline ReadSysMsgAck& operator=(const ReadSysMsgAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadSysMsgAck& default_instance();

  void Swap(ReadSysMsgAck* other);

  // implements Message ----------------------------------------------

  ReadSysMsgAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadSysMsgAck& from);
  void MergeFrom(const ReadSysMsgAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReadSysMsgAck)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;
  ::std::string* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReadSysMsgAck* default_instance_;
};
// -------------------------------------------------------------------

class GetEmailAwardReq : public ::google::protobuf::Message {
 public:
  GetEmailAwardReq();
  virtual ~GetEmailAwardReq();

  GetEmailAwardReq(const GetEmailAwardReq& from);

  inline GetEmailAwardReq& operator=(const GetEmailAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEmailAwardReq& default_instance();

  void Swap(GetEmailAwardReq* other);

  // implements Message ----------------------------------------------

  GetEmailAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEmailAwardReq& from);
  void MergeFrom(const GetEmailAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetEmailAwardReq)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetEmailAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetEmailAwardAck : public ::google::protobuf::Message {
 public:
  GetEmailAwardAck();
  virtual ~GetEmailAwardAck();

  GetEmailAwardAck(const GetEmailAwardAck& from);

  inline GetEmailAwardAck& operator=(const GetEmailAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEmailAwardAck& default_instance();

  void Swap(GetEmailAwardAck* other);

  // implements Message ----------------------------------------------

  GetEmailAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEmailAwardAck& from);
  void MergeFrom(const GetEmailAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetEmailAwardAck)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetEmailAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyGetEmailAwardReq : public ::google::protobuf::Message {
 public:
  OneKeyGetEmailAwardReq();
  virtual ~OneKeyGetEmailAwardReq();

  OneKeyGetEmailAwardReq(const OneKeyGetEmailAwardReq& from);

  inline OneKeyGetEmailAwardReq& operator=(const OneKeyGetEmailAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneKeyGetEmailAwardReq& default_instance();

  void Swap(OneKeyGetEmailAwardReq* other);

  // implements Message ----------------------------------------------

  OneKeyGetEmailAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneKeyGetEmailAwardReq& from);
  void MergeFrom(const OneKeyGetEmailAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 msg_id = 1;
  inline int msg_id_size() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint64 msg_id(int index) const;
  inline void set_msg_id(int index, ::google::protobuf::uint64 value);
  inline void add_msg_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      msg_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_msg_id();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneKeyGetEmailAwardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneKeyGetEmailAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class EmailMessageNtf : public ::google::protobuf::Message {
 public:
  EmailMessageNtf();
  virtual ~EmailMessageNtf();

  EmailMessageNtf(const EmailMessageNtf& from);

  inline EmailMessageNtf& operator=(const EmailMessageNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmailMessageNtf& default_instance();

  void Swap(EmailMessageNtf* other);

  // implements Message ----------------------------------------------

  EmailMessageNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmailMessageNtf& from);
  void MergeFrom(const EmailMessageNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.EmailMessageNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static EmailMessageNtf* default_instance_;
};
// -------------------------------------------------------------------

class ProtectPetReq : public ::google::protobuf::Message {
 public:
  ProtectPetReq();
  virtual ~ProtectPetReq();

  ProtectPetReq(const ProtectPetReq& from);

  inline ProtectPetReq& operator=(const ProtectPetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtectPetReq& default_instance();

  void Swap(ProtectPetReq* other);

  // implements Message ----------------------------------------------

  ProtectPetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtectPetReq& from);
  void MergeFrom(const ProtectPetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ProtectPetReq)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ProtectPetReq* default_instance_;
};
// -------------------------------------------------------------------

class ProtectPetAck : public ::google::protobuf::Message {
 public:
  ProtectPetAck();
  virtual ~ProtectPetAck();

  ProtectPetAck(const ProtectPetAck& from);

  inline ProtectPetAck& operator=(const ProtectPetAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtectPetAck& default_instance();

  void Swap(ProtectPetAck* other);

  // implements Message ----------------------------------------------

  ProtectPetAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtectPetAck& from);
  void MergeFrom(const ProtectPetAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ProtectPetAck)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ProtectPetAck* default_instance_;
};
// -------------------------------------------------------------------

class SellPetToSysReq : public ::google::protobuf::Message {
 public:
  SellPetToSysReq();
  virtual ~SellPetToSysReq();

  SellPetToSysReq(const SellPetToSysReq& from);

  inline SellPetToSysReq& operator=(const SellPetToSysReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellPetToSysReq& default_instance();

  void Swap(SellPetToSysReq* other);

  // implements Message ----------------------------------------------

  SellPetToSysReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellPetToSysReq& from);
  void MergeFrom(const SellPetToSysReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 pet_ids = 1;
  inline int pet_ids_size() const;
  inline void clear_pet_ids();
  static const int kPetIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_ids(int index) const;
  inline void set_pet_ids(int index, ::google::protobuf::uint64 value);
  inline void add_pet_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pet_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pet_ids();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SellPetToSysReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pet_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SellPetToSysReq* default_instance_;
};
// -------------------------------------------------------------------

class SellPetToSysAck : public ::google::protobuf::Message {
 public:
  SellPetToSysAck();
  virtual ~SellPetToSysAck();

  SellPetToSysAck(const SellPetToSysAck& from);

  inline SellPetToSysAck& operator=(const SellPetToSysAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellPetToSysAck& default_instance();

  void Swap(SellPetToSysAck* other);

  // implements Message ----------------------------------------------

  SellPetToSysAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellPetToSysAck& from);
  void MergeFrom(const SellPetToSysAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 pet_ids = 1;
  inline int pet_ids_size() const;
  inline void clear_pet_ids();
  static const int kPetIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_ids(int index) const;
  inline void set_pet_ids(int index, ::google::protobuf::uint64 value);
  inline void add_pet_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pet_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pet_ids();

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SellPetToSysAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pet_ids_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SellPetToSysAck* default_instance_;
};
// -------------------------------------------------------------------

class PetInBianDui : public ::google::protobuf::Message {
 public:
  PetInBianDui();
  virtual ~PetInBianDui();

  PetInBianDui(const PetInBianDui& from);

  inline PetInBianDui& operator=(const PetInBianDui& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetInBianDui& default_instance();

  void Swap(PetInBianDui* other);

  // implements Message ----------------------------------------------

  PetInBianDui* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetInBianDui& from);
  void MergeFrom(const PetInBianDui& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional uint32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // optional uint32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetInBianDui)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetInBianDui* default_instance_;
};
// -------------------------------------------------------------------

class BianDuiData : public ::google::protobuf::Message {
 public:
  BianDuiData();
  virtual ~BianDuiData();

  BianDuiData(const BianDuiData& from);

  inline BianDuiData& operator=(const BianDuiData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BianDuiData& default_instance();

  void Swap(BianDuiData* other);

  // implements Message ----------------------------------------------

  BianDuiData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BianDuiData& from);
  void MergeFrom(const BianDuiData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 admin_pet_id = 3;
  inline bool has_admin_pet_id() const;
  inline void clear_admin_pet_id();
  static const int kAdminPetIdFieldNumber = 3;
  inline ::google::protobuf::uint64 admin_pet_id() const;
  inline void set_admin_pet_id(::google::protobuf::uint64 value);

  // repeated .protoc.gameproto.PetInBianDui pet = 4;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 4;
  inline const ::protoc::gameproto::PetInBianDui& pet(int index) const;
  inline ::protoc::gameproto::PetInBianDui* mutable_pet(int index);
  inline ::protoc::gameproto::PetInBianDui* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetInBianDui >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetInBianDui >*
      mutable_pet();

  // optional int32 total_attack = 5;
  inline bool has_total_attack() const;
  inline void clear_total_attack();
  static const int kTotalAttackFieldNumber = 5;
  inline ::google::protobuf::int32 total_attack() const;
  inline void set_total_attack(::google::protobuf::int32 value);

  // optional bool state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline bool state() const;
  inline void set_state(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BianDuiData)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_admin_pet_id();
  inline void clear_has_admin_pet_id();
  inline void set_has_total_attack();
  inline void clear_has_total_attack();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint64 admin_pet_id_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 total_attack_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetInBianDui > pet_;
  bool state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BianDuiData* default_instance_;
};
// -------------------------------------------------------------------

class BianDuiList : public ::google::protobuf::Message {
 public:
  BianDuiList();
  virtual ~BianDuiList();

  BianDuiList(const BianDuiList& from);

  inline BianDuiList& operator=(const BianDuiList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BianDuiList& default_instance();

  void Swap(BianDuiList* other);

  // implements Message ----------------------------------------------

  BianDuiList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BianDuiList& from);
  void MergeFrom(const BianDuiList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.BianDuiData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::BianDuiData& data(int index) const;
  inline ::protoc::gameproto::BianDuiData* mutable_data(int index);
  inline ::protoc::gameproto::BianDuiData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BianDuiData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BianDuiData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BianDuiList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BianDuiData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BianDuiList* default_instance_;
};
// -------------------------------------------------------------------

class SubBianDuiReq : public ::google::protobuf::Message {
 public:
  SubBianDuiReq();
  virtual ~SubBianDuiReq();

  SubBianDuiReq(const SubBianDuiReq& from);

  inline SubBianDuiReq& operator=(const SubBianDuiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubBianDuiReq& default_instance();

  void Swap(SubBianDuiReq* other);

  // implements Message ----------------------------------------------

  SubBianDuiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubBianDuiReq& from);
  void MergeFrom(const SubBianDuiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BianDuiData biandui = 1;
  inline bool has_biandui() const;
  inline void clear_biandui();
  static const int kBianduiFieldNumber = 1;
  inline const ::protoc::gameproto::BianDuiData& biandui() const;
  inline ::protoc::gameproto::BianDuiData* mutable_biandui();
  inline ::protoc::gameproto::BianDuiData* release_biandui();
  inline void set_allocated_biandui(::protoc::gameproto::BianDuiData* biandui);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SubBianDuiReq)
 private:
  inline void set_has_biandui();
  inline void clear_has_biandui();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::BianDuiData* biandui_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SubBianDuiReq* default_instance_;
};
// -------------------------------------------------------------------

class SubBianDuiAck : public ::google::protobuf::Message {
 public:
  SubBianDuiAck();
  virtual ~SubBianDuiAck();

  SubBianDuiAck(const SubBianDuiAck& from);

  inline SubBianDuiAck& operator=(const SubBianDuiAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubBianDuiAck& default_instance();

  void Swap(SubBianDuiAck* other);

  // implements Message ----------------------------------------------

  SubBianDuiAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubBianDuiAck& from);
  void MergeFrom(const SubBianDuiAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SubBianDuiAck)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SubBianDuiAck* default_instance_;
};
// -------------------------------------------------------------------

class ModifyBianDuiNameReq : public ::google::protobuf::Message {
 public:
  ModifyBianDuiNameReq();
  virtual ~ModifyBianDuiNameReq();

  ModifyBianDuiNameReq(const ModifyBianDuiNameReq& from);

  inline ModifyBianDuiNameReq& operator=(const ModifyBianDuiNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyBianDuiNameReq& default_instance();

  void Swap(ModifyBianDuiNameReq* other);

  // implements Message ----------------------------------------------

  ModifyBianDuiNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyBianDuiNameReq& from);
  void MergeFrom(const ModifyBianDuiNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ModifyBianDuiNameReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ModifyBianDuiNameReq* default_instance_;
};
// -------------------------------------------------------------------

class ModifyBianDuiNameAck : public ::google::protobuf::Message {
 public:
  ModifyBianDuiNameAck();
  virtual ~ModifyBianDuiNameAck();

  ModifyBianDuiNameAck(const ModifyBianDuiNameAck& from);

  inline ModifyBianDuiNameAck& operator=(const ModifyBianDuiNameAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyBianDuiNameAck& default_instance();

  void Swap(ModifyBianDuiNameAck* other);

  // implements Message ----------------------------------------------

  ModifyBianDuiNameAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyBianDuiNameAck& from);
  void MergeFrom(const ModifyBianDuiNameAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ModifyBianDuiNameAck)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ModifyBianDuiNameAck* default_instance_;
};
// -------------------------------------------------------------------

class ModifyBIanDuiDataReq : public ::google::protobuf::Message {
 public:
  ModifyBIanDuiDataReq();
  virtual ~ModifyBIanDuiDataReq();

  ModifyBIanDuiDataReq(const ModifyBIanDuiDataReq& from);

  inline ModifyBIanDuiDataReq& operator=(const ModifyBIanDuiDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyBIanDuiDataReq& default_instance();

  void Swap(ModifyBIanDuiDataReq* other);

  // implements Message ----------------------------------------------

  ModifyBIanDuiDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyBIanDuiDataReq& from);
  void MergeFrom(const ModifyBIanDuiDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id_1 = 1;
  inline bool has_pet_id_1() const;
  inline void clear_pet_id_1();
  static const int kPetId1FieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id_1() const;
  inline void set_pet_id_1(::google::protobuf::uint64 value);

  // optional uint64 pet_id_2 = 2;
  inline bool has_pet_id_2() const;
  inline void clear_pet_id_2();
  static const int kPetId2FieldNumber = 2;
  inline ::google::protobuf::uint64 pet_id_2() const;
  inline void set_pet_id_2(::google::protobuf::uint64 value);

  // optional uint32 queue_idx = 3;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ModifyBIanDuiDataReq)
 private:
  inline void set_has_pet_id_1();
  inline void clear_has_pet_id_1();
  inline void set_has_pet_id_2();
  inline void clear_has_pet_id_2();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_1_;
  ::google::protobuf::uint64 pet_id_2_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ModifyBIanDuiDataReq* default_instance_;
};
// -------------------------------------------------------------------

class ModifyBIanDuiDataAck : public ::google::protobuf::Message {
 public:
  ModifyBIanDuiDataAck();
  virtual ~ModifyBIanDuiDataAck();

  ModifyBIanDuiDataAck(const ModifyBIanDuiDataAck& from);

  inline ModifyBIanDuiDataAck& operator=(const ModifyBIanDuiDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyBIanDuiDataAck& default_instance();

  void Swap(ModifyBIanDuiDataAck* other);

  // implements Message ----------------------------------------------

  ModifyBIanDuiDataAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModifyBIanDuiDataAck& from);
  void MergeFrom(const ModifyBIanDuiDataAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id_1 = 1;
  inline bool has_pet_id_1() const;
  inline void clear_pet_id_1();
  static const int kPetId1FieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id_1() const;
  inline void set_pet_id_1(::google::protobuf::uint64 value);

  // optional uint64 pet_id_2 = 2;
  inline bool has_pet_id_2() const;
  inline void clear_pet_id_2();
  static const int kPetId2FieldNumber = 2;
  inline ::google::protobuf::uint64 pet_id_2() const;
  inline void set_pet_id_2(::google::protobuf::uint64 value);

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 queue_idx = 4;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 4;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ModifyBIanDuiDataAck)
 private:
  inline void set_has_pet_id_1();
  inline void clear_has_pet_id_1();
  inline void set_has_pet_id_2();
  inline void clear_has_pet_id_2();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_1_;
  ::google::protobuf::uint64 pet_id_2_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ModifyBIanDuiDataAck* default_instance_;
};
// -------------------------------------------------------------------

class BianDuiNtf : public ::google::protobuf::Message {
 public:
  BianDuiNtf();
  virtual ~BianDuiNtf();

  BianDuiNtf(const BianDuiNtf& from);

  inline BianDuiNtf& operator=(const BianDuiNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BianDuiNtf& default_instance();

  void Swap(BianDuiNtf* other);

  // implements Message ----------------------------------------------

  BianDuiNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BianDuiNtf& from);
  void MergeFrom(const BianDuiNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BianDuiData queue = 1;
  inline bool has_queue() const;
  inline void clear_queue();
  static const int kQueueFieldNumber = 1;
  inline const ::protoc::gameproto::BianDuiData& queue() const;
  inline ::protoc::gameproto::BianDuiData* mutable_queue();
  inline ::protoc::gameproto::BianDuiData* release_queue();
  inline void set_allocated_queue(::protoc::gameproto::BianDuiData* queue);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BianDuiNtf)
 private:
  inline void set_has_queue();
  inline void clear_has_queue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::BianDuiData* queue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BianDuiNtf* default_instance_;
};
// -------------------------------------------------------------------

class AddBianDui : public ::google::protobuf::Message {
 public:
  AddBianDui();
  virtual ~AddBianDui();

  AddBianDui(const AddBianDui& from);

  inline AddBianDui& operator=(const AddBianDui& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBianDui& default_instance();

  void Swap(AddBianDui* other);

  // implements Message ----------------------------------------------

  AddBianDui* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBianDui& from);
  void MergeFrom(const AddBianDui& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BianDuiData queue = 1;
  inline bool has_queue() const;
  inline void clear_queue();
  static const int kQueueFieldNumber = 1;
  inline const ::protoc::gameproto::BianDuiData& queue() const;
  inline ::protoc::gameproto::BianDuiData* mutable_queue();
  inline ::protoc::gameproto::BianDuiData* release_queue();
  inline void set_allocated_queue(::protoc::gameproto::BianDuiData* queue);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddBianDui)
 private:
  inline void set_has_queue();
  inline void clear_has_queue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::BianDuiData* queue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddBianDui* default_instance_;
};
// -------------------------------------------------------------------

class GetCurBianDuiReq : public ::google::protobuf::Message {
 public:
  GetCurBianDuiReq();
  virtual ~GetCurBianDuiReq();

  GetCurBianDuiReq(const GetCurBianDuiReq& from);

  inline GetCurBianDuiReq& operator=(const GetCurBianDuiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurBianDuiReq& default_instance();

  void Swap(GetCurBianDuiReq* other);

  // implements Message ----------------------------------------------

  GetCurBianDuiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCurBianDuiReq& from);
  void MergeFrom(const GetCurBianDuiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCurBianDuiReq)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCurBianDuiReq* default_instance_;
};
// -------------------------------------------------------------------

class GetCurBianDuiAck : public ::google::protobuf::Message {
 public:
  GetCurBianDuiAck();
  virtual ~GetCurBianDuiAck();

  GetCurBianDuiAck(const GetCurBianDuiAck& from);

  inline GetCurBianDuiAck& operator=(const GetCurBianDuiAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurBianDuiAck& default_instance();

  void Swap(GetCurBianDuiAck* other);

  // implements Message ----------------------------------------------

  GetCurBianDuiAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCurBianDuiAck& from);
  void MergeFrom(const GetCurBianDuiAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BianDuiData biandui = 1;
  inline bool has_biandui() const;
  inline void clear_biandui();
  static const int kBianduiFieldNumber = 1;
  inline const ::protoc::gameproto::BianDuiData& biandui() const;
  inline ::protoc::gameproto::BianDuiData* mutable_biandui();
  inline ::protoc::gameproto::BianDuiData* release_biandui();
  inline void set_allocated_biandui(::protoc::gameproto::BianDuiData* biandui);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCurBianDuiAck)
 private:
  inline void set_has_biandui();
  inline void clear_has_biandui();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::BianDuiData* biandui_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCurBianDuiAck* default_instance_;
};
// -------------------------------------------------------------------

class SetCurBianDuiReq : public ::google::protobuf::Message {
 public:
  SetCurBianDuiReq();
  virtual ~SetCurBianDuiReq();

  SetCurBianDuiReq(const SetCurBianDuiReq& from);

  inline SetCurBianDuiReq& operator=(const SetCurBianDuiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetCurBianDuiReq& default_instance();

  void Swap(SetCurBianDuiReq* other);

  // implements Message ----------------------------------------------

  SetCurBianDuiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetCurBianDuiReq& from);
  void MergeFrom(const SetCurBianDuiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 queue_id = 1;
  inline bool has_queue_id() const;
  inline void clear_queue_id();
  static const int kQueueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 queue_id() const;
  inline void set_queue_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetCurBianDuiReq)
 private:
  inline void set_has_queue_id();
  inline void clear_has_queue_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 queue_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetCurBianDuiReq* default_instance_;
};
// -------------------------------------------------------------------

class SetCurBianDuiAck : public ::google::protobuf::Message {
 public:
  SetCurBianDuiAck();
  virtual ~SetCurBianDuiAck();

  SetCurBianDuiAck(const SetCurBianDuiAck& from);

  inline SetCurBianDuiAck& operator=(const SetCurBianDuiAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetCurBianDuiAck& default_instance();

  void Swap(SetCurBianDuiAck* other);

  // implements Message ----------------------------------------------

  SetCurBianDuiAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetCurBianDuiAck& from);
  void MergeFrom(const SetCurBianDuiAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 queue_id = 1;
  inline bool has_queue_id() const;
  inline void clear_queue_id();
  static const int kQueueIdFieldNumber = 1;
  inline ::google::protobuf::uint32 queue_id() const;
  inline void set_queue_id(::google::protobuf::uint32 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetCurBianDuiAck)
 private:
  inline void set_has_queue_id();
  inline void clear_has_queue_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 queue_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetCurBianDuiAck* default_instance_;
};
// -------------------------------------------------------------------

class AddPetToBianDuiReq : public ::google::protobuf::Message {
 public:
  AddPetToBianDuiReq();
  virtual ~AddPetToBianDuiReq();

  AddPetToBianDuiReq(const AddPetToBianDuiReq& from);

  inline AddPetToBianDuiReq& operator=(const AddPetToBianDuiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPetToBianDuiReq& default_instance();

  void Swap(AddPetToBianDuiReq* other);

  // implements Message ----------------------------------------------

  AddPetToBianDuiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPetToBianDuiReq& from);
  void MergeFrom(const AddPetToBianDuiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional uint32 idx = 2;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 2;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // optional uint32 queue_idx = 3;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddPetToBianDuiReq)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddPetToBianDuiReq* default_instance_;
};
// -------------------------------------------------------------------

class AddPetToBianDuiAck : public ::google::protobuf::Message {
 public:
  AddPetToBianDuiAck();
  virtual ~AddPetToBianDuiAck();

  AddPetToBianDuiAck(const AddPetToBianDuiAck& from);

  inline AddPetToBianDuiAck& operator=(const AddPetToBianDuiAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPetToBianDuiAck& default_instance();

  void Swap(AddPetToBianDuiAck* other);

  // implements Message ----------------------------------------------

  AddPetToBianDuiAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPetToBianDuiAck& from);
  void MergeFrom(const AddPetToBianDuiAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 queue_idx = 3;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddPetToBianDuiAck)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddPetToBianDuiAck* default_instance_;
};
// -------------------------------------------------------------------

class DelPetToBianDuiReq : public ::google::protobuf::Message {
 public:
  DelPetToBianDuiReq();
  virtual ~DelPetToBianDuiReq();

  DelPetToBianDuiReq(const DelPetToBianDuiReq& from);

  inline DelPetToBianDuiReq& operator=(const DelPetToBianDuiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelPetToBianDuiReq& default_instance();

  void Swap(DelPetToBianDuiReq* other);

  // implements Message ----------------------------------------------

  DelPetToBianDuiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelPetToBianDuiReq& from);
  void MergeFrom(const DelPetToBianDuiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional uint32 queue_idx = 3;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelPetToBianDuiReq)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelPetToBianDuiReq* default_instance_;
};
// -------------------------------------------------------------------

class DelPetToBianDuiAck : public ::google::protobuf::Message {
 public:
  DelPetToBianDuiAck();
  virtual ~DelPetToBianDuiAck();

  DelPetToBianDuiAck(const DelPetToBianDuiAck& from);

  inline DelPetToBianDuiAck& operator=(const DelPetToBianDuiAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelPetToBianDuiAck& default_instance();

  void Swap(DelPetToBianDuiAck* other);

  // implements Message ----------------------------------------------

  DelPetToBianDuiAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelPetToBianDuiAck& from);
  void MergeFrom(const DelPetToBianDuiAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 queue_idx = 3;
  inline bool has_queue_idx() const;
  inline void clear_queue_idx();
  static const int kQueueIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 queue_idx() const;
  inline void set_queue_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelPetToBianDuiAck)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_queue_idx();
  inline void clear_has_queue_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 queue_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelPetToBianDuiAck* default_instance_;
};
// -------------------------------------------------------------------

class AddPetMaxNumberReq : public ::google::protobuf::Message {
 public:
  AddPetMaxNumberReq();
  virtual ~AddPetMaxNumberReq();

  AddPetMaxNumberReq(const AddPetMaxNumberReq& from);

  inline AddPetMaxNumberReq& operator=(const AddPetMaxNumberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPetMaxNumberReq& default_instance();

  void Swap(AddPetMaxNumberReq* other);

  // implements Message ----------------------------------------------

  AddPetMaxNumberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPetMaxNumberReq& from);
  void MergeFrom(const AddPetMaxNumberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddPetMaxNumberReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddPetMaxNumberReq* default_instance_;
};
// -------------------------------------------------------------------

class AddPetMaxNumberAck : public ::google::protobuf::Message {
 public:
  AddPetMaxNumberAck();
  virtual ~AddPetMaxNumberAck();

  AddPetMaxNumberAck(const AddPetMaxNumberAck& from);

  inline AddPetMaxNumberAck& operator=(const AddPetMaxNumberAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPetMaxNumberAck& default_instance();

  void Swap(AddPetMaxNumberAck* other);

  // implements Message ----------------------------------------------

  AddPetMaxNumberAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPetMaxNumberAck& from);
  void MergeFrom(const AddPetMaxNumberAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddPetMaxNumberAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddPetMaxNumberAck* default_instance_;
};
// -------------------------------------------------------------------

class AddQueueMaxNumberReq : public ::google::protobuf::Message {
 public:
  AddQueueMaxNumberReq();
  virtual ~AddQueueMaxNumberReq();

  AddQueueMaxNumberReq(const AddQueueMaxNumberReq& from);

  inline AddQueueMaxNumberReq& operator=(const AddQueueMaxNumberReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddQueueMaxNumberReq& default_instance();

  void Swap(AddQueueMaxNumberReq* other);

  // implements Message ----------------------------------------------

  AddQueueMaxNumberReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddQueueMaxNumberReq& from);
  void MergeFrom(const AddQueueMaxNumberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddQueueMaxNumberReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddQueueMaxNumberReq* default_instance_;
};
// -------------------------------------------------------------------

class AddQueueMaxNumberAck : public ::google::protobuf::Message {
 public:
  AddQueueMaxNumberAck();
  virtual ~AddQueueMaxNumberAck();

  AddQueueMaxNumberAck(const AddQueueMaxNumberAck& from);

  inline AddQueueMaxNumberAck& operator=(const AddQueueMaxNumberAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddQueueMaxNumberAck& default_instance();

  void Swap(AddQueueMaxNumberAck* other);

  // implements Message ----------------------------------------------

  AddQueueMaxNumberAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddQueueMaxNumberAck& from);
  void MergeFrom(const AddQueueMaxNumberAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddQueueMaxNumberAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddQueueMaxNumberAck* default_instance_;
};
// -------------------------------------------------------------------

class PetMaxNumberNtf : public ::google::protobuf::Message {
 public:
  PetMaxNumberNtf();
  virtual ~PetMaxNumberNtf();

  PetMaxNumberNtf(const PetMaxNumberNtf& from);

  inline PetMaxNumberNtf& operator=(const PetMaxNumberNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetMaxNumberNtf& default_instance();

  void Swap(PetMaxNumberNtf* other);

  // implements Message ----------------------------------------------

  PetMaxNumberNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetMaxNumberNtf& from);
  void MergeFrom(const PetMaxNumberNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetMaxNumberNtf)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetMaxNumberNtf* default_instance_;
};
// -------------------------------------------------------------------

class QueueMaxNumberNtf : public ::google::protobuf::Message {
 public:
  QueueMaxNumberNtf();
  virtual ~QueueMaxNumberNtf();

  QueueMaxNumberNtf(const QueueMaxNumberNtf& from);

  inline QueueMaxNumberNtf& operator=(const QueueMaxNumberNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueueMaxNumberNtf& default_instance();

  void Swap(QueueMaxNumberNtf* other);

  // implements Message ----------------------------------------------

  QueueMaxNumberNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueueMaxNumberNtf& from);
  void MergeFrom(const QueueMaxNumberNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.QueueMaxNumberNtf)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static QueueMaxNumberNtf* default_instance_;
};
// -------------------------------------------------------------------

class UpdateCurBianDuiIdx : public ::google::protobuf::Message {
 public:
  UpdateCurBianDuiIdx();
  virtual ~UpdateCurBianDuiIdx();

  UpdateCurBianDuiIdx(const UpdateCurBianDuiIdx& from);

  inline UpdateCurBianDuiIdx& operator=(const UpdateCurBianDuiIdx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCurBianDuiIdx& default_instance();

  void Swap(UpdateCurBianDuiIdx* other);

  // implements Message ----------------------------------------------

  UpdateCurBianDuiIdx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateCurBianDuiIdx& from);
  void MergeFrom(const UpdateCurBianDuiIdx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateCurBianDuiIdx)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateCurBianDuiIdx* default_instance_;
};
// -------------------------------------------------------------------

class RecoverActiveCountReq : public ::google::protobuf::Message {
 public:
  RecoverActiveCountReq();
  virtual ~RecoverActiveCountReq();

  RecoverActiveCountReq(const RecoverActiveCountReq& from);

  inline RecoverActiveCountReq& operator=(const RecoverActiveCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoverActiveCountReq& default_instance();

  void Swap(RecoverActiveCountReq* other);

  // implements Message ----------------------------------------------

  RecoverActiveCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoverActiveCountReq& from);
  void MergeFrom(const RecoverActiveCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RecoverActiveCountReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RecoverActiveCountReq* default_instance_;
};
// -------------------------------------------------------------------

class RecoverActiveCountAck : public ::google::protobuf::Message {
 public:
  RecoverActiveCountAck();
  virtual ~RecoverActiveCountAck();

  RecoverActiveCountAck(const RecoverActiveCountAck& from);

  inline RecoverActiveCountAck& operator=(const RecoverActiveCountAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoverActiveCountAck& default_instance();

  void Swap(RecoverActiveCountAck* other);

  // implements Message ----------------------------------------------

  RecoverActiveCountAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoverActiveCountAck& from);
  void MergeFrom(const RecoverActiveCountAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RecoverActiveCountAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RecoverActiveCountAck* default_instance_;
};
// -------------------------------------------------------------------

class ActiveCountNtf : public ::google::protobuf::Message {
 public:
  ActiveCountNtf();
  virtual ~ActiveCountNtf();

  ActiveCountNtf(const ActiveCountNtf& from);

  inline ActiveCountNtf& operator=(const ActiveCountNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveCountNtf& default_instance();

  void Swap(ActiveCountNtf* other);

  // implements Message ----------------------------------------------

  ActiveCountNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveCountNtf& from);
  void MergeFrom(const ActiveCountNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ActiveCountNtf)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ActiveCountNtf* default_instance_;
};
// -------------------------------------------------------------------

class SpiritNtf : public ::google::protobuf::Message {
 public:
  SpiritNtf();
  virtual ~SpiritNtf();

  SpiritNtf(const SpiritNtf& from);

  inline SpiritNtf& operator=(const SpiritNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritNtf& default_instance();

  void Swap(SpiritNtf* other);

  // implements Message ----------------------------------------------

  SpiritNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritNtf& from);
  void MergeFrom(const SpiritNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 spirit = 1;
  inline bool has_spirit() const;
  inline void clear_spirit();
  static const int kSpiritFieldNumber = 1;
  inline ::google::protobuf::uint32 spirit() const;
  inline void set_spirit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SpiritNtf)
 private:
  inline void set_has_spirit();
  inline void clear_has_spirit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 spirit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SpiritNtf* default_instance_;
};
// -------------------------------------------------------------------

class UpdateHp : public ::google::protobuf::Message {
 public:
  UpdateHp();
  virtual ~UpdateHp();

  UpdateHp(const UpdateHp& from);

  inline UpdateHp& operator=(const UpdateHp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateHp& default_instance();

  void Swap(UpdateHp* other);

  // implements Message ----------------------------------------------

  UpdateHp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateHp& from);
  void MergeFrom(const UpdateHp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateHp)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateHp* default_instance_;
};
// -------------------------------------------------------------------

class UpdateMp : public ::google::protobuf::Message {
 public:
  UpdateMp();
  virtual ~UpdateMp();

  UpdateMp(const UpdateMp& from);

  inline UpdateMp& operator=(const UpdateMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMp& default_instance();

  void Swap(UpdateMp* other);

  // implements Message ----------------------------------------------

  UpdateMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateMp& from);
  void MergeFrom(const UpdateMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mp = 1;
  inline bool has_mp() const;
  inline void clear_mp();
  static const int kMpFieldNumber = 1;
  inline ::google::protobuf::uint32 mp() const;
  inline void set_mp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateMp)
 private:
  inline void set_has_mp();
  inline void clear_has_mp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateMp* default_instance_;
};
// -------------------------------------------------------------------

class GoodsOfSell : public ::google::protobuf::Message {
 public:
  GoodsOfSell();
  virtual ~GoodsOfSell();

  GoodsOfSell(const GoodsOfSell& from);

  inline GoodsOfSell& operator=(const GoodsOfSell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsOfSell& default_instance();

  void Swap(GoodsOfSell* other);

  // implements Message ----------------------------------------------

  GoodsOfSell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsOfSell& from);
  void MergeFrom(const GoodsOfSell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 cost_type = 4;
  inline bool has_cost_type() const;
  inline void clear_cost_type();
  static const int kCostTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 cost_type() const;
  inline void set_cost_type(::google::protobuf::uint32 value);

  // optional string desc = 5;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 5;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional uint32 price_1 = 6;
  inline bool has_price_1() const;
  inline void clear_price_1();
  static const int kPrice1FieldNumber = 6;
  inline ::google::protobuf::uint32 price_1() const;
  inline void set_price_1(::google::protobuf::uint32 value);

  // optional float fpercent = 7;
  inline bool has_fpercent() const;
  inline void clear_fpercent();
  static const int kFpercentFieldNumber = 7;
  inline float fpercent() const;
  inline void set_fpercent(float value);

  // optional int32 last_month_days = 8;
  inline bool has_last_month_days() const;
  inline void clear_last_month_days();
  static const int kLastMonthDaysFieldNumber = 8;
  inline ::google::protobuf::int32 last_month_days() const;
  inline void set_last_month_days(::google::protobuf::int32 value);

  // optional int64 zhaohuan_free_time = 9;
  inline bool has_zhaohuan_free_time() const;
  inline void clear_zhaohuan_free_time();
  static const int kZhaohuanFreeTimeFieldNumber = 9;
  inline ::google::protobuf::int64 zhaohuan_free_time() const;
  inline void set_zhaohuan_free_time(::google::protobuf::int64 value);

  // optional uint32 show_id = 10;
  inline bool has_show_id() const;
  inline void clear_show_id();
  static const int kShowIdFieldNumber = 10;
  inline ::google::protobuf::uint32 show_id() const;
  inline void set_show_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GoodsOfSell)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_cost_type();
  inline void clear_has_cost_type();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_price_1();
  inline void clear_has_price_1();
  inline void set_has_fpercent();
  inline void clear_has_fpercent();
  inline void set_has_last_month_days();
  inline void clear_has_last_month_days();
  inline void set_has_zhaohuan_free_time();
  inline void clear_has_zhaohuan_free_time();
  inline void set_has_show_id();
  inline void clear_has_show_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 price_;
  ::std::string* desc_;
  ::google::protobuf::uint32 cost_type_;
  ::google::protobuf::uint32 price_1_;
  float fpercent_;
  ::google::protobuf::int32 last_month_days_;
  ::google::protobuf::int64 zhaohuan_free_time_;
  ::google::protobuf::uint32 show_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GoodsOfSell* default_instance_;
};
// -------------------------------------------------------------------

class GetShopListReq : public ::google::protobuf::Message {
 public:
  GetShopListReq();
  virtual ~GetShopListReq();

  GetShopListReq(const GetShopListReq& from);

  inline GetShopListReq& operator=(const GetShopListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShopListReq& default_instance();

  void Swap(GetShopListReq* other);

  // implements Message ----------------------------------------------

  GetShopListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShopListReq& from);
  void MergeFrom(const GetShopListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopid = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 1;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetShopListReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetShopListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetShopListAck : public ::google::protobuf::Message {
 public:
  GetShopListAck();
  virtual ~GetShopListAck();

  GetShopListAck(const GetShopListAck& from);

  inline GetShopListAck& operator=(const GetShopListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShopListAck& default_instance();

  void Swap(GetShopListAck* other);

  // implements Message ----------------------------------------------

  GetShopListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetShopListAck& from);
  void MergeFrom(const GetShopListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopid = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 1;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // repeated .protoc.gameproto.GoodsOfSell goods = 2;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 2;
  inline const ::protoc::gameproto::GoodsOfSell& goods(int index) const;
  inline ::protoc::gameproto::GoodsOfSell* mutable_goods(int index);
  inline ::protoc::gameproto::GoodsOfSell* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsOfSell >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsOfSell >*
      mutable_goods();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetShopListAck)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsOfSell > goods_;
  ::google::protobuf::uint32 shopid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetShopListAck* default_instance_;
};
// -------------------------------------------------------------------

class ShoppingReq : public ::google::protobuf::Message {
 public:
  ShoppingReq();
  virtual ~ShoppingReq();

  ShoppingReq(const ShoppingReq& from);

  inline ShoppingReq& operator=(const ShoppingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShoppingReq& default_instance();

  void Swap(ShoppingReq* other);

  // implements Message ----------------------------------------------

  ShoppingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShoppingReq& from);
  void MergeFrom(const ShoppingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopid = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 1;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ShoppingReq)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ShoppingReq* default_instance_;
};
// -------------------------------------------------------------------

class ShoppingAck : public ::google::protobuf::Message {
 public:
  ShoppingAck();
  virtual ~ShoppingAck();

  ShoppingAck(const ShoppingAck& from);

  inline ShoppingAck& operator=(const ShoppingAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShoppingAck& default_instance();

  void Swap(ShoppingAck* other);

  // implements Message ----------------------------------------------

  ShoppingAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShoppingAck& from);
  void MergeFrom(const ShoppingAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopid = 1;
  inline bool has_shopid() const;
  inline void clear_shopid();
  static const int kShopidFieldNumber = 1;
  inline ::google::protobuf::uint32 shopid() const;
  inline void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ShoppingAck)
 private:
  inline void set_has_shopid();
  inline void clear_has_shopid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ShoppingAck* default_instance_;
};
// -------------------------------------------------------------------

class UpdateVIPLevel : public ::google::protobuf::Message {
 public:
  UpdateVIPLevel();
  virtual ~UpdateVIPLevel();

  UpdateVIPLevel(const UpdateVIPLevel& from);

  inline UpdateVIPLevel& operator=(const UpdateVIPLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVIPLevel& default_instance();

  void Swap(UpdateVIPLevel* other);

  // implements Message ----------------------------------------------

  UpdateVIPLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateVIPLevel& from);
  void MergeFrom(const UpdateVIPLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 sum_chongzhi = 2;
  inline bool has_sum_chongzhi() const;
  inline void clear_sum_chongzhi();
  static const int kSumChongzhiFieldNumber = 2;
  inline ::google::protobuf::uint32 sum_chongzhi() const;
  inline void set_sum_chongzhi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateVIPLevel)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_sum_chongzhi();
  inline void clear_has_sum_chongzhi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 sum_chongzhi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateVIPLevel* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriendShip : public ::google::protobuf::Message {
 public:
  UpdateFriendShip();
  virtual ~UpdateFriendShip();

  UpdateFriendShip(const UpdateFriendShip& from);

  inline UpdateFriendShip& operator=(const UpdateFriendShip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriendShip& default_instance();

  void Swap(UpdateFriendShip* other);

  // implements Message ----------------------------------------------

  UpdateFriendShip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriendShip& from);
  void MergeFrom(const UpdateFriendShip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ship = 1;
  inline bool has_ship() const;
  inline void clear_ship();
  static const int kShipFieldNumber = 1;
  inline ::google::protobuf::uint32 ship() const;
  inline void set_ship(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateFriendShip)
 private:
  inline void set_has_ship();
  inline void clear_has_ship();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ship_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriendShip* default_instance_;
};
// -------------------------------------------------------------------

class ChongZhiOrderNtf : public ::google::protobuf::Message {
 public:
  ChongZhiOrderNtf();
  virtual ~ChongZhiOrderNtf();

  ChongZhiOrderNtf(const ChongZhiOrderNtf& from);

  inline ChongZhiOrderNtf& operator=(const ChongZhiOrderNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChongZhiOrderNtf& default_instance();

  void Swap(ChongZhiOrderNtf* other);

  // implements Message ----------------------------------------------

  ChongZhiOrderNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChongZhiOrderNtf& from);
  void MergeFrom(const ChongZhiOrderNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 order_id = 1;
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  inline ::google::protobuf::uint64 order_id() const;
  inline void set_order_id(::google::protobuf::uint64 value);

  // optional float money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline float money() const;
  inline void set_money(float value);

  // optional string str_url = 3;
  inline bool has_str_url() const;
  inline void clear_str_url();
  static const int kStrUrlFieldNumber = 3;
  inline const ::std::string& str_url() const;
  inline void set_str_url(const ::std::string& value);
  inline void set_str_url(const char* value);
  inline void set_str_url(const char* value, size_t size);
  inline ::std::string* mutable_str_url();
  inline ::std::string* release_str_url();
  inline void set_allocated_str_url(::std::string* str_url);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChongZhiOrderNtf)
 private:
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_str_url();
  inline void clear_has_str_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 order_id_;
  ::std::string* str_url_;
  float money_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChongZhiOrderNtf* default_instance_;
};
// -------------------------------------------------------------------

class BuffItemListReq : public ::google::protobuf::Message {
 public:
  BuffItemListReq();
  virtual ~BuffItemListReq();

  BuffItemListReq(const BuffItemListReq& from);

  inline BuffItemListReq& operator=(const BuffItemListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffItemListReq& default_instance();

  void Swap(BuffItemListReq* other);

  // implements Message ----------------------------------------------

  BuffItemListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffItemListReq& from);
  void MergeFrom(const BuffItemListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BUFF_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::protoc::gameproto::BUFF_TYPE type() const;
  inline void set_type(::protoc::gameproto::BUFF_TYPE value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BuffItemListReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BuffItemListReq* default_instance_;
};
// -------------------------------------------------------------------

class BuffItemListAck : public ::google::protobuf::Message {
 public:
  BuffItemListAck();
  virtual ~BuffItemListAck();

  BuffItemListAck(const BuffItemListAck& from);

  inline BuffItemListAck& operator=(const BuffItemListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffItemListAck& default_instance();

  void Swap(BuffItemListAck* other);

  // implements Message ----------------------------------------------

  BuffItemListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffItemListAck& from);
  void MergeFrom(const BuffItemListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // repeated .protoc.gameproto.BuffItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::protoc::gameproto::BuffItemInfo& items(int index) const;
  inline ::protoc::gameproto::BuffItemInfo* mutable_items(int index);
  inline ::protoc::gameproto::BuffItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BuffItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BuffItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BuffItemListAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BuffItemInfo > items_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BuffItemListAck* default_instance_;
};
// -------------------------------------------------------------------

class BuffItemBuyReq : public ::google::protobuf::Message {
 public:
  BuffItemBuyReq();
  virtual ~BuffItemBuyReq();

  BuffItemBuyReq(const BuffItemBuyReq& from);

  inline BuffItemBuyReq& operator=(const BuffItemBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffItemBuyReq& default_instance();

  void Swap(BuffItemBuyReq* other);

  // implements Message ----------------------------------------------

  BuffItemBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffItemBuyReq& from);
  void MergeFrom(const BuffItemBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // optional .protoc.gameproto.BUFF_TYPE type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::protoc::gameproto::BUFF_TYPE type() const;
  inline void set_type(::protoc::gameproto::BUFF_TYPE value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BuffItemBuyReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BuffItemBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class BuffItemInfo : public ::google::protobuf::Message {
 public:
  BuffItemInfo();
  virtual ~BuffItemInfo();

  BuffItemInfo(const BuffItemInfo& from);

  inline BuffItemInfo& operator=(const BuffItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffItemInfo& default_instance();

  void Swap(BuffItemInfo* other);

  // implements Message ----------------------------------------------

  BuffItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffItemInfo& from);
  void MergeFrom(const BuffItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 price() const;
  inline void set_price(::google::protobuf::uint32 value);

  // optional uint32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // optional .protoc.gameproto.SELL_TYPE type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::protoc::gameproto::SELL_TYPE type() const;
  inline void set_type(::protoc::gameproto::SELL_TYPE value);

  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string desc = 6;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 6;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional bool owned = 7;
  inline bool has_owned() const;
  inline void clear_owned();
  static const int kOwnedFieldNumber = 7;
  inline bool owned() const;
  inline void set_owned(bool value);

  // optional uint32 duration = 8;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 8;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BuffItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_owned();
  inline void clear_has_owned();
  inline void set_has_duration();
  inline void clear_has_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 number_;
  int type_;
  ::std::string* name_;
  ::std::string* desc_;
  bool owned_;
  ::google::protobuf::uint32 duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BuffItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class RandomItemListReq : public ::google::protobuf::Message {
 public:
  RandomItemListReq();
  virtual ~RandomItemListReq();

  RandomItemListReq(const RandomItemListReq& from);

  inline RandomItemListReq& operator=(const RandomItemListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomItemListReq& default_instance();

  void Swap(RandomItemListReq* other);

  // implements Message ----------------------------------------------

  RandomItemListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomItemListReq& from);
  void MergeFrom(const RandomItemListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BUFF_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::protoc::gameproto::BUFF_TYPE type() const;
  inline void set_type(::protoc::gameproto::BUFF_TYPE value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RandomItemListReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RandomItemListReq* default_instance_;
};
// -------------------------------------------------------------------

class RandomItemListAck : public ::google::protobuf::Message {
 public:
  RandomItemListAck();
  virtual ~RandomItemListAck();

  RandomItemListAck(const RandomItemListAck& from);

  inline RandomItemListAck& operator=(const RandomItemListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomItemListAck& default_instance();

  void Swap(RandomItemListAck* other);

  // implements Message ----------------------------------------------

  RandomItemListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomItemListAck& from);
  void MergeFrom(const RandomItemListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional .protoc.gameproto.BuffItemInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::protoc::gameproto::BuffItemInfo& info() const;
  inline ::protoc::gameproto::BuffItemInfo* mutable_info();
  inline ::protoc::gameproto::BuffItemInfo* release_info();
  inline void set_allocated_info(::protoc::gameproto::BuffItemInfo* info);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RandomItemListAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::BuffItemInfo* info_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RandomItemListAck* default_instance_;
};
// -------------------------------------------------------------------

class RandomItemBuyReq : public ::google::protobuf::Message {
 public:
  RandomItemBuyReq();
  virtual ~RandomItemBuyReq();

  RandomItemBuyReq(const RandomItemBuyReq& from);

  inline RandomItemBuyReq& operator=(const RandomItemBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandomItemBuyReq& default_instance();

  void Swap(RandomItemBuyReq* other);

  // implements Message ----------------------------------------------

  RandomItemBuyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandomItemBuyReq& from);
  void MergeFrom(const RandomItemBuyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BUFF_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::protoc::gameproto::BUFF_TYPE type() const;
  inline void set_type(::protoc::gameproto::BUFF_TYPE value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RandomItemBuyReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RandomItemBuyReq* default_instance_;
};
// -------------------------------------------------------------------

class FriendData : public ::google::protobuf::Message {
 public:
  FriendData();
  virtual ~FriendData();

  FriendData(const FriendData& from);

  inline FriendData& operator=(const FriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendData& default_instance();

  void Swap(FriendData* other);

  // implements Message ----------------------------------------------

  FriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendData& from);
  void MergeFrom(const FriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 head_id = 3;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 3;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 kind = 5;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 5;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional int64 last_online_time = 6;
  inline bool has_last_online_time() const;
  inline void clear_last_online_time();
  static const int kLastOnlineTimeFieldNumber = 6;
  inline ::google::protobuf::int64 last_online_time() const;
  inline void set_last_online_time(::google::protobuf::int64 value);

  // optional bool sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline bool sex() const;
  inline void set_sex(bool value);

  // optional int32 total_attack = 8;
  inline bool has_total_attack() const;
  inline void clear_total_attack();
  static const int kTotalAttackFieldNumber = 8;
  inline ::google::protobuf::int32 total_attack() const;
  inline void set_total_attack(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.FriendData)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_last_online_time();
  inline void clear_has_last_online_time();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_total_attack();
  inline void clear_has_total_attack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int64 last_online_time_;
  ::google::protobuf::uint32 kind_;
  bool sex_;
  ::google::protobuf::int32 total_attack_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static FriendData* default_instance_;
};
// -------------------------------------------------------------------

class FriendList : public ::google::protobuf::Message {
 public:
  FriendList();
  virtual ~FriendList();

  FriendList(const FriendList& from);

  inline FriendList& operator=(const FriendList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendList& default_instance();

  void Swap(FriendList* other);

  // implements Message ----------------------------------------------

  FriendList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendList& from);
  void MergeFrom(const FriendList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.FriendData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::FriendData& data(int index) const;
  inline ::protoc::gameproto::FriendData* mutable_data(int index);
  inline ::protoc::gameproto::FriendData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.FriendList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static FriendList* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFriend : public ::google::protobuf::Message {
 public:
  UpdateFriend();
  virtual ~UpdateFriend();

  UpdateFriend(const UpdateFriend& from);

  inline UpdateFriend& operator=(const UpdateFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFriend& default_instance();

  void Swap(UpdateFriend* other);

  // implements Message ----------------------------------------------

  UpdateFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFriend& from);
  void MergeFrom(const UpdateFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.FriendData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::FriendData& data() const;
  inline ::protoc::gameproto::FriendData* mutable_data();
  inline ::protoc::gameproto::FriendData* release_data();
  inline void set_allocated_data(::protoc::gameproto::FriendData* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateFriend)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::FriendData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateFriend* default_instance_;
};
// -------------------------------------------------------------------

class DelFriendReq : public ::google::protobuf::Message {
 public:
  DelFriendReq();
  virtual ~DelFriendReq();

  DelFriendReq(const DelFriendReq& from);

  inline DelFriendReq& operator=(const DelFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendReq& default_instance();

  void Swap(DelFriendReq* other);

  // implements Message ----------------------------------------------

  DelFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelFriendReq& from);
  void MergeFrom(const DelFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelFriendReq)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class DelFriendAck : public ::google::protobuf::Message {
 public:
  DelFriendAck();
  virtual ~DelFriendAck();

  DelFriendAck(const DelFriendAck& from);

  inline DelFriendAck& operator=(const DelFriendAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendAck& default_instance();

  void Swap(DelFriendAck* other);

  // implements Message ----------------------------------------------

  DelFriendAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelFriendAck& from);
  void MergeFrom(const DelFriendAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelFriendAck)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelFriendAck* default_instance_;
};
// -------------------------------------------------------------------

class DelFriendNtf : public ::google::protobuf::Message {
 public:
  DelFriendNtf();
  virtual ~DelFriendNtf();

  DelFriendNtf(const DelFriendNtf& from);

  inline DelFriendNtf& operator=(const DelFriendNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendNtf& default_instance();

  void Swap(DelFriendNtf* other);

  // implements Message ----------------------------------------------

  DelFriendNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelFriendNtf& from);
  void MergeFrom(const DelFriendNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelFriendNtf)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelFriendNtf* default_instance_;
};
// -------------------------------------------------------------------

class VisitFriendReq : public ::google::protobuf::Message {
 public:
  VisitFriendReq();
  virtual ~VisitFriendReq();

  VisitFriendReq(const VisitFriendReq& from);

  inline VisitFriendReq& operator=(const VisitFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisitFriendReq& default_instance();

  void Swap(VisitFriendReq* other);

  // implements Message ----------------------------------------------

  VisitFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisitFriendReq& from);
  void MergeFrom(const VisitFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional bool cur_queue = 2;
  inline bool has_cur_queue() const;
  inline void clear_cur_queue();
  static const int kCurQueueFieldNumber = 2;
  inline bool cur_queue() const;
  inline void set_cur_queue(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.VisitFriendReq)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_cur_queue();
  inline void clear_has_cur_queue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  bool cur_queue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static VisitFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class VisitFriendAck : public ::google::protobuf::Message {
 public:
  VisitFriendAck();
  virtual ~VisitFriendAck();

  VisitFriendAck(const VisitFriendAck& from);

  inline VisitFriendAck& operator=(const VisitFriendAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisitFriendAck& default_instance();

  void Swap(VisitFriendAck* other);

  // implements Message ----------------------------------------------

  VisitFriendAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisitFriendAck& from);
  void MergeFrom(const VisitFriendAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // repeated .protoc.gameproto.PetRecord pet = 2;
  inline int pet_size() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 2;
  inline const ::protoc::gameproto::PetRecord& pet(int index) const;
  inline ::protoc::gameproto::PetRecord* mutable_pet(int index);
  inline ::protoc::gameproto::PetRecord* add_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
      pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
      mutable_pet();

  // optional uint64 admin_id = 3;
  inline bool has_admin_id() const;
  inline void clear_admin_id();
  static const int kAdminIdFieldNumber = 3;
  inline ::google::protobuf::uint64 admin_id() const;
  inline void set_admin_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.VisitFriendAck)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_admin_id();
  inline void clear_has_admin_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord > pet_;
  ::google::protobuf::uint64 admin_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static VisitFriendAck* default_instance_;
};
// -------------------------------------------------------------------

class AskFriendData : public ::google::protobuf::Message {
 public:
  AskFriendData();
  virtual ~AskFriendData();

  AskFriendData(const AskFriendData& from);

  inline AskFriendData& operator=(const AskFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskFriendData& default_instance();

  void Swap(AskFriendData* other);

  // implements Message ----------------------------------------------

  AskFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskFriendData& from);
  void MergeFrom(const AskFriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ask_friend_id = 1;
  inline bool has_ask_friend_id() const;
  inline void clear_ask_friend_id();
  static const int kAskFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 ask_friend_id() const;
  inline void set_ask_friend_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 head_id = 3;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 3;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 kind = 5;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 5;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional int64 ask_time = 6;
  inline bool has_ask_time() const;
  inline void clear_ask_time();
  static const int kAskTimeFieldNumber = 6;
  inline ::google::protobuf::int64 ask_time() const;
  inline void set_ask_time(::google::protobuf::int64 value);

  // optional int32 total_attack = 7;
  inline bool has_total_attack() const;
  inline void clear_total_attack();
  static const int kTotalAttackFieldNumber = 7;
  inline ::google::protobuf::int32 total_attack() const;
  inline void set_total_attack(::google::protobuf::int32 value);

  // optional bool sex = 8;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 8;
  inline bool sex() const;
  inline void set_sex(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AskFriendData)
 private:
  inline void set_has_ask_friend_id();
  inline void clear_has_ask_friend_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_ask_time();
  inline void clear_has_ask_time();
  inline void set_has_total_attack();
  inline void clear_has_total_attack();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ask_friend_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int64 ask_time_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::int32 total_attack_;
  bool sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AskFriendData* default_instance_;
};
// -------------------------------------------------------------------

class GetAskFriendReq : public ::google::protobuf::Message {
 public:
  GetAskFriendReq();
  virtual ~GetAskFriendReq();

  GetAskFriendReq(const GetAskFriendReq& from);

  inline GetAskFriendReq& operator=(const GetAskFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAskFriendReq& default_instance();

  void Swap(GetAskFriendReq* other);

  // implements Message ----------------------------------------------

  GetAskFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAskFriendReq& from);
  void MergeFrom(const GetAskFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAskFriendReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAskFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAskFriendAck : public ::google::protobuf::Message {
 public:
  GetAskFriendAck();
  virtual ~GetAskFriendAck();

  GetAskFriendAck(const GetAskFriendAck& from);

  inline GetAskFriendAck& operator=(const GetAskFriendAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAskFriendAck& default_instance();

  void Swap(GetAskFriendAck* other);

  // implements Message ----------------------------------------------

  GetAskFriendAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAskFriendAck& from);
  void MergeFrom(const GetAskFriendAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.AskFriendData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::AskFriendData& data(int index) const;
  inline ::protoc::gameproto::AskFriendData* mutable_data(int index);
  inline ::protoc::gameproto::AskFriendData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::AskFriendData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::AskFriendData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAskFriendAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::AskFriendData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAskFriendAck* default_instance_;
};
// -------------------------------------------------------------------

class SearchPlayerReq : public ::google::protobuf::Message {
 public:
  SearchPlayerReq();
  virtual ~SearchPlayerReq();

  SearchPlayerReq(const SearchPlayerReq& from);

  inline SearchPlayerReq& operator=(const SearchPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPlayerReq& default_instance();

  void Swap(SearchPlayerReq* other);

  // implements Message ----------------------------------------------

  SearchPlayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchPlayerReq& from);
  void MergeFrom(const SearchPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional string player_name = 2;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const char* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  inline void set_allocated_player_name(::std::string* player_name);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SearchPlayerReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_name();
  inline void clear_has_player_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::std::string* player_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SearchPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class SearchPlayerAck : public ::google::protobuf::Message {
 public:
  SearchPlayerAck();
  virtual ~SearchPlayerAck();

  SearchPlayerAck(const SearchPlayerAck& from);

  inline SearchPlayerAck& operator=(const SearchPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchPlayerAck& default_instance();

  void Swap(SearchPlayerAck* other);

  // implements Message ----------------------------------------------

  SearchPlayerAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchPlayerAck& from);
  void MergeFrom(const SearchPlayerAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 head_id = 3;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 3;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional int32 err_no = 5;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 5;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional int32 total_attack = 6;
  inline bool has_total_attack() const;
  inline void clear_total_attack();
  static const int kTotalAttackFieldNumber = 6;
  inline ::google::protobuf::int32 total_attack() const;
  inline void set_total_attack(::google::protobuf::int32 value);

  // optional bool sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline bool sex() const;
  inline void set_sex(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SearchPlayerAck)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_total_attack();
  inline void clear_has_total_attack();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 total_attack_;
  bool sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SearchPlayerAck* default_instance_;
};
// -------------------------------------------------------------------

class AskFriendReq : public ::google::protobuf::Message {
 public:
  AskFriendReq();
  virtual ~AskFriendReq();

  AskFriendReq(const AskFriendReq& from);

  inline AskFriendReq& operator=(const AskFriendReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskFriendReq& default_instance();

  void Swap(AskFriendReq* other);

  // implements Message ----------------------------------------------

  AskFriendReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskFriendReq& from);
  void MergeFrom(const AskFriendReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AskFriendReq)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AskFriendReq* default_instance_;
};
// -------------------------------------------------------------------

class AskFriendAck : public ::google::protobuf::Message {
 public:
  AskFriendAck();
  virtual ~AskFriendAck();

  AskFriendAck(const AskFriendAck& from);

  inline AskFriendAck& operator=(const AskFriendAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskFriendAck& default_instance();

  void Swap(AskFriendAck* other);

  // implements Message ----------------------------------------------

  AskFriendAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskFriendAck& from);
  void MergeFrom(const AskFriendAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AskFriendAck)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AskFriendAck* default_instance_;
};
// -------------------------------------------------------------------

class AddAskFriendNtf : public ::google::protobuf::Message {
 public:
  AddAskFriendNtf();
  virtual ~AddAskFriendNtf();

  AddAskFriendNtf(const AddAskFriendNtf& from);

  inline AddAskFriendNtf& operator=(const AddAskFriendNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddAskFriendNtf& default_instance();

  void Swap(AddAskFriendNtf* other);

  // implements Message ----------------------------------------------

  AddAskFriendNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddAskFriendNtf& from);
  void MergeFrom(const AddAskFriendNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.AskFriendData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::AskFriendData& data() const;
  inline ::protoc::gameproto::AskFriendData* mutable_data();
  inline ::protoc::gameproto::AskFriendData* release_data();
  inline void set_allocated_data(::protoc::gameproto::AskFriendData* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddAskFriendNtf)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::AskFriendData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddAskFriendNtf* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAskReq : public ::google::protobuf::Message {
 public:
  ReplyAskReq();
  virtual ~ReplyAskReq();

  ReplyAskReq(const ReplyAskReq& from);

  inline ReplyAskReq& operator=(const ReplyAskReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAskReq& default_instance();

  void Swap(ReplyAskReq* other);

  // implements Message ----------------------------------------------

  ReplyAskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAskReq& from);
  void MergeFrom(const ReplyAskReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional bool reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline bool reply() const;
  inline void set_reply(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReplyAskReq)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_reply();
  inline void clear_has_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  bool reply_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReplyAskReq* default_instance_;
};
// -------------------------------------------------------------------

class ReplyAskAck : public ::google::protobuf::Message {
 public:
  ReplyAskAck();
  virtual ~ReplyAskAck();

  ReplyAskAck(const ReplyAskAck& from);

  inline ReplyAskAck& operator=(const ReplyAskAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyAskAck& default_instance();

  void Swap(ReplyAskAck* other);

  // implements Message ----------------------------------------------

  ReplyAskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyAskAck& from);
  void MergeFrom(const ReplyAskAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 friend_id = 1;
  inline bool has_friend_id() const;
  inline void clear_friend_id();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_id() const;
  inline void set_friend_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReplyAskAck)
 private:
  inline void set_has_friend_id();
  inline void clear_has_friend_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReplyAskAck* default_instance_;
};
// -------------------------------------------------------------------

class NewAskFriendNtf : public ::google::protobuf::Message {
 public:
  NewAskFriendNtf();
  virtual ~NewAskFriendNtf();

  NewAskFriendNtf(const NewAskFriendNtf& from);

  inline NewAskFriendNtf& operator=(const NewAskFriendNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewAskFriendNtf& default_instance();

  void Swap(NewAskFriendNtf* other);

  // implements Message ----------------------------------------------

  NewAskFriendNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewAskFriendNtf& from);
  void MergeFrom(const NewAskFriendNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.NewAskFriendNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static NewAskFriendNtf* default_instance_;
};
// -------------------------------------------------------------------

class SetAskFriendStateReq : public ::google::protobuf::Message {
 public:
  SetAskFriendStateReq();
  virtual ~SetAskFriendStateReq();

  SetAskFriendStateReq(const SetAskFriendStateReq& from);

  inline SetAskFriendStateReq& operator=(const SetAskFriendStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAskFriendStateReq& default_instance();

  void Swap(SetAskFriendStateReq* other);

  // implements Message ----------------------------------------------

  SetAskFriendStateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetAskFriendStateReq& from);
  void MergeFrom(const SetAskFriendStateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bflag = 1;
  inline bool has_bflag() const;
  inline void clear_bflag();
  static const int kBflagFieldNumber = 1;
  inline bool bflag() const;
  inline void set_bflag(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetAskFriendStateReq)
 private:
  inline void set_has_bflag();
  inline void clear_has_bflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetAskFriendStateReq* default_instance_;
};
// -------------------------------------------------------------------

class SetAskFriendStateAck : public ::google::protobuf::Message {
 public:
  SetAskFriendStateAck();
  virtual ~SetAskFriendStateAck();

  SetAskFriendStateAck(const SetAskFriendStateAck& from);

  inline SetAskFriendStateAck& operator=(const SetAskFriendStateAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAskFriendStateAck& default_instance();

  void Swap(SetAskFriendStateAck* other);

  // implements Message ----------------------------------------------

  SetAskFriendStateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetAskFriendStateAck& from);
  void MergeFrom(const SetAskFriendStateAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bflag = 1;
  inline bool has_bflag() const;
  inline void clear_bflag();
  static const int kBflagFieldNumber = 1;
  inline bool bflag() const;
  inline void set_bflag(bool value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetAskFriendStateAck)
 private:
  inline void set_has_bflag();
  inline void clear_has_bflag();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bflag_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetAskFriendStateAck* default_instance_;
};
// -------------------------------------------------------------------

class GetChapterReq : public ::google::protobuf::Message {
 public:
  GetChapterReq();
  virtual ~GetChapterReq();

  GetChapterReq(const GetChapterReq& from);

  inline GetChapterReq& operator=(const GetChapterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChapterReq& default_instance();

  void Swap(GetChapterReq* other);

  // implements Message ----------------------------------------------

  GetChapterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChapterReq& from);
  void MergeFrom(const GetChapterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChapterReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChapterReq* default_instance_;
};
// -------------------------------------------------------------------

class OneCheckPoint : public ::google::protobuf::Message {
 public:
  OneCheckPoint();
  virtual ~OneCheckPoint();

  OneCheckPoint(const OneCheckPoint& from);

  inline OneCheckPoint& operator=(const OneCheckPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneCheckPoint& default_instance();

  void Swap(OneCheckPoint* other);

  // implements Message ----------------------------------------------

  OneCheckPoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneCheckPoint& from);
  void MergeFrom(const OneCheckPoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 check_point_id = 1;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 1;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 seconds = 2;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 2;
  inline ::google::protobuf::int32 seconds() const;
  inline void set_seconds(::google::protobuf::int32 value);

  // optional int32 challenged_count = 3;
  inline bool has_challenged_count() const;
  inline void clear_challenged_count();
  static const int kChallengedCountFieldNumber = 3;
  inline ::google::protobuf::int32 challenged_count() const;
  inline void set_challenged_count(::google::protobuf::int32 value);

  // optional int32 buy_challenged_count = 4;
  inline bool has_buy_challenged_count() const;
  inline void clear_buy_challenged_count();
  static const int kBuyChallengedCountFieldNumber = 4;
  inline ::google::protobuf::int32 buy_challenged_count() const;
  inline void set_buy_challenged_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneCheckPoint)
 private:
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_challenged_count();
  inline void clear_has_challenged_count();
  inline void set_has_buy_challenged_count();
  inline void clear_has_buy_challenged_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 challenged_count_;
  ::google::protobuf::int32 buy_challenged_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneCheckPoint* default_instance_;
};
// -------------------------------------------------------------------

class OneChapter : public ::google::protobuf::Message {
 public:
  OneChapter();
  virtual ~OneChapter();

  OneChapter(const OneChapter& from);

  inline OneChapter& operator=(const OneChapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneChapter& default_instance();

  void Swap(OneChapter* other);

  // implements Message ----------------------------------------------

  OneChapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneChapter& from);
  void MergeFrom(const OneChapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // repeated .protoc.gameproto.OneCheckPoint points = 2;
  inline int points_size() const;
  inline void clear_points();
  static const int kPointsFieldNumber = 2;
  inline const ::protoc::gameproto::OneCheckPoint& points(int index) const;
  inline ::protoc::gameproto::OneCheckPoint* mutable_points(int index);
  inline ::protoc::gameproto::OneCheckPoint* add_points();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneCheckPoint >&
      points() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneCheckPoint >*
      mutable_points();

  // optional int32 chapter_kind = 3;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 3;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // optional int32 challenged_count = 4;
  inline bool has_challenged_count() const;
  inline void clear_challenged_count();
  static const int kChallengedCountFieldNumber = 4;
  inline ::google::protobuf::int32 challenged_count() const;
  inline void set_challenged_count(::google::protobuf::int32 value);

  // optional int32 is_active_chapter_open = 5;
  inline bool has_is_active_chapter_open() const;
  inline void clear_is_active_chapter_open();
  static const int kIsActiveChapterOpenFieldNumber = 5;
  inline ::google::protobuf::int32 is_active_chapter_open() const;
  inline void set_is_active_chapter_open(::google::protobuf::int32 value);

  // optional int32 max_challenge_count = 6;
  inline bool has_max_challenge_count() const;
  inline void clear_max_challenge_count();
  static const int kMaxChallengeCountFieldNumber = 6;
  inline ::google::protobuf::int32 max_challenge_count() const;
  inline void set_max_challenge_count(::google::protobuf::int32 value);

  // optional int32 lose_type = 7;
  inline bool has_lose_type() const;
  inline void clear_lose_type();
  static const int kLoseTypeFieldNumber = 7;
  inline ::google::protobuf::int32 lose_type() const;
  inline void set_lose_type(::google::protobuf::int32 value);

  // optional float times = 8;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 8;
  inline float times() const;
  inline void set_times(float value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneChapter)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();
  inline void set_has_challenged_count();
  inline void clear_has_challenged_count();
  inline void set_has_is_active_chapter_open();
  inline void clear_has_is_active_chapter_open();
  inline void set_has_max_challenge_count();
  inline void clear_has_max_challenge_count();
  inline void set_has_lose_type();
  inline void clear_has_lose_type();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneCheckPoint > points_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 chapter_kind_;
  ::google::protobuf::int32 challenged_count_;
  ::google::protobuf::int32 is_active_chapter_open_;
  ::google::protobuf::int32 max_challenge_count_;
  ::google::protobuf::int32 lose_type_;
  float times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneChapter* default_instance_;
};
// -------------------------------------------------------------------

class GetChapterAck : public ::google::protobuf::Message {
 public:
  GetChapterAck();
  virtual ~GetChapterAck();

  GetChapterAck(const GetChapterAck& from);

  inline GetChapterAck& operator=(const GetChapterAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChapterAck& default_instance();

  void Swap(GetChapterAck* other);

  // implements Message ----------------------------------------------

  GetChapterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChapterAck& from);
  void MergeFrom(const GetChapterAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.OneChapter chapters = 1;
  inline int chapters_size() const;
  inline void clear_chapters();
  static const int kChaptersFieldNumber = 1;
  inline const ::protoc::gameproto::OneChapter& chapters(int index) const;
  inline ::protoc::gameproto::OneChapter* mutable_chapters(int index);
  inline ::protoc::gameproto::OneChapter* add_chapters();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >&
      chapters() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >*
      mutable_chapters();

  // optional int32 chapter_id = 2;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 3;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 3;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 next_chapter_id = 4;
  inline bool has_next_chapter_id() const;
  inline void clear_next_chapter_id();
  static const int kNextChapterIdFieldNumber = 4;
  inline ::google::protobuf::int32 next_chapter_id() const;
  inline void set_next_chapter_id(::google::protobuf::int32 value);

  // optional int32 next_check_point_id = 5;
  inline bool has_next_check_point_id() const;
  inline void clear_next_check_point_id();
  static const int kNextCheckPointIdFieldNumber = 5;
  inline ::google::protobuf::int32 next_check_point_id() const;
  inline void set_next_check_point_id(::google::protobuf::int32 value);

  // optional int32 jingying_chapter_id = 6;
  inline bool has_jingying_chapter_id() const;
  inline void clear_jingying_chapter_id();
  static const int kJingyingChapterIdFieldNumber = 6;
  inline ::google::protobuf::int32 jingying_chapter_id() const;
  inline void set_jingying_chapter_id(::google::protobuf::int32 value);

  // optional int32 jingying_check_point_id = 7;
  inline bool has_jingying_check_point_id() const;
  inline void clear_jingying_check_point_id();
  static const int kJingyingCheckPointIdFieldNumber = 7;
  inline ::google::protobuf::int32 jingying_check_point_id() const;
  inline void set_jingying_check_point_id(::google::protobuf::int32 value);

  // optional int32 jingying_next_chapter_id = 8;
  inline bool has_jingying_next_chapter_id() const;
  inline void clear_jingying_next_chapter_id();
  static const int kJingyingNextChapterIdFieldNumber = 8;
  inline ::google::protobuf::int32 jingying_next_chapter_id() const;
  inline void set_jingying_next_chapter_id(::google::protobuf::int32 value);

  // optional int32 jingying_next_check_point_id = 9;
  inline bool has_jingying_next_check_point_id() const;
  inline void clear_jingying_next_check_point_id();
  static const int kJingyingNextCheckPointIdFieldNumber = 9;
  inline ::google::protobuf::int32 jingying_next_check_point_id() const;
  inline void set_jingying_next_check_point_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChapterAck)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_next_chapter_id();
  inline void clear_has_next_chapter_id();
  inline void set_has_next_check_point_id();
  inline void clear_has_next_check_point_id();
  inline void set_has_jingying_chapter_id();
  inline void clear_has_jingying_chapter_id();
  inline void set_has_jingying_check_point_id();
  inline void clear_has_jingying_check_point_id();
  inline void set_has_jingying_next_chapter_id();
  inline void clear_has_jingying_next_chapter_id();
  inline void set_has_jingying_next_check_point_id();
  inline void clear_has_jingying_next_check_point_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter > chapters_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 next_chapter_id_;
  ::google::protobuf::int32 next_check_point_id_;
  ::google::protobuf::int32 jingying_chapter_id_;
  ::google::protobuf::int32 jingying_check_point_id_;
  ::google::protobuf::int32 jingying_next_chapter_id_;
  ::google::protobuf::int32 jingying_next_check_point_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChapterAck* default_instance_;
};
// -------------------------------------------------------------------

class OneChapterLoseActivity : public ::google::protobuf::Message {
 public:
  OneChapterLoseActivity();
  virtual ~OneChapterLoseActivity();

  OneChapterLoseActivity(const OneChapterLoseActivity& from);

  inline OneChapterLoseActivity& operator=(const OneChapterLoseActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneChapterLoseActivity& default_instance();

  void Swap(OneChapterLoseActivity* other);

  // implements Message ----------------------------------------------

  OneChapterLoseActivity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneChapterLoseActivity& from);
  void MergeFrom(const OneChapterLoseActivity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_kind = 1;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // optional int32 chapter_id = 2;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 lose_type = 3;
  inline bool has_lose_type() const;
  inline void clear_lose_type();
  static const int kLoseTypeFieldNumber = 3;
  inline ::google::protobuf::int32 lose_type() const;
  inline void set_lose_type(::google::protobuf::int32 value);

  // optional float times = 4;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 4;
  inline float times() const;
  inline void set_times(float value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneChapterLoseActivity)
 private:
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_lose_type();
  inline void clear_has_lose_type();
  inline void set_has_times();
  inline void clear_has_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_kind_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 lose_type_;
  float times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneChapterLoseActivity* default_instance_;
};
// -------------------------------------------------------------------

class ChaptersLoseActivityNtf : public ::google::protobuf::Message {
 public:
  ChaptersLoseActivityNtf();
  virtual ~ChaptersLoseActivityNtf();

  ChaptersLoseActivityNtf(const ChaptersLoseActivityNtf& from);

  inline ChaptersLoseActivityNtf& operator=(const ChaptersLoseActivityNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChaptersLoseActivityNtf& default_instance();

  void Swap(ChaptersLoseActivityNtf* other);

  // implements Message ----------------------------------------------

  ChaptersLoseActivityNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChaptersLoseActivityNtf& from);
  void MergeFrom(const ChaptersLoseActivityNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 begin_time = 1;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 1;
  inline ::google::protobuf::int64 begin_time() const;
  inline void set_begin_time(::google::protobuf::int64 value);

  // optional int64 end_time = 2;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // repeated .protoc.gameproto.OneChapterLoseActivity chapter_lose_activities = 3;
  inline int chapter_lose_activities_size() const;
  inline void clear_chapter_lose_activities();
  static const int kChapterLoseActivitiesFieldNumber = 3;
  inline const ::protoc::gameproto::OneChapterLoseActivity& chapter_lose_activities(int index) const;
  inline ::protoc::gameproto::OneChapterLoseActivity* mutable_chapter_lose_activities(int index);
  inline ::protoc::gameproto::OneChapterLoseActivity* add_chapter_lose_activities();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapterLoseActivity >&
      chapter_lose_activities() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapterLoseActivity >*
      mutable_chapter_lose_activities();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChaptersLoseActivityNtf)
 private:
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapterLoseActivity > chapter_lose_activities_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChaptersLoseActivityNtf* default_instance_;
};
// -------------------------------------------------------------------

class AddActiveChapterNtf : public ::google::protobuf::Message {
 public:
  AddActiveChapterNtf();
  virtual ~AddActiveChapterNtf();

  AddActiveChapterNtf(const AddActiveChapterNtf& from);

  inline AddActiveChapterNtf& operator=(const AddActiveChapterNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddActiveChapterNtf& default_instance();

  void Swap(AddActiveChapterNtf* other);

  // implements Message ----------------------------------------------

  AddActiveChapterNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddActiveChapterNtf& from);
  void MergeFrom(const AddActiveChapterNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.OneChapter chapters = 1;
  inline int chapters_size() const;
  inline void clear_chapters();
  static const int kChaptersFieldNumber = 1;
  inline const ::protoc::gameproto::OneChapter& chapters(int index) const;
  inline ::protoc::gameproto::OneChapter* mutable_chapters(int index);
  inline ::protoc::gameproto::OneChapter* add_chapters();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >&
      chapters() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >*
      mutable_chapters();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddActiveChapterNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter > chapters_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddActiveChapterNtf* default_instance_;
};
// -------------------------------------------------------------------

class UpdateCheckPointNtf : public ::google::protobuf::Message {
 public:
  UpdateCheckPointNtf();
  virtual ~UpdateCheckPointNtf();

  UpdateCheckPointNtf(const UpdateCheckPointNtf& from);

  inline UpdateCheckPointNtf& operator=(const UpdateCheckPointNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCheckPointNtf& default_instance();

  void Swap(UpdateCheckPointNtf* other);

  // implements Message ----------------------------------------------

  UpdateCheckPointNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateCheckPointNtf& from);
  void MergeFrom(const UpdateCheckPointNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional .protoc.gameproto.OneCheckPoint one_point = 2;
  inline bool has_one_point() const;
  inline void clear_one_point();
  static const int kOnePointFieldNumber = 2;
  inline const ::protoc::gameproto::OneCheckPoint& one_point() const;
  inline ::protoc::gameproto::OneCheckPoint* mutable_one_point();
  inline ::protoc::gameproto::OneCheckPoint* release_one_point();
  inline void set_allocated_one_point(::protoc::gameproto::OneCheckPoint* one_point);

  // optional int32 next_chapter_id = 3;
  inline bool has_next_chapter_id() const;
  inline void clear_next_chapter_id();
  static const int kNextChapterIdFieldNumber = 3;
  inline ::google::protobuf::int32 next_chapter_id() const;
  inline void set_next_chapter_id(::google::protobuf::int32 value);

  // optional int32 next_check_point_id = 4;
  inline bool has_next_check_point_id() const;
  inline void clear_next_check_point_id();
  static const int kNextCheckPointIdFieldNumber = 4;
  inline ::google::protobuf::int32 next_check_point_id() const;
  inline void set_next_check_point_id(::google::protobuf::int32 value);

  // optional int32 chapter_kind = 5;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 5;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // optional int32 jingying_chapter_open = 6;
  inline bool has_jingying_chapter_open() const;
  inline void clear_jingying_chapter_open();
  static const int kJingyingChapterOpenFieldNumber = 6;
  inline ::google::protobuf::int32 jingying_chapter_open() const;
  inline void set_jingying_chapter_open(::google::protobuf::int32 value);

  // optional int32 jingying_chapter_id = 7;
  inline bool has_jingying_chapter_id() const;
  inline void clear_jingying_chapter_id();
  static const int kJingyingChapterIdFieldNumber = 7;
  inline ::google::protobuf::int32 jingying_chapter_id() const;
  inline void set_jingying_chapter_id(::google::protobuf::int32 value);

  // optional int32 jingying_check_point_id = 8;
  inline bool has_jingying_check_point_id() const;
  inline void clear_jingying_check_point_id();
  static const int kJingyingCheckPointIdFieldNumber = 8;
  inline ::google::protobuf::int32 jingying_check_point_id() const;
  inline void set_jingying_check_point_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateCheckPointNtf)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_one_point();
  inline void clear_has_one_point();
  inline void set_has_next_chapter_id();
  inline void clear_has_next_chapter_id();
  inline void set_has_next_check_point_id();
  inline void clear_has_next_check_point_id();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();
  inline void set_has_jingying_chapter_open();
  inline void clear_has_jingying_chapter_open();
  inline void set_has_jingying_chapter_id();
  inline void clear_has_jingying_chapter_id();
  inline void set_has_jingying_check_point_id();
  inline void clear_has_jingying_check_point_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::OneCheckPoint* one_point_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 next_chapter_id_;
  ::google::protobuf::int32 next_check_point_id_;
  ::google::protobuf::int32 chapter_kind_;
  ::google::protobuf::int32 jingying_chapter_open_;
  ::google::protobuf::int32 jingying_chapter_id_;
  ::google::protobuf::int32 jingying_check_point_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateCheckPointNtf* default_instance_;
};
// -------------------------------------------------------------------

class SelectCheckPointReq : public ::google::protobuf::Message {
 public:
  SelectCheckPointReq();
  virtual ~SelectCheckPointReq();

  SelectCheckPointReq(const SelectCheckPointReq& from);

  inline SelectCheckPointReq& operator=(const SelectCheckPointReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectCheckPointReq& default_instance();

  void Swap(SelectCheckPointReq* other);

  // implements Message ----------------------------------------------

  SelectCheckPointReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectCheckPointReq& from);
  void MergeFrom(const SelectCheckPointReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 2;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 2;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 chapter_kind = 3;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 3;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SelectCheckPointReq)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 chapter_kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SelectCheckPointReq* default_instance_;
};
// -------------------------------------------------------------------

class SelectCheckPointAck : public ::google::protobuf::Message {
 public:
  SelectCheckPointAck();
  virtual ~SelectCheckPointAck();

  SelectCheckPointAck(const SelectCheckPointAck& from);

  inline SelectCheckPointAck& operator=(const SelectCheckPointAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectCheckPointAck& default_instance();

  void Swap(SelectCheckPointAck* other);

  // implements Message ----------------------------------------------

  SelectCheckPointAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectCheckPointAck& from);
  void MergeFrom(const SelectCheckPointAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 2;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 2;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional int32 chapter_kind = 4;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 4;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // optional int32 challenged_count = 5;
  inline bool has_challenged_count() const;
  inline void clear_challenged_count();
  static const int kChallengedCountFieldNumber = 5;
  inline ::google::protobuf::int32 challenged_count() const;
  inline void set_challenged_count(::google::protobuf::int32 value);

  // optional int32 buy_challenged_count = 6;
  inline bool has_buy_challenged_count() const;
  inline void clear_buy_challenged_count();
  static const int kBuyChallengedCountFieldNumber = 6;
  inline ::google::protobuf::int32 buy_challenged_count() const;
  inline void set_buy_challenged_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SelectCheckPointAck)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();
  inline void set_has_challenged_count();
  inline void clear_has_challenged_count();
  inline void set_has_buy_challenged_count();
  inline void clear_has_buy_challenged_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 chapter_kind_;
  ::google::protobuf::int32 challenged_count_;
  ::google::protobuf::int32 buy_challenged_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SelectCheckPointAck* default_instance_;
};
// -------------------------------------------------------------------

class GetCheckPointRankReq : public ::google::protobuf::Message {
 public:
  GetCheckPointRankReq();
  virtual ~GetCheckPointRankReq();

  GetCheckPointRankReq(const GetCheckPointRankReq& from);

  inline GetCheckPointRankReq& operator=(const GetCheckPointRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCheckPointRankReq& default_instance();

  void Swap(GetCheckPointRankReq* other);

  // implements Message ----------------------------------------------

  GetCheckPointRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCheckPointRankReq& from);
  void MergeFrom(const GetCheckPointRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 2;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 2;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 chapter_kind = 3;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 3;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCheckPointRankReq)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 chapter_kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCheckPointRankReq* default_instance_;
};
// -------------------------------------------------------------------

class FriendRankItem : public ::google::protobuf::Message {
 public:
  FriendRankItem();
  virtual ~FriendRankItem();

  FriendRankItem(const FriendRankItem& from);

  inline FriendRankItem& operator=(const FriendRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendRankItem& default_instance();

  void Swap(FriendRankItem* other);

  // implements Message ----------------------------------------------

  FriendRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendRankItem& from);
  void MergeFrom(const FriendRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 head_id = 3;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 3;
  inline ::google::protobuf::int32 head_id() const;
  inline void set_head_id(::google::protobuf::int32 value);

  // optional int32 pass_seconds = 4;
  inline bool has_pass_seconds() const;
  inline void clear_pass_seconds();
  static const int kPassSecondsFieldNumber = 4;
  inline ::google::protobuf::int32 pass_seconds() const;
  inline void set_pass_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.FriendRankItem)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_pass_seconds();
  inline void clear_has_pass_seconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 head_id_;
  ::google::protobuf::int32 pass_seconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static FriendRankItem* default_instance_;
};
// -------------------------------------------------------------------

class GetCheckPointRankAck : public ::google::protobuf::Message {
 public:
  GetCheckPointRankAck();
  virtual ~GetCheckPointRankAck();

  GetCheckPointRankAck(const GetCheckPointRankAck& from);

  inline GetCheckPointRankAck& operator=(const GetCheckPointRankAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCheckPointRankAck& default_instance();

  void Swap(GetCheckPointRankAck* other);

  // implements Message ----------------------------------------------

  GetCheckPointRankAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCheckPointRankAck& from);
  void MergeFrom(const GetCheckPointRankAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.FriendRankItem friend_rank = 1;
  inline int friend_rank_size() const;
  inline void clear_friend_rank();
  static const int kFriendRankFieldNumber = 1;
  inline const ::protoc::gameproto::FriendRankItem& friend_rank(int index) const;
  inline ::protoc::gameproto::FriendRankItem* mutable_friend_rank(int index);
  inline ::protoc::gameproto::FriendRankItem* add_friend_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendRankItem >&
      friend_rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendRankItem >*
      mutable_friend_rank();

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCheckPointRankAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendRankItem > friend_rank_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCheckPointRankAck* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendArmsReq : public ::google::protobuf::Message {
 public:
  GetFriendArmsReq();
  virtual ~GetFriendArmsReq();

  GetFriendArmsReq(const GetFriendArmsReq& from);

  inline GetFriendArmsReq& operator=(const GetFriendArmsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendArmsReq& default_instance();

  void Swap(GetFriendArmsReq* other);

  // implements Message ----------------------------------------------

  GetFriendArmsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendArmsReq& from);
  void MergeFrom(const GetFriendArmsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetFriendArmsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetFriendArmsReq* default_instance_;
};
// -------------------------------------------------------------------

class FriendArms : public ::google::protobuf::Message {
 public:
  FriendArms();
  virtual ~FriendArms();

  FriendArms(const FriendArms& from);

  inline FriendArms& operator=(const FriendArms& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendArms& default_instance();

  void Swap(FriendArms* other);

  // implements Message ----------------------------------------------

  FriendArms* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendArms& from);
  void MergeFrom(const FriendArms& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 digitid = 1;
  inline bool has_digitid() const;
  inline void clear_digitid();
  static const int kDigitidFieldNumber = 1;
  inline ::google::protobuf::uint64 digitid() const;
  inline void set_digitid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .protoc.gameproto.PetRecord pet = 3;
  inline bool has_pet() const;
  inline void clear_pet();
  static const int kPetFieldNumber = 3;
  inline const ::protoc::gameproto::PetRecord& pet() const;
  inline ::protoc::gameproto::PetRecord* mutable_pet();
  inline ::protoc::gameproto::PetRecord* release_pet();
  inline void set_allocated_pet(::protoc::gameproto::PetRecord* pet);

  // optional int32 friendship = 4;
  inline bool has_friendship() const;
  inline void clear_friendship();
  static const int kFriendshipFieldNumber = 4;
  inline ::google::protobuf::int32 friendship() const;
  inline void set_friendship(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional bool is_friend = 6;
  inline bool has_is_friend() const;
  inline void clear_is_friend();
  static const int kIsFriendFieldNumber = 6;
  inline bool is_friend() const;
  inline void set_is_friend(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.FriendArms)
 private:
  inline void set_has_digitid();
  inline void clear_has_digitid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pet();
  inline void clear_has_pet();
  inline void set_has_friendship();
  inline void clear_has_friendship();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_is_friend();
  inline void clear_has_is_friend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 digitid_;
  ::std::string* name_;
  ::protoc::gameproto::PetRecord* pet_;
  ::google::protobuf::int32 friendship_;
  ::google::protobuf::int32 level_;
  bool is_friend_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static FriendArms* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendArmsAck : public ::google::protobuf::Message {
 public:
  GetFriendArmsAck();
  virtual ~GetFriendArmsAck();

  GetFriendArmsAck(const GetFriendArmsAck& from);

  inline GetFriendArmsAck& operator=(const GetFriendArmsAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendArmsAck& default_instance();

  void Swap(GetFriendArmsAck* other);

  // implements Message ----------------------------------------------

  GetFriendArmsAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendArmsAck& from);
  void MergeFrom(const GetFriendArmsAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.FriendArms pets = 1;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 1;
  inline const ::protoc::gameproto::FriendArms& pets(int index) const;
  inline ::protoc::gameproto::FriendArms* mutable_pets(int index);
  inline ::protoc::gameproto::FriendArms* add_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendArms >&
      pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendArms >*
      mutable_pets();

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetFriendArmsAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendArms > pets_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetFriendArmsAck* default_instance_;
};
// -------------------------------------------------------------------

class BeginWarReq : public ::google::protobuf::Message {
 public:
  BeginWarReq();
  virtual ~BeginWarReq();

  BeginWarReq(const BeginWarReq& from);

  inline BeginWarReq& operator=(const BeginWarReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginWarReq& default_instance();

  void Swap(BeginWarReq* other);

  // implements Message ----------------------------------------------

  BeginWarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginWarReq& from);
  void MergeFrom(const BeginWarReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 digitid = 1;
  inline bool has_digitid() const;
  inline void clear_digitid();
  static const int kDigitidFieldNumber = 1;
  inline ::google::protobuf::uint64 digitid() const;
  inline void set_digitid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BeginWarReq)
 private:
  inline void set_has_digitid();
  inline void clear_has_digitid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 digitid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BeginWarReq* default_instance_;
};
// -------------------------------------------------------------------

class MonsterBurstItem : public ::google::protobuf::Message {
 public:
  MonsterBurstItem();
  virtual ~MonsterBurstItem();

  MonsterBurstItem(const MonsterBurstItem& from);

  inline MonsterBurstItem& operator=(const MonsterBurstItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterBurstItem& default_instance();

  void Swap(MonsterBurstItem* other);

  // implements Message ----------------------------------------------

  MonsterBurstItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonsterBurstItem& from);
  void MergeFrom(const MonsterBurstItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 monster_id = 1;
  inline bool has_monster_id() const;
  inline void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  inline ::google::protobuf::int32 monster_id() const;
  inline void set_monster_id(::google::protobuf::int32 value);

  // repeated .protoc.gameproto.TeXiaoItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::protoc::gameproto::TeXiaoItem& item(int index) const;
  inline ::protoc::gameproto::TeXiaoItem* mutable_item(int index);
  inline ::protoc::gameproto::TeXiaoItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.MonsterBurstItem)
 private:
  inline void set_has_monster_id();
  inline void clear_has_monster_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem > item_;
  ::google::protobuf::int32 monster_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static MonsterBurstItem* default_instance_;
};
// -------------------------------------------------------------------

class TreasureBurstItem : public ::google::protobuf::Message {
 public:
  TreasureBurstItem();
  virtual ~TreasureBurstItem();

  TreasureBurstItem(const TreasureBurstItem& from);

  inline TreasureBurstItem& operator=(const TreasureBurstItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TreasureBurstItem& default_instance();

  void Swap(TreasureBurstItem* other);

  // implements Message ----------------------------------------------

  TreasureBurstItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TreasureBurstItem& from);
  void MergeFrom(const TreasureBurstItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 treasure_id = 1;
  inline bool has_treasure_id() const;
  inline void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 1;
  inline ::google::protobuf::int32 treasure_id() const;
  inline void set_treasure_id(::google::protobuf::int32 value);

  // repeated .protoc.gameproto.TeXiaoItem item = 2;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 2;
  inline const ::protoc::gameproto::TeXiaoItem& item(int index) const;
  inline ::protoc::gameproto::TeXiaoItem* mutable_item(int index);
  inline ::protoc::gameproto::TeXiaoItem* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TreasureBurstItem)
 private:
  inline void set_has_treasure_id();
  inline void clear_has_treasure_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem > item_;
  ::google::protobuf::int32 treasure_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TreasureBurstItem* default_instance_;
};
// -------------------------------------------------------------------

class BufferItem : public ::google::protobuf::Message {
 public:
  BufferItem();
  virtual ~BufferItem();

  BufferItem(const BufferItem& from);

  inline BufferItem& operator=(const BufferItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BufferItem& default_instance();

  void Swap(BufferItem* other);

  // implements Message ----------------------------------------------

  BufferItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BufferItem& from);
  void MergeFrom(const BufferItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BufferItem_BufferEffectType BufferEffectType;
  static const BufferEffectType no_type = BufferItem_BufferEffectType_no_type;
  static const BufferEffectType hurt = BufferItem_BufferEffectType_hurt;
  static const BufferEffectType reply = BufferItem_BufferEffectType_reply;
  static const BufferEffectType hp = BufferItem_BufferEffectType_hp;
  static const BufferEffectType spirit = BufferItem_BufferEffectType_spirit;
  static const BufferEffectType speed = BufferItem_BufferEffectType_speed;
  static const BufferEffectType crit = BufferItem_BufferEffectType_crit;
  static const BufferEffectType magic_reply = BufferItem_BufferEffectType_magic_reply;
  static inline bool BufferEffectType_IsValid(int value) {
    return BufferItem_BufferEffectType_IsValid(value);
  }
  static const BufferEffectType BufferEffectType_MIN =
    BufferItem_BufferEffectType_BufferEffectType_MIN;
  static const BufferEffectType BufferEffectType_MAX =
    BufferItem_BufferEffectType_BufferEffectType_MAX;
  static const int BufferEffectType_ARRAYSIZE =
    BufferItem_BufferEffectType_BufferEffectType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BufferEffectType_descriptor() {
    return BufferItem_BufferEffectType_descriptor();
  }
  static inline const ::std::string& BufferEffectType_Name(BufferEffectType value) {
    return BufferItem_BufferEffectType_Name(value);
  }
  static inline bool BufferEffectType_Parse(const ::std::string& name,
      BufferEffectType* value) {
    return BufferItem_BufferEffectType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.BufferItem.BufferEffectType id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::protoc::gameproto::BufferItem_BufferEffectType id() const;
  inline void set_id(::protoc::gameproto::BufferItem_BufferEffectType value);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BufferItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int id_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BufferItem* default_instance_;
};
// -------------------------------------------------------------------

class BeginWarAck : public ::google::protobuf::Message {
 public:
  BeginWarAck();
  virtual ~BeginWarAck();

  BeginWarAck(const BeginWarAck& from);

  inline BeginWarAck& operator=(const BeginWarAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginWarAck& default_instance();

  void Swap(BeginWarAck* other);

  // implements Message ----------------------------------------------

  BeginWarAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeginWarAck& from);
  void MergeFrom(const BeginWarAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional bytes sign_spirit = 2;
  inline bool has_sign_spirit() const;
  inline void clear_sign_spirit();
  static const int kSignSpiritFieldNumber = 2;
  inline const ::std::string& sign_spirit() const;
  inline void set_sign_spirit(const ::std::string& value);
  inline void set_sign_spirit(const char* value);
  inline void set_sign_spirit(const void* value, size_t size);
  inline ::std::string* mutable_sign_spirit();
  inline ::std::string* release_sign_spirit();
  inline void set_allocated_sign_spirit(::std::string* sign_spirit);

  // optional bytes sign_hp = 3;
  inline bool has_sign_hp() const;
  inline void clear_sign_hp();
  static const int kSignHpFieldNumber = 3;
  inline const ::std::string& sign_hp() const;
  inline void set_sign_hp(const ::std::string& value);
  inline void set_sign_hp(const char* value);
  inline void set_sign_hp(const void* value, size_t size);
  inline ::std::string* mutable_sign_hp();
  inline ::std::string* release_sign_hp();
  inline void set_allocated_sign_hp(::std::string* sign_hp);

  // optional bytes sign_mp = 4;
  inline bool has_sign_mp() const;
  inline void clear_sign_mp();
  static const int kSignMpFieldNumber = 4;
  inline const ::std::string& sign_mp() const;
  inline void set_sign_mp(const ::std::string& value);
  inline void set_sign_mp(const char* value);
  inline void set_sign_mp(const void* value, size_t size);
  inline ::std::string* mutable_sign_mp();
  inline ::std::string* release_sign_mp();
  inline void set_allocated_sign_mp(::std::string* sign_mp);

  // repeated .protoc.gameproto.PetRecordSIGN sign_my_pets = 5;
  inline int sign_my_pets_size() const;
  inline void clear_sign_my_pets();
  static const int kSignMyPetsFieldNumber = 5;
  inline const ::protoc::gameproto::PetRecordSIGN& sign_my_pets(int index) const;
  inline ::protoc::gameproto::PetRecordSIGN* mutable_sign_my_pets(int index);
  inline ::protoc::gameproto::PetRecordSIGN* add_sign_my_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
      sign_my_pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
      mutable_sign_my_pets();

  // optional .protoc.gameproto.PetRecordSIGN sign_help_pet = 6;
  inline bool has_sign_help_pet() const;
  inline void clear_sign_help_pet();
  static const int kSignHelpPetFieldNumber = 6;
  inline const ::protoc::gameproto::PetRecordSIGN& sign_help_pet() const;
  inline ::protoc::gameproto::PetRecordSIGN* mutable_sign_help_pet();
  inline ::protoc::gameproto::PetRecordSIGN* release_sign_help_pet();
  inline void set_allocated_sign_help_pet(::protoc::gameproto::PetRecordSIGN* sign_help_pet);

  // optional .protoc.gameproto.PetRecord help_pet = 7;
  inline bool has_help_pet() const;
  inline void clear_help_pet();
  static const int kHelpPetFieldNumber = 7;
  inline const ::protoc::gameproto::PetRecord& help_pet() const;
  inline ::protoc::gameproto::PetRecord* mutable_help_pet();
  inline ::protoc::gameproto::PetRecord* release_help_pet();
  inline void set_allocated_help_pet(::protoc::gameproto::PetRecord* help_pet);

  // repeated .protoc.gameproto.BufferItem buff = 8;
  inline int buff_size() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 8;
  inline const ::protoc::gameproto::BufferItem& buff(int index) const;
  inline ::protoc::gameproto::BufferItem* mutable_buff(int index);
  inline ::protoc::gameproto::BufferItem* add_buff();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >&
      buff() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >*
      mutable_buff();

  // repeated .protoc.gameproto.MonsterBurstItem burst_item = 9;
  inline int burst_item_size() const;
  inline void clear_burst_item();
  static const int kBurstItemFieldNumber = 9;
  inline const ::protoc::gameproto::MonsterBurstItem& burst_item(int index) const;
  inline ::protoc::gameproto::MonsterBurstItem* mutable_burst_item(int index);
  inline ::protoc::gameproto::MonsterBurstItem* add_burst_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MonsterBurstItem >&
      burst_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MonsterBurstItem >*
      mutable_burst_item();

  // repeated .protoc.gameproto.TreasureBurstItem treasure_item = 10;
  inline int treasure_item_size() const;
  inline void clear_treasure_item();
  static const int kTreasureItemFieldNumber = 10;
  inline const ::protoc::gameproto::TreasureBurstItem& treasure_item(int index) const;
  inline ::protoc::gameproto::TreasureBurstItem* mutable_treasure_item(int index);
  inline ::protoc::gameproto::TreasureBurstItem* add_treasure_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TreasureBurstItem >&
      treasure_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TreasureBurstItem >*
      mutable_treasure_item();

  // optional int32 rnd_start_war_key = 11;
  inline bool has_rnd_start_war_key() const;
  inline void clear_rnd_start_war_key();
  static const int kRndStartWarKeyFieldNumber = 11;
  inline ::google::protobuf::int32 rnd_start_war_key() const;
  inline void set_rnd_start_war_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.BeginWarAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_sign_spirit();
  inline void clear_has_sign_spirit();
  inline void set_has_sign_hp();
  inline void clear_has_sign_hp();
  inline void set_has_sign_mp();
  inline void clear_has_sign_mp();
  inline void set_has_sign_help_pet();
  inline void clear_has_sign_help_pet();
  inline void set_has_help_pet();
  inline void clear_has_help_pet();
  inline void set_has_rnd_start_war_key();
  inline void clear_has_rnd_start_war_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sign_spirit_;
  ::std::string* sign_hp_;
  ::std::string* sign_mp_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN > sign_my_pets_;
  ::protoc::gameproto::PetRecordSIGN* sign_help_pet_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 rnd_start_war_key_;
  ::protoc::gameproto::PetRecord* help_pet_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem > buff_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MonsterBurstItem > burst_item_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TreasureBurstItem > treasure_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static BeginWarAck* default_instance_;
};
// -------------------------------------------------------------------

class NowStartWarRpt : public ::google::protobuf::Message {
 public:
  NowStartWarRpt();
  virtual ~NowStartWarRpt();

  NowStartWarRpt(const NowStartWarRpt& from);

  inline NowStartWarRpt& operator=(const NowStartWarRpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NowStartWarRpt& default_instance();

  void Swap(NowStartWarRpt* other);

  // implements Message ----------------------------------------------

  NowStartWarRpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NowStartWarRpt& from);
  void MergeFrom(const NowStartWarRpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rnd_start_war_key = 1;
  inline bool has_rnd_start_war_key() const;
  inline void clear_rnd_start_war_key();
  static const int kRndStartWarKeyFieldNumber = 1;
  inline ::google::protobuf::int32 rnd_start_war_key() const;
  inline void set_rnd_start_war_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.NowStartWarRpt)
 private:
  inline void set_has_rnd_start_war_key();
  inline void clear_has_rnd_start_war_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rnd_start_war_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static NowStartWarRpt* default_instance_;
};
// -------------------------------------------------------------------

class DeadMonster : public ::google::protobuf::Message {
 public:
  DeadMonster();
  virtual ~DeadMonster();

  DeadMonster(const DeadMonster& from);

  inline DeadMonster& operator=(const DeadMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadMonster& default_instance();

  void Swap(DeadMonster* other);

  // implements Message ----------------------------------------------

  DeadMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadMonster& from);
  void MergeFrom(const DeadMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 class_id = 1;
  inline bool has_class_id() const;
  inline void clear_class_id();
  static const int kClassIdFieldNumber = 1;
  inline ::google::protobuf::int32 class_id() const;
  inline void set_class_id(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DeadMonster)
 private:
  inline void set_has_class_id();
  inline void clear_has_class_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 class_id_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DeadMonster* default_instance_;
};
// -------------------------------------------------------------------

class WarResultReq : public ::google::protobuf::Message {
 public:
  WarResultReq();
  virtual ~WarResultReq();

  WarResultReq(const WarResultReq& from);

  inline WarResultReq& operator=(const WarResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarResultReq& default_instance();

  void Swap(WarResultReq* other);

  // implements Message ----------------------------------------------

  WarResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarResultReq& from);
  void MergeFrom(const WarResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 2;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 2;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 pass_second = 4;
  inline bool has_pass_second() const;
  inline void clear_pass_second();
  static const int kPassSecondFieldNumber = 4;
  inline ::google::protobuf::int32 pass_second() const;
  inline void set_pass_second(::google::protobuf::int32 value);

  // optional bytes sign_ccrp = 5;
  inline bool has_sign_ccrp() const;
  inline void clear_sign_ccrp();
  static const int kSignCcrpFieldNumber = 5;
  inline const ::std::string& sign_ccrp() const;
  inline void set_sign_ccrp(const ::std::string& value);
  inline void set_sign_ccrp(const char* value);
  inline void set_sign_ccrp(const void* value, size_t size);
  inline ::std::string* mutable_sign_ccrp();
  inline ::std::string* release_sign_ccrp();
  inline void set_allocated_sign_ccrp(::std::string* sign_ccrp);

  // repeated .protoc.gameproto.TeXiaoItem pick_item = 6;
  inline int pick_item_size() const;
  inline void clear_pick_item();
  static const int kPickItemFieldNumber = 6;
  inline const ::protoc::gameproto::TeXiaoItem& pick_item(int index) const;
  inline ::protoc::gameproto::TeXiaoItem* mutable_pick_item(int index);
  inline ::protoc::gameproto::TeXiaoItem* add_pick_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
      pick_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
      mutable_pick_item();

  // repeated .protoc.gameproto.DeadMonster monsters = 7;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 7;
  inline const ::protoc::gameproto::DeadMonster& monsters(int index) const;
  inline ::protoc::gameproto::DeadMonster* mutable_monsters(int index);
  inline ::protoc::gameproto::DeadMonster* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::DeadMonster >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::DeadMonster >*
      mutable_monsters();

  // optional int32 chapter_kind = 8;
  inline bool has_chapter_kind() const;
  inline void clear_chapter_kind();
  static const int kChapterKindFieldNumber = 8;
  inline ::google::protobuf::int32 chapter_kind() const;
  inline void set_chapter_kind(::google::protobuf::int32 value);

  // repeated uint32 buff_item_ids = 9;
  inline int buff_item_ids_size() const;
  inline void clear_buff_item_ids();
  static const int kBuffItemIdsFieldNumber = 9;
  inline ::google::protobuf::uint32 buff_item_ids(int index) const;
  inline void set_buff_item_ids(int index, ::google::protobuf::uint32 value);
  inline void add_buff_item_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff_item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff_item_ids();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.WarResultReq)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_pass_second();
  inline void clear_has_pass_second();
  inline void set_has_sign_ccrp();
  inline void clear_has_sign_ccrp();
  inline void set_has_chapter_kind();
  inline void clear_has_chapter_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 pass_second_;
  ::std::string* sign_ccrp_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem > pick_item_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::DeadMonster > monsters_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_item_ids_;
  ::google::protobuf::int32 chapter_kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static WarResultReq* default_instance_;
};
// -------------------------------------------------------------------

class WarResultAck : public ::google::protobuf::Message {
 public:
  WarResultAck();
  virtual ~WarResultAck();

  WarResultAck(const WarResultAck& from);

  inline WarResultAck& operator=(const WarResultAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WarResultAck& default_instance();

  void Swap(WarResultAck* other);

  // implements Message ----------------------------------------------

  WarResultAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WarResultAck& from);
  void MergeFrom(const WarResultAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.TeXiaoItem award_item = 1;
  inline int award_item_size() const;
  inline void clear_award_item();
  static const int kAwardItemFieldNumber = 1;
  inline const ::protoc::gameproto::TeXiaoItem& award_item(int index) const;
  inline ::protoc::gameproto::TeXiaoItem* mutable_award_item(int index);
  inline ::protoc::gameproto::TeXiaoItem* add_award_item();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
      award_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
      mutable_award_item();

  // optional int64 pass_second = 2;
  inline bool has_pass_second() const;
  inline void clear_pass_second();
  static const int kPassSecondFieldNumber = 2;
  inline ::google::protobuf::int64 pass_second() const;
  inline void set_pass_second(::google::protobuf::int64 value);

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 old_level = 6;
  inline bool has_old_level() const;
  inline void clear_old_level();
  static const int kOldLevelFieldNumber = 6;
  inline ::google::protobuf::int32 old_level() const;
  inline void set_old_level(::google::protobuf::int32 value);

  // optional int32 new_level = 7;
  inline bool has_new_level() const;
  inline void clear_new_level();
  static const int kNewLevelFieldNumber = 7;
  inline ::google::protobuf::int32 new_level() const;
  inline void set_new_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.WarResultAck)
 private:
  inline void set_has_pass_second();
  inline void clear_has_pass_second();
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_old_level();
  inline void clear_has_old_level();
  inline void set_has_new_level();
  inline void clear_has_new_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem > award_item_;
  ::google::protobuf::int64 pass_second_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 old_level_;
  ::google::protobuf::int32 new_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static WarResultAck* default_instance_;
};
// -------------------------------------------------------------------

class DeadInWarNtf : public ::google::protobuf::Message {
 public:
  DeadInWarNtf();
  virtual ~DeadInWarNtf();

  DeadInWarNtf(const DeadInWarNtf& from);

  inline DeadInWarNtf& operator=(const DeadInWarNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadInWarNtf& default_instance();

  void Swap(DeadInWarNtf* other);

  // implements Message ----------------------------------------------

  DeadInWarNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadInWarNtf& from);
  void MergeFrom(const DeadInWarNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DeadInWarNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DeadInWarNtf* default_instance_;
};
// -------------------------------------------------------------------

class DeadInWarAck : public ::google::protobuf::Message {
 public:
  DeadInWarAck();
  virtual ~DeadInWarAck();

  DeadInWarAck(const DeadInWarAck& from);

  inline DeadInWarAck& operator=(const DeadInWarAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadInWarAck& default_instance();

  void Swap(DeadInWarAck* other);

  // implements Message ----------------------------------------------

  DeadInWarAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadInWarAck& from);
  void MergeFrom(const DeadInWarAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 need_gem = 1;
  inline bool has_need_gem() const;
  inline void clear_need_gem();
  static const int kNeedGemFieldNumber = 1;
  inline ::google::protobuf::int32 need_gem() const;
  inline void set_need_gem(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DeadInWarAck)
 private:
  inline void set_has_need_gem();
  inline void clear_has_need_gem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 need_gem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DeadInWarAck* default_instance_;
};
// -------------------------------------------------------------------

class ReviveReq : public ::google::protobuf::Message {
 public:
  ReviveReq();
  virtual ~ReviveReq();

  ReviveReq(const ReviveReq& from);

  inline ReviveReq& operator=(const ReviveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReviveReq& default_instance();

  void Swap(ReviveReq* other);

  // implements Message ----------------------------------------------

  ReviveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReviveReq& from);
  void MergeFrom(const ReviveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReviveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReviveReq* default_instance_;
};
// -------------------------------------------------------------------

class ReviveAck : public ::google::protobuf::Message {
 public:
  ReviveAck();
  virtual ~ReviveAck();

  ReviveAck(const ReviveAck& from);

  inline ReviveAck& operator=(const ReviveAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReviveAck& default_instance();

  void Swap(ReviveAck* other);

  // implements Message ----------------------------------------------

  ReviveAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReviveAck& from);
  void MergeFrom(const ReviveAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ReviveAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ReviveAck* default_instance_;
};
// -------------------------------------------------------------------

class PetUpgradeReq : public ::google::protobuf::Message {
 public:
  PetUpgradeReq();
  virtual ~PetUpgradeReq();

  PetUpgradeReq(const PetUpgradeReq& from);

  inline PetUpgradeReq& operator=(const PetUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetUpgradeReq& default_instance();

  void Swap(PetUpgradeReq* other);

  // implements Message ----------------------------------------------

  PetUpgradeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetUpgradeReq& from);
  void MergeFrom(const PetUpgradeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated uint64 tunshi_pet = 2;
  inline int tunshi_pet_size() const;
  inline void clear_tunshi_pet();
  static const int kTunshiPetFieldNumber = 2;
  inline ::google::protobuf::uint64 tunshi_pet(int index) const;
  inline void set_tunshi_pet(int index, ::google::protobuf::uint64 value);
  inline void add_tunshi_pet(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tunshi_pet() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tunshi_pet();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetUpgradeReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tunshi_pet_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetUpgradeReq* default_instance_;
};
// -------------------------------------------------------------------

class PetUpgradeAck : public ::google::protobuf::Message {
 public:
  PetUpgradeAck();
  virtual ~PetUpgradeAck();

  PetUpgradeAck(const PetUpgradeAck& from);

  inline PetUpgradeAck& operator=(const PetUpgradeAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetUpgradeAck& default_instance();

  void Swap(PetUpgradeAck* other);

  // implements Message ----------------------------------------------

  PetUpgradeAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetUpgradeAck& from);
  void MergeFrom(const PetUpgradeAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // repeated uint64 tunshi_pet = 2;
  inline int tunshi_pet_size() const;
  inline void clear_tunshi_pet();
  static const int kTunshiPetFieldNumber = 2;
  inline ::google::protobuf::uint64 tunshi_pet(int index) const;
  inline void set_tunshi_pet(int index, ::google::protobuf::uint64 value);
  inline void add_tunshi_pet(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tunshi_pet() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tunshi_pet();

  // optional int32 err_no = 3;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 3;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetUpgradeAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tunshi_pet_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetUpgradeAck* default_instance_;
};
// -------------------------------------------------------------------

class PetEvolveReq : public ::google::protobuf::Message {
 public:
  PetEvolveReq();
  virtual ~PetEvolveReq();

  PetEvolveReq(const PetEvolveReq& from);

  inline PetEvolveReq& operator=(const PetEvolveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEvolveReq& default_instance();

  void Swap(PetEvolveReq* other);

  // implements Message ----------------------------------------------

  PetEvolveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEvolveReq& from);
  void MergeFrom(const PetEvolveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetEvolveReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetEvolveReq* default_instance_;
};
// -------------------------------------------------------------------

class PetEvolveAck : public ::google::protobuf::Message {
 public:
  PetEvolveAck();
  virtual ~PetEvolveAck();

  PetEvolveAck(const PetEvolveAck& from);

  inline PetEvolveAck& operator=(const PetEvolveAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEvolveAck& default_instance();

  void Swap(PetEvolveAck* other);

  // implements Message ----------------------------------------------

  PetEvolveAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEvolveAck& from);
  void MergeFrom(const PetEvolveAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PetEvolveAck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PetEvolveAck* default_instance_;
};
// -------------------------------------------------------------------

class OwnedPetIDListReq : public ::google::protobuf::Message {
 public:
  OwnedPetIDListReq();
  virtual ~OwnedPetIDListReq();

  OwnedPetIDListReq(const OwnedPetIDListReq& from);

  inline OwnedPetIDListReq& operator=(const OwnedPetIDListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OwnedPetIDListReq& default_instance();

  void Swap(OwnedPetIDListReq* other);

  // implements Message ----------------------------------------------

  OwnedPetIDListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OwnedPetIDListReq& from);
  void MergeFrom(const OwnedPetIDListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OwnedPetIDListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OwnedPetIDListReq* default_instance_;
};
// -------------------------------------------------------------------

class OwnedPetIDListAck : public ::google::protobuf::Message {
 public:
  OwnedPetIDListAck();
  virtual ~OwnedPetIDListAck();

  OwnedPetIDListAck(const OwnedPetIDListAck& from);

  inline OwnedPetIDListAck& operator=(const OwnedPetIDListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OwnedPetIDListAck& default_instance();

  void Swap(OwnedPetIDListAck* other);

  // implements Message ----------------------------------------------

  OwnedPetIDListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OwnedPetIDListAck& from);
  void MergeFrom(const OwnedPetIDListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OwnedPetIDListAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OwnedPetIDListAck* default_instance_;
};
// -------------------------------------------------------------------

class NewPetOpenedNtf : public ::google::protobuf::Message {
 public:
  NewPetOpenedNtf();
  virtual ~NewPetOpenedNtf();

  NewPetOpenedNtf(const NewPetOpenedNtf& from);

  inline NewPetOpenedNtf& operator=(const NewPetOpenedNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewPetOpenedNtf& default_instance();

  void Swap(NewPetOpenedNtf* other);

  // implements Message ----------------------------------------------

  NewPetOpenedNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewPetOpenedNtf& from);
  void MergeFrom(const NewPetOpenedNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.NewPetOpenedNtf)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static NewPetOpenedNtf* default_instance_;
};
// -------------------------------------------------------------------

class ChenJiuData : public ::google::protobuf::Message {
 public:
  ChenJiuData();
  virtual ~ChenJiuData();

  ChenJiuData(const ChenJiuData& from);

  inline ChenJiuData& operator=(const ChenJiuData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChenJiuData& default_instance();

  void Swap(ChenJiuData* other);

  // implements Message ----------------------------------------------

  ChenJiuData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChenJiuData& from);
  void MergeFrom(const ChenJiuData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChenJiuData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChenJiuData* default_instance_;
};
// -------------------------------------------------------------------

class ChenJiuKind : public ::google::protobuf::Message {
 public:
  ChenJiuKind();
  virtual ~ChenJiuKind();

  ChenJiuKind(const ChenJiuKind& from);

  inline ChenJiuKind& operator=(const ChenJiuKind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChenJiuKind& default_instance();

  void Swap(ChenJiuKind* other);

  // implements Message ----------------------------------------------

  ChenJiuKind* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChenJiuKind& from);
  void MergeFrom(const ChenJiuKind& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // repeated .protoc.gameproto.ChenJiuData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::protoc::gameproto::ChenJiuData& data(int index) const;
  inline ::protoc::gameproto::ChenJiuData* mutable_data(int index);
  inline ::protoc::gameproto::ChenJiuData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ChenJiuKind)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuData > data_;
  ::google::protobuf::uint32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ChenJiuKind* default_instance_;
};
// -------------------------------------------------------------------

class GetChenJiuReq : public ::google::protobuf::Message {
 public:
  GetChenJiuReq();
  virtual ~GetChenJiuReq();

  GetChenJiuReq(const GetChenJiuReq& from);

  inline GetChenJiuReq& operator=(const GetChenJiuReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChenJiuReq& default_instance();

  void Swap(GetChenJiuReq* other);

  // implements Message ----------------------------------------------

  GetChenJiuReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChenJiuReq& from);
  void MergeFrom(const GetChenJiuReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChenJiuReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChenJiuReq* default_instance_;
};
// -------------------------------------------------------------------

class GetChenJiuAck : public ::google::protobuf::Message {
 public:
  GetChenJiuAck();
  virtual ~GetChenJiuAck();

  GetChenJiuAck(const GetChenJiuAck& from);

  inline GetChenJiuAck& operator=(const GetChenJiuAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChenJiuAck& default_instance();

  void Swap(GetChenJiuAck* other);

  // implements Message ----------------------------------------------

  GetChenJiuAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChenJiuAck& from);
  void MergeFrom(const GetChenJiuAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.ChenJiuKind kind = 1;
  inline int kind_size() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline const ::protoc::gameproto::ChenJiuKind& kind(int index) const;
  inline ::protoc::gameproto::ChenJiuKind* mutable_kind(int index);
  inline ::protoc::gameproto::ChenJiuKind* add_kind();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuKind >&
      kind() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuKind >*
      mutable_kind();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChenJiuAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuKind > kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChenJiuAck* default_instance_;
};
// -------------------------------------------------------------------

class UpdateChenJiu : public ::google::protobuf::Message {
 public:
  UpdateChenJiu();
  virtual ~UpdateChenJiu();

  UpdateChenJiu(const UpdateChenJiu& from);

  inline UpdateChenJiu& operator=(const UpdateChenJiu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateChenJiu& default_instance();

  void Swap(UpdateChenJiu* other);

  // implements Message ----------------------------------------------

  UpdateChenJiu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateChenJiu& from);
  void MergeFrom(const UpdateChenJiu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional .protoc.gameproto.ChenJiuData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::protoc::gameproto::ChenJiuData& data() const;
  inline ::protoc::gameproto::ChenJiuData* mutable_data();
  inline ::protoc::gameproto::ChenJiuData* release_data();
  inline void set_allocated_data(::protoc::gameproto::ChenJiuData* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateChenJiu)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::ChenJiuData* data_;
  ::google::protobuf::uint32 kind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateChenJiu* default_instance_;
};
// -------------------------------------------------------------------

class GetChenJiuAwardReq : public ::google::protobuf::Message {
 public:
  GetChenJiuAwardReq();
  virtual ~GetChenJiuAwardReq();

  GetChenJiuAwardReq(const GetChenJiuAwardReq& from);

  inline GetChenJiuAwardReq& operator=(const GetChenJiuAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChenJiuAwardReq& default_instance();

  void Swap(GetChenJiuAwardReq* other);

  // implements Message ----------------------------------------------

  GetChenJiuAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChenJiuAwardReq& from);
  void MergeFrom(const GetChenJiuAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChenJiuAwardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChenJiuAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetChenJiuAwardAck : public ::google::protobuf::Message {
 public:
  GetChenJiuAwardAck();
  virtual ~GetChenJiuAwardAck();

  GetChenJiuAwardAck(const GetChenJiuAwardAck& from);

  inline GetChenJiuAwardAck& operator=(const GetChenJiuAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetChenJiuAwardAck& default_instance();

  void Swap(GetChenJiuAwardAck* other);

  // implements Message ----------------------------------------------

  GetChenJiuAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetChenJiuAwardAck& from);
  void MergeFrom(const GetChenJiuAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetChenJiuAwardAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetChenJiuAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyGetChenJiuAwardReq : public ::google::protobuf::Message {
 public:
  OneKeyGetChenJiuAwardReq();
  virtual ~OneKeyGetChenJiuAwardReq();

  OneKeyGetChenJiuAwardReq(const OneKeyGetChenJiuAwardReq& from);

  inline OneKeyGetChenJiuAwardReq& operator=(const OneKeyGetChenJiuAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneKeyGetChenJiuAwardReq& default_instance();

  void Swap(OneKeyGetChenJiuAwardReq* other);

  // implements Message ----------------------------------------------

  OneKeyGetChenJiuAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneKeyGetChenJiuAwardReq& from);
  void MergeFrom(const OneKeyGetChenJiuAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneKeyGetChenJiuAwardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneKeyGetChenJiuAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class QuestData : public ::google::protobuf::Message {
 public:
  QuestData();
  virtual ~QuestData();

  QuestData(const QuestData& from);

  inline QuestData& operator=(const QuestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestData& default_instance();

  void Swap(QuestData* other);

  // implements Message ----------------------------------------------

  QuestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestData& from);
  void MergeFrom(const QuestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 current_count = 4;
  inline bool has_current_count() const;
  inline void clear_current_count();
  static const int kCurrentCountFieldNumber = 4;
  inline ::google::protobuf::uint32 current_count() const;
  inline void set_current_count(::google::protobuf::uint32 value);

  // optional bool is_finished = 5;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 5;
  inline bool is_finished() const;
  inline void set_is_finished(bool value);

  // optional bool is_awarded = 6;
  inline bool has_is_awarded() const;
  inline void clear_is_awarded();
  static const int kIsAwardedFieldNumber = 6;
  inline bool is_awarded() const;
  inline void set_is_awarded(bool value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string desc = 8;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 8;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional string award = 9;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 9;
  inline const ::std::string& award() const;
  inline void set_award(const ::std::string& value);
  inline void set_award(const char* value);
  inline void set_award(const char* value, size_t size);
  inline ::std::string* mutable_award();
  inline ::std::string* release_award();
  inline void set_allocated_award(::std::string* award);

  // optional string category_name = 10;
  inline bool has_category_name() const;
  inline void clear_category_name();
  static const int kCategoryNameFieldNumber = 10;
  inline const ::std::string& category_name() const;
  inline void set_category_name(const ::std::string& value);
  inline void set_category_name(const char* value);
  inline void set_category_name(const char* value, size_t size);
  inline ::std::string* mutable_category_name();
  inline ::std::string* release_category_name();
  inline void set_allocated_category_name(::std::string* category_name);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.QuestData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_current_count();
  inline void clear_has_current_count();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();
  inline void set_has_is_awarded();
  inline void clear_has_is_awarded();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_award();
  inline void clear_has_award();
  inline void set_has_category_name();
  inline void clear_has_category_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 current_count_;
  bool is_finished_;
  bool is_awarded_;
  ::std::string* name_;
  ::std::string* desc_;
  ::std::string* award_;
  ::std::string* category_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static QuestData* default_instance_;
};
// -------------------------------------------------------------------

class GetQuestListReq : public ::google::protobuf::Message {
 public:
  GetQuestListReq();
  virtual ~GetQuestListReq();

  GetQuestListReq(const GetQuestListReq& from);

  inline GetQuestListReq& operator=(const GetQuestListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQuestListReq& default_instance();

  void Swap(GetQuestListReq* other);

  // implements Message ----------------------------------------------

  GetQuestListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetQuestListReq& from);
  void MergeFrom(const GetQuestListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.Period period = 1;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 1;
  inline ::protoc::gameproto::Period period() const;
  inline void set_period(::protoc::gameproto::Period value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetQuestListReq)
 private:
  inline void set_has_period();
  inline void clear_has_period();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int period_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetQuestListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetQuestListAck : public ::google::protobuf::Message {
 public:
  GetQuestListAck();
  virtual ~GetQuestListAck();

  GetQuestListAck(const GetQuestListAck& from);

  inline GetQuestListAck& operator=(const GetQuestListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQuestListAck& default_instance();

  void Swap(GetQuestListAck* other);

  // implements Message ----------------------------------------------

  GetQuestListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetQuestListAck& from);
  void MergeFrom(const GetQuestListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.QuestData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::QuestData& data(int index) const;
  inline ::protoc::gameproto::QuestData* mutable_data(int index);
  inline ::protoc::gameproto::QuestData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >*
      mutable_data();

  // optional uint32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 day = 3;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 3;
  inline ::google::protobuf::uint32 day() const;
  inline void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetQuestListAck)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_day();
  inline void clear_has_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData > data_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 day_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetQuestListAck* default_instance_;
};
// -------------------------------------------------------------------

class QuestUpdateData : public ::google::protobuf::Message {
 public:
  QuestUpdateData();
  virtual ~QuestUpdateData();

  QuestUpdateData(const QuestUpdateData& from);

  inline QuestUpdateData& operator=(const QuestUpdateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestUpdateData& default_instance();

  void Swap(QuestUpdateData* other);

  // implements Message ----------------------------------------------

  QuestUpdateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestUpdateData& from);
  void MergeFrom(const QuestUpdateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 current_count = 2;
  inline bool has_current_count() const;
  inline void clear_current_count();
  static const int kCurrentCountFieldNumber = 2;
  inline ::google::protobuf::uint32 current_count() const;
  inline void set_current_count(::google::protobuf::uint32 value);

  // optional bool is_finished = 3;
  inline bool has_is_finished() const;
  inline void clear_is_finished();
  static const int kIsFinishedFieldNumber = 3;
  inline bool is_finished() const;
  inline void set_is_finished(bool value);

  // optional bool is_awarded = 4;
  inline bool has_is_awarded() const;
  inline void clear_is_awarded();
  static const int kIsAwardedFieldNumber = 4;
  inline bool is_awarded() const;
  inline void set_is_awarded(bool value);

  // optional .protoc.gameproto.Period period = 5;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 5;
  inline ::protoc::gameproto::Period period() const;
  inline void set_period(::protoc::gameproto::Period value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.QuestUpdateData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_current_count();
  inline void clear_has_current_count();
  inline void set_has_is_finished();
  inline void clear_has_is_finished();
  inline void set_has_is_awarded();
  inline void clear_has_is_awarded();
  inline void set_has_period();
  inline void clear_has_period();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 current_count_;
  bool is_finished_;
  bool is_awarded_;
  int period_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static QuestUpdateData* default_instance_;
};
// -------------------------------------------------------------------

class UpdateQuestNtf : public ::google::protobuf::Message {
 public:
  UpdateQuestNtf();
  virtual ~UpdateQuestNtf();

  UpdateQuestNtf(const UpdateQuestNtf& from);

  inline UpdateQuestNtf& operator=(const UpdateQuestNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateQuestNtf& default_instance();

  void Swap(UpdateQuestNtf* other);

  // implements Message ----------------------------------------------

  UpdateQuestNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateQuestNtf& from);
  void MergeFrom(const UpdateQuestNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.QuestUpdateData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::QuestUpdateData& data(int index) const;
  inline ::protoc::gameproto::QuestUpdateData* mutable_data(int index);
  inline ::protoc::gameproto::QuestUpdateData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestUpdateData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestUpdateData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateQuestNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestUpdateData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateQuestNtf* default_instance_;
};
// -------------------------------------------------------------------

class GetQuestAwardReq : public ::google::protobuf::Message {
 public:
  GetQuestAwardReq();
  virtual ~GetQuestAwardReq();

  GetQuestAwardReq(const GetQuestAwardReq& from);

  inline GetQuestAwardReq& operator=(const GetQuestAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQuestAwardReq& default_instance();

  void Swap(GetQuestAwardReq* other);

  // implements Message ----------------------------------------------

  GetQuestAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetQuestAwardReq& from);
  void MergeFrom(const GetQuestAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetQuestAwardReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetQuestAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetQuestAwardAck : public ::google::protobuf::Message {
 public:
  GetQuestAwardAck();
  virtual ~GetQuestAwardAck();

  GetQuestAwardAck(const GetQuestAwardAck& from);

  inline GetQuestAwardAck& operator=(const GetQuestAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetQuestAwardAck& default_instance();

  void Swap(GetQuestAwardAck* other);

  // implements Message ----------------------------------------------

  GetQuestAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetQuestAwardAck& from);
  void MergeFrom(const GetQuestAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetQuestAwardAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetQuestAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class OneKeyGetQuestAwardReq : public ::google::protobuf::Message {
 public:
  OneKeyGetQuestAwardReq();
  virtual ~OneKeyGetQuestAwardReq();

  OneKeyGetQuestAwardReq(const OneKeyGetQuestAwardReq& from);

  inline OneKeyGetQuestAwardReq& operator=(const OneKeyGetQuestAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneKeyGetQuestAwardReq& default_instance();

  void Swap(OneKeyGetQuestAwardReq* other);

  // implements Message ----------------------------------------------

  OneKeyGetQuestAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneKeyGetQuestAwardReq& from);
  void MergeFrom(const OneKeyGetQuestAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1;
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.OneKeyGetQuestAwardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static OneKeyGetQuestAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class RefreshQuestNtf : public ::google::protobuf::Message {
 public:
  RefreshQuestNtf();
  virtual ~RefreshQuestNtf();

  RefreshQuestNtf(const RefreshQuestNtf& from);

  inline RefreshQuestNtf& operator=(const RefreshQuestNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshQuestNtf& default_instance();

  void Swap(RefreshQuestNtf* other);

  // implements Message ----------------------------------------------

  RefreshQuestNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshQuestNtf& from);
  void MergeFrom(const RefreshQuestNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.Period period = 1;
  inline bool has_period() const;
  inline void clear_period();
  static const int kPeriodFieldNumber = 1;
  inline ::protoc::gameproto::Period period() const;
  inline void set_period(::protoc::gameproto::Period value);

  // repeated .protoc.gameproto.QuestData data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::protoc::gameproto::QuestData& data(int index) const;
  inline ::protoc::gameproto::QuestData* mutable_data(int index);
  inline ::protoc::gameproto::QuestData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.RefreshQuestNtf)
 private:
  inline void set_has_period();
  inline void clear_has_period();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData > data_;
  int period_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static RefreshQuestNtf* default_instance_;
};
// -------------------------------------------------------------------

class GetCurPvpDataReq : public ::google::protobuf::Message {
 public:
  GetCurPvpDataReq();
  virtual ~GetCurPvpDataReq();

  GetCurPvpDataReq(const GetCurPvpDataReq& from);

  inline GetCurPvpDataReq& operator=(const GetCurPvpDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurPvpDataReq& default_instance();

  void Swap(GetCurPvpDataReq* other);

  // implements Message ----------------------------------------------

  GetCurPvpDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCurPvpDataReq& from);
  void MergeFrom(const GetCurPvpDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCurPvpDataReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCurPvpDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GetCurPvpDataAck : public ::google::protobuf::Message {
 public:
  GetCurPvpDataAck();
  virtual ~GetCurPvpDataAck();

  GetCurPvpDataAck(const GetCurPvpDataAck& from);

  inline GetCurPvpDataAck& operator=(const GetCurPvpDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCurPvpDataAck& default_instance();

  void Swap(GetCurPvpDataAck* other);

  // implements Message ----------------------------------------------

  GetCurPvpDataAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCurPvpDataAck& from);
  void MergeFrom(const GetCurPvpDataAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 sum_count = 3;
  inline bool has_sum_count() const;
  inline void clear_sum_count();
  static const int kSumCountFieldNumber = 3;
  inline ::google::protobuf::uint32 sum_count() const;
  inline void set_sum_count(::google::protobuf::uint32 value);

  // optional uint32 win_count = 4;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 4;
  inline ::google::protobuf::uint32 win_count() const;
  inline void set_win_count(::google::protobuf::uint32 value);

  // optional uint32 today_count = 5;
  inline bool has_today_count() const;
  inline void clear_today_count();
  static const int kTodayCountFieldNumber = 5;
  inline ::google::protobuf::uint32 today_count() const;
  inline void set_today_count(::google::protobuf::uint32 value);

  // optional bool has_award = 6;
  inline bool has_has_award() const;
  inline void clear_has_award();
  static const int kHasAwardFieldNumber = 6;
  inline bool has_award() const;
  inline void set_has_award(bool value);

  // optional int64 cd_time = 7;
  inline bool has_cd_time() const;
  inline void clear_cd_time();
  static const int kCdTimeFieldNumber = 7;
  inline ::google::protobuf::int64 cd_time() const;
  inline void set_cd_time(::google::protobuf::int64 value);

  // optional uint32 rank = 8;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 8;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 today_buy_count = 9;
  inline bool has_today_buy_count() const;
  inline void clear_today_buy_count();
  static const int kTodayBuyCountFieldNumber = 9;
  inline ::google::protobuf::uint32 today_buy_count() const;
  inline void set_today_buy_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetCurPvpDataAck)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_sum_count();
  inline void clear_has_sum_count();
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_today_count();
  inline void clear_has_today_count();
  inline void set_has_has_award();
  inline void clear_has_has_award();
  inline void set_has_cd_time();
  inline void clear_has_cd_time();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_today_buy_count();
  inline void clear_has_today_buy_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 sum_count_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::uint32 today_count_;
  bool has_award_;
  ::google::protobuf::int64 cd_time_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 today_buy_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetCurPvpDataAck* default_instance_;
};
// -------------------------------------------------------------------

class PvpData : public ::google::protobuf::Message {
 public:
  PvpData();
  virtual ~PvpData();

  PvpData(const PvpData& from);

  inline PvpData& operator=(const PvpData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpData& default_instance();

  void Swap(PvpData* other);

  // implements Message ----------------------------------------------

  PvpData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpData& from);
  void MergeFrom(const PvpData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 head_id = 3;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 3;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional bool sex = 7;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 7;
  inline bool sex() const;
  inline void set_sex(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpData)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::std::string* name_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 rank_;
  bool sex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpData* default_instance_;
};
// -------------------------------------------------------------------

class GetAllRankReq : public ::google::protobuf::Message {
 public:
  GetAllRankReq();
  virtual ~GetAllRankReq();

  GetAllRankReq(const GetAllRankReq& from);

  inline GetAllRankReq& operator=(const GetAllRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllRankReq& default_instance();

  void Swap(GetAllRankReq* other);

  // implements Message ----------------------------------------------

  GetAllRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllRankReq& from);
  void MergeFrom(const GetAllRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAllRankReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAllRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAllRankAck : public ::google::protobuf::Message {
 public:
  GetAllRankAck();
  virtual ~GetAllRankAck();

  GetAllRankAck(const GetAllRankAck& from);

  inline GetAllRankAck& operator=(const GetAllRankAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAllRankAck& default_instance();

  void Swap(GetAllRankAck* other);

  // implements Message ----------------------------------------------

  GetAllRankAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAllRankAck& from);
  void MergeFrom(const GetAllRankAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PvpData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::PvpData& data(int index) const;
  inline ::protoc::gameproto::PvpData* mutable_data(int index);
  inline ::protoc::gameproto::PvpData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetAllRankAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetAllRankAck* default_instance_;
};
// -------------------------------------------------------------------

class PvpFriendData : public ::google::protobuf::Message {
 public:
  PvpFriendData();
  virtual ~PvpFriendData();

  PvpFriendData(const PvpFriendData& from);

  inline PvpFriendData& operator=(const PvpFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpFriendData& default_instance();

  void Swap(PvpFriendData* other);

  // implements Message ----------------------------------------------

  PvpFriendData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpFriendData& from);
  void MergeFrom(const PvpFriendData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpFriendData)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpFriendData* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendRankReq : public ::google::protobuf::Message {
 public:
  GetFriendRankReq();
  virtual ~GetFriendRankReq();

  GetFriendRankReq(const GetFriendRankReq& from);

  inline GetFriendRankReq& operator=(const GetFriendRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendRankReq& default_instance();

  void Swap(GetFriendRankReq* other);

  // implements Message ----------------------------------------------

  GetFriendRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendRankReq& from);
  void MergeFrom(const GetFriendRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetFriendRankReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetFriendRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GetFriendRankAck : public ::google::protobuf::Message {
 public:
  GetFriendRankAck();
  virtual ~GetFriendRankAck();

  GetFriendRankAck(const GetFriendRankAck& from);

  inline GetFriendRankAck& operator=(const GetFriendRankAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFriendRankAck& default_instance();

  void Swap(GetFriendRankAck* other);

  // implements Message ----------------------------------------------

  GetFriendRankAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetFriendRankAck& from);
  void MergeFrom(const GetFriendRankAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PvpFriendData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::PvpFriendData& data(int index) const;
  inline ::protoc::gameproto::PvpFriendData* mutable_data(int index);
  inline ::protoc::gameproto::PvpFriendData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpFriendData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpFriendData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetFriendRankAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpFriendData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetFriendRankAck* default_instance_;
};
// -------------------------------------------------------------------

class GetSumRankReq : public ::google::protobuf::Message {
 public:
  GetSumRankReq();
  virtual ~GetSumRankReq();

  GetSumRankReq(const GetSumRankReq& from);

  inline GetSumRankReq& operator=(const GetSumRankReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSumRankReq& default_instance();

  void Swap(GetSumRankReq* other);

  // implements Message ----------------------------------------------

  GetSumRankReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSumRankReq& from);
  void MergeFrom(const GetSumRankReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetSumRankReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetSumRankReq* default_instance_;
};
// -------------------------------------------------------------------

class GetSumRankAck : public ::google::protobuf::Message {
 public:
  GetSumRankAck();
  virtual ~GetSumRankAck();

  GetSumRankAck(const GetSumRankAck& from);

  inline GetSumRankAck& operator=(const GetSumRankAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSumRankAck& default_instance();

  void Swap(GetSumRankAck* other);

  // implements Message ----------------------------------------------

  GetSumRankAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSumRankAck& from);
  void MergeFrom(const GetSumRankAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PvpData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::PvpData& data(int index) const;
  inline ::protoc::gameproto::PvpData* mutable_data(int index);
  inline ::protoc::gameproto::PvpData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetSumRankAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetSumRankAck* default_instance_;
};
// -------------------------------------------------------------------

class ClearPvpCDReq : public ::google::protobuf::Message {
 public:
  ClearPvpCDReq();
  virtual ~ClearPvpCDReq();

  ClearPvpCDReq(const ClearPvpCDReq& from);

  inline ClearPvpCDReq& operator=(const ClearPvpCDReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearPvpCDReq& default_instance();

  void Swap(ClearPvpCDReq* other);

  // implements Message ----------------------------------------------

  ClearPvpCDReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearPvpCDReq& from);
  void MergeFrom(const ClearPvpCDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClearPvpCDReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClearPvpCDReq* default_instance_;
};
// -------------------------------------------------------------------

class ClearPvpCDAck : public ::google::protobuf::Message {
 public:
  ClearPvpCDAck();
  virtual ~ClearPvpCDAck();

  ClearPvpCDAck(const ClearPvpCDAck& from);

  inline ClearPvpCDAck& operator=(const ClearPvpCDAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearPvpCDAck& default_instance();

  void Swap(ClearPvpCDAck* other);

  // implements Message ----------------------------------------------

  ClearPvpCDAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearPvpCDAck& from);
  void MergeFrom(const ClearPvpCDAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 today_count = 2;
  inline bool has_today_count() const;
  inline void clear_today_count();
  static const int kTodayCountFieldNumber = 2;
  inline ::google::protobuf::uint32 today_count() const;
  inline void set_today_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ClearPvpCDAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_today_count();
  inline void clear_has_today_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 today_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ClearPvpCDAck* default_instance_;
};
// -------------------------------------------------------------------

class GetPvpAwardReq : public ::google::protobuf::Message {
 public:
  GetPvpAwardReq();
  virtual ~GetPvpAwardReq();

  GetPvpAwardReq(const GetPvpAwardReq& from);

  inline GetPvpAwardReq& operator=(const GetPvpAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPvpAwardReq& default_instance();

  void Swap(GetPvpAwardReq* other);

  // implements Message ----------------------------------------------

  GetPvpAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPvpAwardReq& from);
  void MergeFrom(const GetPvpAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetPvpAwardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetPvpAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPvpAwardAck : public ::google::protobuf::Message {
 public:
  GetPvpAwardAck();
  virtual ~GetPvpAwardAck();

  GetPvpAwardAck(const GetPvpAwardAck& from);

  inline GetPvpAwardAck& operator=(const GetPvpAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPvpAwardAck& default_instance();

  void Swap(GetPvpAwardAck* other);

  // implements Message ----------------------------------------------

  GetPvpAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPvpAwardAck& from);
  void MergeFrom(const GetPvpAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetPvpAwardAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetPvpAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class PvpWarBeginReq : public ::google::protobuf::Message {
 public:
  PvpWarBeginReq();
  virtual ~PvpWarBeginReq();

  PvpWarBeginReq(const PvpWarBeginReq& from);

  inline PvpWarBeginReq& operator=(const PvpWarBeginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpWarBeginReq& default_instance();

  void Swap(PvpWarBeginReq* other);

  // implements Message ----------------------------------------------

  PvpWarBeginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpWarBeginReq& from);
  void MergeFrom(const PvpWarBeginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpWarBeginReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpWarBeginReq* default_instance_;
};
// -------------------------------------------------------------------

class PvpWarBeginAck : public ::google::protobuf::Message {
 public:
  PvpWarBeginAck();
  virtual ~PvpWarBeginAck();

  PvpWarBeginAck(const PvpWarBeginAck& from);

  inline PvpWarBeginAck& operator=(const PvpWarBeginAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpWarBeginAck& default_instance();

  void Swap(PvpWarBeginAck* other);

  // implements Message ----------------------------------------------

  PvpWarBeginAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpWarBeginAck& from);
  void MergeFrom(const PvpWarBeginAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 digitid = 2;
  inline bool has_digitid() const;
  inline void clear_digitid();
  static const int kDigitidFieldNumber = 2;
  inline ::google::protobuf::uint64 digitid() const;
  inline void set_digitid(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional uint32 head_id = 5;
  inline bool has_head_id() const;
  inline void clear_head_id();
  static const int kHeadIdFieldNumber = 5;
  inline ::google::protobuf::uint32 head_id() const;
  inline void set_head_id(::google::protobuf::uint32 value);

  // repeated .protoc.gameproto.PetRecord target_pet = 6;
  inline int target_pet_size() const;
  inline void clear_target_pet();
  static const int kTargetPetFieldNumber = 6;
  inline const ::protoc::gameproto::PetRecord& target_pet(int index) const;
  inline ::protoc::gameproto::PetRecord* mutable_target_pet(int index);
  inline ::protoc::gameproto::PetRecord* add_target_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
      target_pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
      mutable_target_pet();

  // repeated .protoc.gameproto.PetRecordSIGN sign_my_pets = 7;
  inline int sign_my_pets_size() const;
  inline void clear_sign_my_pets();
  static const int kSignMyPetsFieldNumber = 7;
  inline const ::protoc::gameproto::PetRecordSIGN& sign_my_pets(int index) const;
  inline ::protoc::gameproto::PetRecordSIGN* mutable_sign_my_pets(int index);
  inline ::protoc::gameproto::PetRecordSIGN* add_sign_my_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
      sign_my_pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
      mutable_sign_my_pets();

  // repeated .protoc.gameproto.PetRecordSIGN sign_target_pet = 8;
  inline int sign_target_pet_size() const;
  inline void clear_sign_target_pet();
  static const int kSignTargetPetFieldNumber = 8;
  inline const ::protoc::gameproto::PetRecordSIGN& sign_target_pet(int index) const;
  inline ::protoc::gameproto::PetRecordSIGN* mutable_sign_target_pet(int index);
  inline ::protoc::gameproto::PetRecordSIGN* add_sign_target_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
      sign_target_pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
      mutable_sign_target_pet();

  // repeated .protoc.gameproto.BufferItem buff = 9;
  inline int buff_size() const;
  inline void clear_buff();
  static const int kBuffFieldNumber = 9;
  inline const ::protoc::gameproto::BufferItem& buff(int index) const;
  inline ::protoc::gameproto::BufferItem* mutable_buff(int index);
  inline ::protoc::gameproto::BufferItem* add_buff();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >&
      buff() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >*
      mutable_buff();

  // optional int32 rnd_start_war_key = 10;
  inline bool has_rnd_start_war_key() const;
  inline void clear_rnd_start_war_key();
  static const int kRndStartWarKeyFieldNumber = 10;
  inline ::google::protobuf::int32 rnd_start_war_key() const;
  inline void set_rnd_start_war_key(::google::protobuf::int32 value);

  // optional int32 total_attack = 11;
  inline bool has_total_attack() const;
  inline void clear_total_attack();
  static const int kTotalAttackFieldNumber = 11;
  inline ::google::protobuf::int32 total_attack() const;
  inline void set_total_attack(::google::protobuf::int32 value);

  // optional bool sex = 12;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 12;
  inline bool sex() const;
  inline void set_sex(bool value);

  // repeated .protoc.gameproto.EquipData equip = 13;
  inline int equip_size() const;
  inline void clear_equip();
  static const int kEquipFieldNumber = 13;
  inline const ::protoc::gameproto::EquipData& equip(int index) const;
  inline ::protoc::gameproto::EquipData* mutable_equip(int index);
  inline ::protoc::gameproto::EquipData* add_equip();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >&
      equip() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >*
      mutable_equip();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpWarBeginAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_digitid();
  inline void clear_has_digitid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_head_id();
  inline void clear_has_head_id();
  inline void set_has_rnd_start_war_key();
  inline void clear_has_rnd_start_war_key();
  inline void set_has_total_attack();
  inline void clear_has_total_attack();
  inline void set_has_sex();
  inline void clear_has_sex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 digitid_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::int32 level_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord > target_pet_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN > sign_my_pets_;
  ::google::protobuf::uint32 head_id_;
  ::google::protobuf::int32 rnd_start_war_key_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN > sign_target_pet_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem > buff_;
  ::google::protobuf::int32 total_attack_;
  bool sex_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData > equip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpWarBeginAck* default_instance_;
};
// -------------------------------------------------------------------

class PvpWarResultReq : public ::google::protobuf::Message {
 public:
  PvpWarResultReq();
  virtual ~PvpWarResultReq();

  PvpWarResultReq(const PvpWarResultReq& from);

  inline PvpWarResultReq& operator=(const PvpWarResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpWarResultReq& default_instance();

  void Swap(PvpWarResultReq* other);

  // implements Message ----------------------------------------------

  PvpWarResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpWarResultReq& from);
  void MergeFrom(const PvpWarResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint64 match_id = 2;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  inline ::google::protobuf::uint64 match_id() const;
  inline void set_match_id(::google::protobuf::uint64 value);

  // optional int32 rnd_start_war_key = 3;
  inline bool has_rnd_start_war_key() const;
  inline void clear_rnd_start_war_key();
  static const int kRndStartWarKeyFieldNumber = 3;
  inline ::google::protobuf::int32 rnd_start_war_key() const;
  inline void set_rnd_start_war_key(::google::protobuf::int32 value);

  // optional bytes sign_ccrp = 4;
  inline bool has_sign_ccrp() const;
  inline void clear_sign_ccrp();
  static const int kSignCcrpFieldNumber = 4;
  inline const ::std::string& sign_ccrp() const;
  inline void set_sign_ccrp(const ::std::string& value);
  inline void set_sign_ccrp(const char* value);
  inline void set_sign_ccrp(const void* value, size_t size);
  inline ::std::string* mutable_sign_ccrp();
  inline ::std::string* release_sign_ccrp();
  inline void set_allocated_sign_ccrp(::std::string* sign_ccrp);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpWarResultReq)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_rnd_start_war_key();
  inline void clear_has_rnd_start_war_key();
  inline void set_has_sign_ccrp();
  inline void clear_has_sign_ccrp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::int32 rnd_start_war_key_;
  ::std::string* sign_ccrp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpWarResultReq* default_instance_;
};
// -------------------------------------------------------------------

class PvpWarResultAck : public ::google::protobuf::Message {
 public:
  PvpWarResultAck();
  virtual ~PvpWarResultAck();

  PvpWarResultAck(const PvpWarResultAck& from);

  inline PvpWarResultAck& operator=(const PvpWarResultAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpWarResultAck& default_instance();

  void Swap(PvpWarResultAck* other);

  // implements Message ----------------------------------------------

  PvpWarResultAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpWarResultAck& from);
  void MergeFrom(const PvpWarResultAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 sum_count = 4;
  inline bool has_sum_count() const;
  inline void clear_sum_count();
  static const int kSumCountFieldNumber = 4;
  inline ::google::protobuf::uint32 sum_count() const;
  inline void set_sum_count(::google::protobuf::uint32 value);

  // optional uint32 win_count = 5;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 5;
  inline ::google::protobuf::uint32 win_count() const;
  inline void set_win_count(::google::protobuf::uint32 value);

  // optional uint32 today_count = 6;
  inline bool has_today_count() const;
  inline void clear_today_count();
  static const int kTodayCountFieldNumber = 6;
  inline ::google::protobuf::uint32 today_count() const;
  inline void set_today_count(::google::protobuf::uint32 value);

  // optional uint32 rank = 7;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 7;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint32 cur_score = 8;
  inline bool has_cur_score() const;
  inline void clear_cur_score();
  static const int kCurScoreFieldNumber = 8;
  inline ::google::protobuf::uint32 cur_score() const;
  inline void set_cur_score(::google::protobuf::uint32 value);

  // optional int64 cd_time = 9;
  inline bool has_cd_time() const;
  inline void clear_cd_time();
  static const int kCdTimeFieldNumber = 9;
  inline ::google::protobuf::int64 cd_time() const;
  inline void set_cd_time(::google::protobuf::int64 value);

  // optional uint32 group_id = 10;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 10;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PvpWarResultAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_sum_count();
  inline void clear_has_sum_count();
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_today_count();
  inline void clear_has_today_count();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_cur_score();
  inline void clear_has_cur_score();
  inline void set_has_cd_time();
  inline void clear_has_cd_time();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 sum_count_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::uint32 today_count_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 cur_score_;
  ::google::protobuf::int64 cd_time_;
  ::google::protobuf::uint32 group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PvpWarResultAck* default_instance_;
};
// -------------------------------------------------------------------

class ActionCountTickNtf : public ::google::protobuf::Message {
 public:
  ActionCountTickNtf();
  virtual ~ActionCountTickNtf();

  ActionCountTickNtf(const ActionCountTickNtf& from);

  inline ActionCountTickNtf& operator=(const ActionCountTickNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionCountTickNtf& default_instance();

  void Swap(ActionCountTickNtf* other);

  // implements Message ----------------------------------------------

  ActionCountTickNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionCountTickNtf& from);
  void MergeFrom(const ActionCountTickNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_time = 1;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 1;
  inline ::google::protobuf::int64 last_time() const;
  inline void set_last_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ActionCountTickNtf)
 private:
  inline void set_has_last_time();
  inline void clear_has_last_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 last_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ActionCountTickNtf* default_instance_;
};
// -------------------------------------------------------------------

class CustomerServiceUrlNtf : public ::google::protobuf::Message {
 public:
  CustomerServiceUrlNtf();
  virtual ~CustomerServiceUrlNtf();

  CustomerServiceUrlNtf(const CustomerServiceUrlNtf& from);

  inline CustomerServiceUrlNtf& operator=(const CustomerServiceUrlNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomerServiceUrlNtf& default_instance();

  void Swap(CustomerServiceUrlNtf* other);

  // implements Message ----------------------------------------------

  CustomerServiceUrlNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CustomerServiceUrlNtf& from);
  void MergeFrom(const CustomerServiceUrlNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 1;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.CustomerServiceUrlNtf)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::std::string* key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CustomerServiceUrlNtf* default_instance_;
};
// -------------------------------------------------------------------

class SkillPage : public ::google::protobuf::Message {
 public:
  SkillPage();
  virtual ~SkillPage();

  SkillPage(const SkillPage& from);

  inline SkillPage& operator=(const SkillPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillPage& default_instance();

  void Swap(SkillPage* other);

  // implements Message ----------------------------------------------

  SkillPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillPage& from);
  void MergeFrom(const SkillPage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // optional uint32 active_skill_id_first = 2;
  inline bool has_active_skill_id_first() const;
  inline void clear_active_skill_id_first();
  static const int kActiveSkillIdFirstFieldNumber = 2;
  inline ::google::protobuf::uint32 active_skill_id_first() const;
  inline void set_active_skill_id_first(::google::protobuf::uint32 value);

  // optional uint32 active_skill_id_second = 3;
  inline bool has_active_skill_id_second() const;
  inline void clear_active_skill_id_second();
  static const int kActiveSkillIdSecondFieldNumber = 3;
  inline ::google::protobuf::uint32 active_skill_id_second() const;
  inline void set_active_skill_id_second(::google::protobuf::uint32 value);

  // repeated .protoc.gameproto.Skill skill = 4;
  inline int skill_size() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 4;
  inline const ::protoc::gameproto::Skill& skill(int index) const;
  inline ::protoc::gameproto::Skill* mutable_skill(int index);
  inline ::protoc::gameproto::Skill* add_skill();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::Skill >&
      skill() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::Skill >*
      mutable_skill();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SkillPage)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_active_skill_id_first();
  inline void clear_has_active_skill_id_first();
  inline void set_has_active_skill_id_second();
  inline void clear_has_active_skill_id_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 active_skill_id_first_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::Skill > skill_;
  ::google::protobuf::uint32 active_skill_id_second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SkillPage* default_instance_;
};
// -------------------------------------------------------------------

class Skill : public ::google::protobuf::Message {
 public:
  Skill();
  virtual ~Skill();

  Skill(const Skill& from);

  inline Skill& operator=(const Skill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill& default_instance();

  void Swap(Skill* other);

  // implements Message ----------------------------------------------

  Skill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Skill& from);
  void MergeFrom(const Skill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.Skill)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static Skill* default_instance_;
};
// -------------------------------------------------------------------

class GetSkillListReq : public ::google::protobuf::Message {
 public:
  GetSkillListReq();
  virtual ~GetSkillListReq();

  GetSkillListReq(const GetSkillListReq& from);

  inline GetSkillListReq& operator=(const GetSkillListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSkillListReq& default_instance();

  void Swap(GetSkillListReq* other);

  // implements Message ----------------------------------------------

  GetSkillListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSkillListReq& from);
  void MergeFrom(const GetSkillListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetSkillListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetSkillListReq* default_instance_;
};
// -------------------------------------------------------------------

class GetSkillListAck : public ::google::protobuf::Message {
 public:
  GetSkillListAck();
  virtual ~GetSkillListAck();

  GetSkillListAck(const GetSkillListAck& from);

  inline GetSkillListAck& operator=(const GetSkillListAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSkillListAck& default_instance();

  void Swap(GetSkillListAck* other);

  // implements Message ----------------------------------------------

  GetSkillListAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSkillListAck& from);
  void MergeFrom(const GetSkillListAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.SkillPage skill_page = 1;
  inline int skill_page_size() const;
  inline void clear_skill_page();
  static const int kSkillPageFieldNumber = 1;
  inline const ::protoc::gameproto::SkillPage& skill_page(int index) const;
  inline ::protoc::gameproto::SkillPage* mutable_skill_page(int index);
  inline ::protoc::gameproto::SkillPage* add_skill_page();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SkillPage >&
      skill_page() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SkillPage >*
      mutable_skill_page();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetSkillListAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SkillPage > skill_page_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GetSkillListAck* default_instance_;
};
// -------------------------------------------------------------------

class SaveSkillPageReq : public ::google::protobuf::Message {
 public:
  SaveSkillPageReq();
  virtual ~SaveSkillPageReq();

  SaveSkillPageReq(const SaveSkillPageReq& from);

  inline SaveSkillPageReq& operator=(const SaveSkillPageReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveSkillPageReq& default_instance();

  void Swap(SaveSkillPageReq* other);

  // implements Message ----------------------------------------------

  SaveSkillPageReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveSkillPageReq& from);
  void MergeFrom(const SaveSkillPageReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // optional .protoc.gameproto.SkillPage skill_page = 2;
  inline bool has_skill_page() const;
  inline void clear_skill_page();
  static const int kSkillPageFieldNumber = 2;
  inline const ::protoc::gameproto::SkillPage& skill_page() const;
  inline ::protoc::gameproto::SkillPage* mutable_skill_page();
  inline ::protoc::gameproto::SkillPage* release_skill_page();
  inline void set_allocated_skill_page(::protoc::gameproto::SkillPage* skill_page);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SaveSkillPageReq)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_skill_page();
  inline void clear_has_skill_page();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::SkillPage* skill_page_;
  ::google::protobuf::uint32 page_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SaveSkillPageReq* default_instance_;
};
// -------------------------------------------------------------------

class SaveSkillPageAck : public ::google::protobuf::Message {
 public:
  SaveSkillPageAck();
  virtual ~SaveSkillPageAck();

  SaveSkillPageAck(const SaveSkillPageAck& from);

  inline SaveSkillPageAck& operator=(const SaveSkillPageAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveSkillPageAck& default_instance();

  void Swap(SaveSkillPageAck* other);

  // implements Message ----------------------------------------------

  SaveSkillPageAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveSkillPageAck& from);
  void MergeFrom(const SaveSkillPageAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SaveSkillPageAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SaveSkillPageAck* default_instance_;
};
// -------------------------------------------------------------------

class SaveActiveSkillReq : public ::google::protobuf::Message {
 public:
  SaveActiveSkillReq();
  virtual ~SaveActiveSkillReq();

  SaveActiveSkillReq(const SaveActiveSkillReq& from);

  inline SaveActiveSkillReq& operator=(const SaveActiveSkillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveActiveSkillReq& default_instance();

  void Swap(SaveActiveSkillReq* other);

  // implements Message ----------------------------------------------

  SaveActiveSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveActiveSkillReq& from);
  void MergeFrom(const SaveActiveSkillReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page = 1;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 1;
  inline ::google::protobuf::uint32 page() const;
  inline void set_page(::google::protobuf::uint32 value);

  // optional uint32 active_skill_id_first = 2;
  inline bool has_active_skill_id_first() const;
  inline void clear_active_skill_id_first();
  static const int kActiveSkillIdFirstFieldNumber = 2;
  inline ::google::protobuf::uint32 active_skill_id_first() const;
  inline void set_active_skill_id_first(::google::protobuf::uint32 value);

  // optional uint32 active_skill_id_second = 3;
  inline bool has_active_skill_id_second() const;
  inline void clear_active_skill_id_second();
  static const int kActiveSkillIdSecondFieldNumber = 3;
  inline ::google::protobuf::uint32 active_skill_id_second() const;
  inline void set_active_skill_id_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SaveActiveSkillReq)
 private:
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_active_skill_id_first();
  inline void clear_has_active_skill_id_first();
  inline void set_has_active_skill_id_second();
  inline void clear_has_active_skill_id_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 page_;
  ::google::protobuf::uint32 active_skill_id_first_;
  ::google::protobuf::uint32 active_skill_id_second_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SaveActiveSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class SaveActiveSkillAck : public ::google::protobuf::Message {
 public:
  SaveActiveSkillAck();
  virtual ~SaveActiveSkillAck();

  SaveActiveSkillAck(const SaveActiveSkillAck& from);

  inline SaveActiveSkillAck& operator=(const SaveActiveSkillAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveActiveSkillAck& default_instance();

  void Swap(SaveActiveSkillAck* other);

  // implements Message ----------------------------------------------

  SaveActiveSkillAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveActiveSkillAck& from);
  void MergeFrom(const SaveActiveSkillAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SaveActiveSkillAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SaveActiveSkillAck* default_instance_;
};
// -------------------------------------------------------------------

class GoodsItem : public ::google::protobuf::Message {
 public:
  GoodsItem();
  virtual ~GoodsItem();

  GoodsItem(const GoodsItem& from);

  inline GoodsItem& operator=(const GoodsItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsItem& default_instance();

  void Swap(GoodsItem* other);

  // implements Message ----------------------------------------------

  GoodsItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsItem& from);
  void MergeFrom(const GoodsItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwID = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwIDFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // optional uint32 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // optional uint32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GoodsItem)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GoodsItem* default_instance_;
};
// -------------------------------------------------------------------

class GoodsList : public ::google::protobuf::Message {
 public:
  GoodsList();
  virtual ~GoodsList();

  GoodsList(const GoodsList& from);

  inline GoodsList& operator=(const GoodsList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsList& default_instance();

  void Swap(GoodsList* other);

  // implements Message ----------------------------------------------

  GoodsList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsList& from);
  void MergeFrom(const GoodsList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.GoodsItem data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::GoodsItem& data(int index) const;
  inline ::protoc::gameproto::GoodsItem* mutable_data(int index);
  inline ::protoc::gameproto::GoodsItem* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsItem >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsItem >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GoodsList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsItem > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static GoodsList* default_instance_;
};
// -------------------------------------------------------------------

class AddGoodsItem : public ::google::protobuf::Message {
 public:
  AddGoodsItem();
  virtual ~AddGoodsItem();

  AddGoodsItem(const AddGoodsItem& from);

  inline AddGoodsItem& operator=(const AddGoodsItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGoodsItem& default_instance();

  void Swap(AddGoodsItem* other);

  // implements Message ----------------------------------------------

  AddGoodsItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddGoodsItem& from);
  void MergeFrom(const AddGoodsItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.GoodsItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::protoc::gameproto::GoodsItem& item() const;
  inline ::protoc::gameproto::GoodsItem* mutable_item();
  inline ::protoc::gameproto::GoodsItem* release_item();
  inline void set_allocated_item(::protoc::gameproto::GoodsItem* item);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddGoodsItem)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::GoodsItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddGoodsItem* default_instance_;
};
// -------------------------------------------------------------------

class UpdateGoodsNumber : public ::google::protobuf::Message {
 public:
  UpdateGoodsNumber();
  virtual ~UpdateGoodsNumber();

  UpdateGoodsNumber(const UpdateGoodsNumber& from);

  inline UpdateGoodsNumber& operator=(const UpdateGoodsNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateGoodsNumber& default_instance();

  void Swap(UpdateGoodsNumber* other);

  // implements Message ----------------------------------------------

  UpdateGoodsNumber* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateGoodsNumber& from);
  void MergeFrom(const UpdateGoodsNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwid = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // optional uint32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateGoodsNumber)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateGoodsNumber* default_instance_;
};
// -------------------------------------------------------------------

class EquipData : public ::google::protobuf::Message {
 public:
  EquipData();
  virtual ~EquipData();

  EquipData(const EquipData& from);

  inline EquipData& operator=(const EquipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipData& default_instance();

  void Swap(EquipData* other);

  // implements Message ----------------------------------------------

  EquipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipData& from);
  void MergeFrom(const EquipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwID = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwIDFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // optional uint32 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint32 value);

  // optional uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated uint32 hole_id = 5;
  inline int hole_id_size() const;
  inline void clear_hole_id();
  static const int kHoleIdFieldNumber = 5;
  inline ::google::protobuf::uint32 hole_id(int index) const;
  inline void set_hole_id(int index, ::google::protobuf::uint32 value);
  inline void add_hole_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hole_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hole_id();

  // optional uint64 qwpet_id = 6;
  inline bool has_qwpet_id() const;
  inline void clear_qwpet_id();
  static const int kQwpetIdFieldNumber = 6;
  inline ::google::protobuf::uint64 qwpet_id() const;
  inline void set_qwpet_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.EquipData)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_qwpet_id();
  inline void clear_has_qwpet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hole_id_;
  ::google::protobuf::uint64 qwpet_id_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static EquipData* default_instance_;
};
// -------------------------------------------------------------------

class EquipList : public ::google::protobuf::Message {
 public:
  EquipList();
  virtual ~EquipList();

  EquipList(const EquipList& from);

  inline EquipList& operator=(const EquipList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipList& default_instance();

  void Swap(EquipList* other);

  // implements Message ----------------------------------------------

  EquipList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipList& from);
  void MergeFrom(const EquipList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.EquipData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::EquipData& data(int index) const;
  inline ::protoc::gameproto::EquipData* mutable_data(int index);
  inline ::protoc::gameproto::EquipData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.EquipList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static EquipList* default_instance_;
};
// -------------------------------------------------------------------

class AddEquip : public ::google::protobuf::Message {
 public:
  AddEquip();
  virtual ~AddEquip();

  AddEquip(const AddEquip& from);

  inline AddEquip& operator=(const AddEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddEquip& default_instance();

  void Swap(AddEquip* other);

  // implements Message ----------------------------------------------

  AddEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddEquip& from);
  void MergeFrom(const AddEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.EquipData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::EquipData& data() const;
  inline ::protoc::gameproto::EquipData* mutable_data();
  inline ::protoc::gameproto::EquipData* release_data();
  inline void set_allocated_data(::protoc::gameproto::EquipData* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.AddEquip)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::EquipData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static AddEquip* default_instance_;
};
// -------------------------------------------------------------------

class DelEquip : public ::google::protobuf::Message {
 public:
  DelEquip();
  virtual ~DelEquip();

  DelEquip(const DelEquip& from);

  inline DelEquip& operator=(const DelEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelEquip& default_instance();

  void Swap(DelEquip* other);

  // implements Message ----------------------------------------------

  DelEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelEquip& from);
  void MergeFrom(const DelEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwid = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.DelEquip)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static DelEquip* default_instance_;
};
// -------------------------------------------------------------------

class UpdateEquip : public ::google::protobuf::Message {
 public:
  UpdateEquip();
  virtual ~UpdateEquip();

  UpdateEquip(const UpdateEquip& from);

  inline UpdateEquip& operator=(const UpdateEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateEquip& default_instance();

  void Swap(UpdateEquip* other);

  // implements Message ----------------------------------------------

  UpdateEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateEquip& from);
  void MergeFrom(const UpdateEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protoc.gameproto.EquipData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::EquipData& data() const;
  inline ::protoc::gameproto::EquipData* mutable_data();
  inline ::protoc::gameproto::EquipData* release_data();
  inline void set_allocated_data(::protoc::gameproto::EquipData* data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateEquip)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protoc::gameproto::EquipData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateEquip* default_instance_;
};
// -------------------------------------------------------------------

class PutOnEquipReq : public ::google::protobuf::Message {
 public:
  PutOnEquipReq();
  virtual ~PutOnEquipReq();

  PutOnEquipReq(const PutOnEquipReq& from);

  inline PutOnEquipReq& operator=(const PutOnEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutOnEquipReq& default_instance();

  void Swap(PutOnEquipReq* other);

  // implements Message ----------------------------------------------

  PutOnEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutOnEquipReq& from);
  void MergeFrom(const PutOnEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional uint64 equip_id = 2;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PutOnEquipReq)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::uint64 equip_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PutOnEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class PutOnEquipAck : public ::google::protobuf::Message {
 public:
  PutOnEquipAck();
  virtual ~PutOnEquipAck();

  PutOnEquipAck(const PutOnEquipAck& from);

  inline PutOnEquipAck& operator=(const PutOnEquipAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutOnEquipAck& default_instance();

  void Swap(PutOnEquipAck* other);

  // implements Message ----------------------------------------------

  PutOnEquipAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutOnEquipAck& from);
  void MergeFrom(const PutOnEquipAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 pet_id = 2;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 2;
  inline ::google::protobuf::uint64 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint64 value);

  // optional uint64 equip_id = 3;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 3;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PutOnEquipAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 pet_id_;
  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PutOnEquipAck* default_instance_;
};
// -------------------------------------------------------------------

class TongShiEquip : public ::google::protobuf::Message {
 public:
  TongShiEquip();
  virtual ~TongShiEquip();

  TongShiEquip(const TongShiEquip& from);

  inline TongShiEquip& operator=(const TongShiEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TongShiEquip& default_instance();

  void Swap(TongShiEquip* other);

  // implements Message ----------------------------------------------

  TongShiEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TongShiEquip& from);
  void MergeFrom(const TongShiEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // optional uint32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TongShiEquip)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static TongShiEquip* default_instance_;
};
// -------------------------------------------------------------------

class StrengEquipReq : public ::google::protobuf::Message {
 public:
  StrengEquipReq();
  virtual ~StrengEquipReq();

  StrengEquipReq(const StrengEquipReq& from);

  inline StrengEquipReq& operator=(const StrengEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrengEquipReq& default_instance();

  void Swap(StrengEquipReq* other);

  // implements Message ----------------------------------------------

  StrengEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrengEquipReq& from);
  void MergeFrom(const StrengEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // repeated .protoc.gameproto.TongShiEquip tonshi = 2;
  inline int tonshi_size() const;
  inline void clear_tonshi();
  static const int kTonshiFieldNumber = 2;
  inline const ::protoc::gameproto::TongShiEquip& tonshi(int index) const;
  inline ::protoc::gameproto::TongShiEquip* mutable_tonshi(int index);
  inline ::protoc::gameproto::TongShiEquip* add_tonshi();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TongShiEquip >&
      tonshi() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TongShiEquip >*
      mutable_tonshi();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.StrengEquipReq)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TongShiEquip > tonshi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static StrengEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class StrengEquipAck : public ::google::protobuf::Message {
 public:
  StrengEquipAck();
  virtual ~StrengEquipAck();

  StrengEquipAck(const StrengEquipAck& from);

  inline StrengEquipAck& operator=(const StrengEquipAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrengEquipAck& default_instance();

  void Swap(StrengEquipAck* other);

  // implements Message ----------------------------------------------

  StrengEquipAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrengEquipAck& from);
  void MergeFrom(const StrengEquipAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 equip_id = 2;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.StrengEquipAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static StrengEquipAck* default_instance_;
};
// -------------------------------------------------------------------

class JinJieEquipReq : public ::google::protobuf::Message {
 public:
  JinJieEquipReq();
  virtual ~JinJieEquipReq();

  JinJieEquipReq(const JinJieEquipReq& from);

  inline JinJieEquipReq& operator=(const JinJieEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JinJieEquipReq& default_instance();

  void Swap(JinJieEquipReq* other);

  // implements Message ----------------------------------------------

  JinJieEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JinJieEquipReq& from);
  void MergeFrom(const JinJieEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.JinJieEquipReq)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static JinJieEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class JinJieEquipAck : public ::google::protobuf::Message {
 public:
  JinJieEquipAck();
  virtual ~JinJieEquipAck();

  JinJieEquipAck(const JinJieEquipAck& from);

  inline JinJieEquipAck& operator=(const JinJieEquipAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JinJieEquipAck& default_instance();

  void Swap(JinJieEquipAck* other);

  // implements Message ----------------------------------------------

  JinJieEquipAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JinJieEquipAck& from);
  void MergeFrom(const JinJieEquipAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 equip_id = 2;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.JinJieEquipAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static JinJieEquipAck* default_instance_;
};
// -------------------------------------------------------------------

class HeChengEquipReq : public ::google::protobuf::Message {
 public:
  HeChengEquipReq();
  virtual ~HeChengEquipReq();

  HeChengEquipReq(const HeChengEquipReq& from);

  inline HeChengEquipReq& operator=(const HeChengEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeChengEquipReq& default_instance();

  void Swap(HeChengEquipReq* other);

  // implements Message ----------------------------------------------

  HeChengEquipReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeChengEquipReq& from);
  void MergeFrom(const HeChengEquipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 goods_id = 1;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint64 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.HeChengEquipReq)
 private:
  inline void set_has_goods_id();
  inline void clear_has_goods_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 goods_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static HeChengEquipReq* default_instance_;
};
// -------------------------------------------------------------------

class HeChengEquipAck : public ::google::protobuf::Message {
 public:
  HeChengEquipAck();
  virtual ~HeChengEquipAck();

  HeChengEquipAck(const HeChengEquipAck& from);

  inline HeChengEquipAck& operator=(const HeChengEquipAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeChengEquipAck& default_instance();

  void Swap(HeChengEquipAck* other);

  // implements Message ----------------------------------------------

  HeChengEquipAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeChengEquipAck& from);
  void MergeFrom(const HeChengEquipAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint64 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.HeChengEquipAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 goods_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static HeChengEquipAck* default_instance_;
};
// -------------------------------------------------------------------

class SellGoodsReq : public ::google::protobuf::Message {
 public:
  SellGoodsReq();
  virtual ~SellGoodsReq();

  SellGoodsReq(const SellGoodsReq& from);

  inline SellGoodsReq& operator=(const SellGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellGoodsReq& default_instance();

  void Swap(SellGoodsReq* other);

  // implements Message ----------------------------------------------

  SellGoodsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellGoodsReq& from);
  void MergeFrom(const SellGoodsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 goods_id = 1;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  inline ::google::protobuf::uint64 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint64 value);

  // optional uint32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SellGoodsReq)
 private:
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 goods_id_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SellGoodsReq* default_instance_;
};
// -------------------------------------------------------------------

class SellGoodsAck : public ::google::protobuf::Message {
 public:
  SellGoodsAck();
  virtual ~SellGoodsAck();

  SellGoodsAck(const SellGoodsAck& from);

  inline SellGoodsAck& operator=(const SellGoodsAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SellGoodsAck& default_instance();

  void Swap(SellGoodsAck* other);

  // implements Message ----------------------------------------------

  SellGoodsAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SellGoodsAck& from);
  void MergeFrom(const SellGoodsAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::uint64 goods_id() const;
  inline void set_goods_id(::google::protobuf::uint64 value);

  // optional uint32 number = 3;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 number() const;
  inline void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SellGoodsAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 goods_id_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SellGoodsAck* default_instance_;
};
// -------------------------------------------------------------------

class EquipSetStoreReq : public ::google::protobuf::Message {
 public:
  EquipSetStoreReq();
  virtual ~EquipSetStoreReq();

  EquipSetStoreReq(const EquipSetStoreReq& from);

  inline EquipSetStoreReq& operator=(const EquipSetStoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSetStoreReq& default_instance();

  void Swap(EquipSetStoreReq* other);

  // implements Message ----------------------------------------------

  EquipSetStoreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSetStoreReq& from);
  void MergeFrom(const EquipSetStoreReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // optional uint64 store_id = 2;
  inline bool has_store_id() const;
  inline void clear_store_id();
  static const int kStoreIdFieldNumber = 2;
  inline ::google::protobuf::uint64 store_id() const;
  inline void set_store_id(::google::protobuf::uint64 value);

  // optional uint32 idx = 3;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.EquipSetStoreReq)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_store_id();
  inline void clear_has_store_id();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::uint64 store_id_;
  ::google::protobuf::uint32 idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static EquipSetStoreReq* default_instance_;
};
// -------------------------------------------------------------------

class EquipSetStoreAck : public ::google::protobuf::Message {
 public:
  EquipSetStoreAck();
  virtual ~EquipSetStoreAck();

  EquipSetStoreAck(const EquipSetStoreAck& from);

  inline EquipSetStoreAck& operator=(const EquipSetStoreAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSetStoreAck& default_instance();

  void Swap(EquipSetStoreAck* other);

  // implements Message ----------------------------------------------

  EquipSetStoreAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSetStoreAck& from);
  void MergeFrom(const EquipSetStoreAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 equip_id = 2;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::uint64 equip_id() const;
  inline void set_equip_id(::google::protobuf::uint64 value);

  // optional uint64 store_id = 3;
  inline bool has_store_id() const;
  inline void clear_store_id();
  static const int kStoreIdFieldNumber = 3;
  inline ::google::protobuf::uint64 store_id() const;
  inline void set_store_id(::google::protobuf::uint64 value);

  // optional uint32 idx = 4;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 4;
  inline ::google::protobuf::uint32 idx() const;
  inline void set_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.EquipSetStoreAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_store_id();
  inline void clear_has_store_id();
  inline void set_has_idx();
  inline void clear_has_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 equip_id_;
  ::google::protobuf::int32 err_no_;
  ::google::protobuf::uint32 idx_;
  ::google::protobuf::uint64 store_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static EquipSetStoreAck* default_instance_;
};
// -------------------------------------------------------------------

class ShareDataNtf : public ::google::protobuf::Message {
 public:
  ShareDataNtf();
  virtual ~ShareDataNtf();

  ShareDataNtf(const ShareDataNtf& from);

  inline ShareDataNtf& operator=(const ShareDataNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareDataNtf& default_instance();

  void Swap(ShareDataNtf* other);

  // implements Message ----------------------------------------------

  ShareDataNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareDataNtf& from);
  void MergeFrom(const ShareDataNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 kind = 1;
  inline bool has_kind() const;
  inline void clear_kind();
  static const int kKindFieldNumber = 1;
  inline ::google::protobuf::uint32 kind() const;
  inline void set_kind(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.ShareDataNtf)
 private:
  inline void set_has_kind();
  inline void clear_has_kind();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static ShareDataNtf* default_instance_;
};
// -------------------------------------------------------------------

class CompleteLoadDataNtf : public ::google::protobuf::Message {
 public:
  CompleteLoadDataNtf();
  virtual ~CompleteLoadDataNtf();

  CompleteLoadDataNtf(const CompleteLoadDataNtf& from);

  inline CompleteLoadDataNtf& operator=(const CompleteLoadDataNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompleteLoadDataNtf& default_instance();

  void Swap(CompleteLoadDataNtf* other);

  // implements Message ----------------------------------------------

  CompleteLoadDataNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompleteLoadDataNtf& from);
  void MergeFrom(const CompleteLoadDataNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.CompleteLoadDataNtf)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static CompleteLoadDataNtf* default_instance_;
};
// -------------------------------------------------------------------

class SetPetNewStateReq : public ::google::protobuf::Message {
 public:
  SetPetNewStateReq();
  virtual ~SetPetNewStateReq();

  SetPetNewStateReq(const SetPetNewStateReq& from);

  inline SetPetNewStateReq& operator=(const SetPetNewStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPetNewStateReq& default_instance();

  void Swap(SetPetNewStateReq* other);

  // implements Message ----------------------------------------------

  SetPetNewStateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPetNewStateReq& from);
  void MergeFrom(const SetPetNewStateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 qwid = 1;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 1;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetPetNewStateReq)
 private:
  inline void set_has_qwid();
  inline void clear_has_qwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetPetNewStateReq* default_instance_;
};
// -------------------------------------------------------------------

class SetPetNewStateAck : public ::google::protobuf::Message {
 public:
  SetPetNewStateAck();
  virtual ~SetPetNewStateAck();

  SetPetNewStateAck(const SetPetNewStateAck& from);

  inline SetPetNewStateAck& operator=(const SetPetNewStateAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPetNewStateAck& default_instance();

  void Swap(SetPetNewStateAck* other);

  // implements Message ----------------------------------------------

  SetPetNewStateAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPetNewStateAck& from);
  void MergeFrom(const SetPetNewStateAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional uint64 qwid = 2;
  inline bool has_qwid() const;
  inline void clear_qwid();
  static const int kQwidFieldNumber = 2;
  inline ::google::protobuf::uint64 qwid() const;
  inline void set_qwid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.SetPetNewStateAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_qwid();
  inline void clear_has_qwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 qwid_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static SetPetNewStateAck* default_instance_;
};
// -------------------------------------------------------------------

class UpdateBuyActionCounts : public ::google::protobuf::Message {
 public:
  UpdateBuyActionCounts();
  virtual ~UpdateBuyActionCounts();

  UpdateBuyActionCounts(const UpdateBuyActionCounts& from);

  inline UpdateBuyActionCounts& operator=(const UpdateBuyActionCounts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBuyActionCounts& default_instance();

  void Swap(UpdateBuyActionCounts* other);

  // implements Message ----------------------------------------------

  UpdateBuyActionCounts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateBuyActionCounts& from);
  void MergeFrom(const UpdateBuyActionCounts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cur_counts = 1;
  inline bool has_cur_counts() const;
  inline void clear_cur_counts();
  static const int kCurCountsFieldNumber = 1;
  inline ::google::protobuf::uint32 cur_counts() const;
  inline void set_cur_counts(::google::protobuf::uint32 value);

  // optional uint32 max_counts = 2;
  inline bool has_max_counts() const;
  inline void clear_max_counts();
  static const int kMaxCountsFieldNumber = 2;
  inline ::google::protobuf::uint32 max_counts() const;
  inline void set_max_counts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.UpdateBuyActionCounts)
 private:
  inline void set_has_cur_counts();
  inline void clear_has_cur_counts();
  inline void set_has_max_counts();
  inline void clear_has_max_counts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cur_counts_;
  ::google::protobuf::uint32 max_counts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static UpdateBuyActionCounts* default_instance_;
};
// -------------------------------------------------------------------

class PythonMsg_example : public ::google::protobuf::Message {
 public:
  PythonMsg_example();
  virtual ~PythonMsg_example();

  PythonMsg_example(const PythonMsg_example& from);

  inline PythonMsg_example& operator=(const PythonMsg_example& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PythonMsg_example& default_instance();

  void Swap(PythonMsg_example* other);

  // implements Message ----------------------------------------------

  PythonMsg_example* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PythonMsg_example& from);
  void MergeFrom(const PythonMsg_example& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double t_double = 1;
  inline bool has_t_double() const;
  inline void clear_t_double();
  static const int kTDoubleFieldNumber = 1;
  inline double t_double() const;
  inline void set_t_double(double value);

  // optional float t_float = 2;
  inline bool has_t_float() const;
  inline void clear_t_float();
  static const int kTFloatFieldNumber = 2;
  inline float t_float() const;
  inline void set_t_float(float value);

  // optional int32 t_int32 = 3;
  inline bool has_t_int32() const;
  inline void clear_t_int32();
  static const int kTInt32FieldNumber = 3;
  inline ::google::protobuf::int32 t_int32() const;
  inline void set_t_int32(::google::protobuf::int32 value);

  // optional int64 t_int64 = 4;
  inline bool has_t_int64() const;
  inline void clear_t_int64();
  static const int kTInt64FieldNumber = 4;
  inline ::google::protobuf::int64 t_int64() const;
  inline void set_t_int64(::google::protobuf::int64 value);

  // optional uint32 t_uint32 = 5;
  inline bool has_t_uint32() const;
  inline void clear_t_uint32();
  static const int kTUint32FieldNumber = 5;
  inline ::google::protobuf::uint32 t_uint32() const;
  inline void set_t_uint32(::google::protobuf::uint32 value);

  // optional uint64 t_uint64 = 6;
  inline bool has_t_uint64() const;
  inline void clear_t_uint64();
  static const int kTUint64FieldNumber = 6;
  inline ::google::protobuf::uint64 t_uint64() const;
  inline void set_t_uint64(::google::protobuf::uint64 value);

  // optional sint32 t_sint32 = 7;
  inline bool has_t_sint32() const;
  inline void clear_t_sint32();
  static const int kTSint32FieldNumber = 7;
  inline ::google::protobuf::int32 t_sint32() const;
  inline void set_t_sint32(::google::protobuf::int32 value);

  // optional sint64 t_sint64 = 8;
  inline bool has_t_sint64() const;
  inline void clear_t_sint64();
  static const int kTSint64FieldNumber = 8;
  inline ::google::protobuf::int64 t_sint64() const;
  inline void set_t_sint64(::google::protobuf::int64 value);

  // optional bool t_bool = 9;
  inline bool has_t_bool() const;
  inline void clear_t_bool();
  static const int kTBoolFieldNumber = 9;
  inline bool t_bool() const;
  inline void set_t_bool(bool value);

  // optional string t_string = 10;
  inline bool has_t_string() const;
  inline void clear_t_string();
  static const int kTStringFieldNumber = 10;
  inline const ::std::string& t_string() const;
  inline void set_t_string(const ::std::string& value);
  inline void set_t_string(const char* value);
  inline void set_t_string(const char* value, size_t size);
  inline ::std::string* mutable_t_string();
  inline ::std::string* release_t_string();
  inline void set_allocated_t_string(::std::string* t_string);

  // optional bytes t_bytes = 11;
  inline bool has_t_bytes() const;
  inline void clear_t_bytes();
  static const int kTBytesFieldNumber = 11;
  inline const ::std::string& t_bytes() const;
  inline void set_t_bytes(const ::std::string& value);
  inline void set_t_bytes(const char* value);
  inline void set_t_bytes(const void* value, size_t size);
  inline ::std::string* mutable_t_bytes();
  inline ::std::string* release_t_bytes();
  inline void set_allocated_t_bytes(::std::string* t_bytes);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PythonMsg_example)
 private:
  inline void set_has_t_double();
  inline void clear_has_t_double();
  inline void set_has_t_float();
  inline void clear_has_t_float();
  inline void set_has_t_int32();
  inline void clear_has_t_int32();
  inline void set_has_t_int64();
  inline void clear_has_t_int64();
  inline void set_has_t_uint32();
  inline void clear_has_t_uint32();
  inline void set_has_t_uint64();
  inline void clear_has_t_uint64();
  inline void set_has_t_sint32();
  inline void clear_has_t_sint32();
  inline void set_has_t_sint64();
  inline void clear_has_t_sint64();
  inline void set_has_t_bool();
  inline void clear_has_t_bool();
  inline void set_has_t_string();
  inline void clear_has_t_string();
  inline void set_has_t_bytes();
  inline void clear_has_t_bytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double t_double_;
  float t_float_;
  ::google::protobuf::int32 t_int32_;
  ::google::protobuf::int64 t_int64_;
  ::google::protobuf::uint64 t_uint64_;
  ::google::protobuf::uint32 t_uint32_;
  ::google::protobuf::int32 t_sint32_;
  ::google::protobuf::int64 t_sint64_;
  ::std::string* t_string_;
  ::std::string* t_bytes_;
  bool t_bool_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PythonMsg_example* default_instance_;
};
// -------------------------------------------------------------------

class PythonMessage : public ::google::protobuf::Message {
 public:
  PythonMessage();
  virtual ~PythonMessage();

  PythonMessage(const PythonMessage& from);

  inline PythonMessage& operator=(const PythonMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PythonMessage& default_instance();

  void Swap(PythonMessage* other);

  // implements Message ----------------------------------------------

  PythonMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PythonMessage& from);
  void MergeFrom(const PythonMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional bytes msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const void* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PythonMessage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PythonMessage* default_instance_;
};
// -------------------------------------------------------------------

class PyChouKaReq : public ::google::protobuf::Message {
 public:
  PyChouKaReq();
  virtual ~PyChouKaReq();

  PyChouKaReq(const PyChouKaReq& from);

  inline PyChouKaReq& operator=(const PyChouKaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyChouKaReq& default_instance();

  void Swap(PyChouKaReq* other);

  // implements Message ----------------------------------------------

  PyChouKaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyChouKaReq& from);
  void MergeFrom(const PyChouKaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional bool is_one = 2 [default = true];
  inline bool has_is_one() const;
  inline void clear_is_one();
  static const int kIsOneFieldNumber = 2;
  inline bool is_one() const;
  inline void set_is_one(bool value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyChouKaReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_one();
  inline void clear_has_is_one();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  bool is_one_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyChouKaReq* default_instance_;
};
// -------------------------------------------------------------------

class PyPetInfo : public ::google::protobuf::Message {
 public:
  PyPetInfo();
  virtual ~PyPetInfo();

  PyPetInfo(const PyPetInfo& from);

  inline PyPetInfo& operator=(const PyPetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyPetInfo& default_instance();

  void Swap(PyPetInfo* other);

  // implements Message ----------------------------------------------

  PyPetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyPetInfo& from);
  void MergeFrom(const PyPetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pet_id = 1;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 1;
  inline ::google::protobuf::uint32 pet_id() const;
  inline void set_pet_id(::google::protobuf::uint32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyPetInfo)
 private:
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pet_id_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyPetInfo* default_instance_;
};
// -------------------------------------------------------------------

class PyChouKaAck : public ::google::protobuf::Message {
 public:
  PyChouKaAck();
  virtual ~PyChouKaAck();

  PyChouKaAck(const PyChouKaAck& from);

  inline PyChouKaAck& operator=(const PyChouKaAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyChouKaAck& default_instance();

  void Swap(PyChouKaAck* other);

  // implements Message ----------------------------------------------

  PyChouKaAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyChouKaAck& from);
  void MergeFrom(const PyChouKaAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // repeated .protoc.gameproto.PyPetInfo info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::protoc::gameproto::PyPetInfo& info(int index) const;
  inline ::protoc::gameproto::PyPetInfo* mutable_info(int index);
  inline ::protoc::gameproto::PyPetInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyPetInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyPetInfo >*
      mutable_info();

  // repeated uint32 item_id = 3;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::uint32 value);
  inline void add_item_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_id();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyChouKaAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyPetInfo > info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyChouKaAck* default_instance_;
};
// -------------------------------------------------------------------

class PyGenGaoData : public ::google::protobuf::Message {
 public:
  PyGenGaoData();
  virtual ~PyGenGaoData();

  PyGenGaoData(const PyGenGaoData& from);

  inline PyGenGaoData& operator=(const PyGenGaoData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGenGaoData& default_instance();

  void Swap(PyGenGaoData* other);

  // implements Message ----------------------------------------------

  PyGenGaoData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGenGaoData& from);
  void MergeFrom(const PyGenGaoData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string theme = 1;
  inline bool has_theme() const;
  inline void clear_theme();
  static const int kThemeFieldNumber = 1;
  inline const ::std::string& theme() const;
  inline void set_theme(const ::std::string& value);
  inline void set_theme(const char* value);
  inline void set_theme(const char* value, size_t size);
  inline ::std::string* mutable_theme();
  inline ::std::string* release_theme();
  inline void set_allocated_theme(::std::string* theme);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGenGaoData)
 private:
  inline void set_has_theme();
  inline void clear_has_theme();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* theme_;
  ::std::string* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGenGaoData* default_instance_;
};
// -------------------------------------------------------------------

class PyGetGenGaoReq : public ::google::protobuf::Message {
 public:
  PyGetGenGaoReq();
  virtual ~PyGetGenGaoReq();

  PyGetGenGaoReq(const PyGetGenGaoReq& from);

  inline PyGetGenGaoReq& operator=(const PyGetGenGaoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetGenGaoReq& default_instance();

  void Swap(PyGetGenGaoReq* other);

  // implements Message ----------------------------------------------

  PyGetGenGaoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetGenGaoReq& from);
  void MergeFrom(const PyGetGenGaoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetGenGaoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetGenGaoReq* default_instance_;
};
// -------------------------------------------------------------------

class PyGetGenGaoAck : public ::google::protobuf::Message {
 public:
  PyGetGenGaoAck();
  virtual ~PyGetGenGaoAck();

  PyGetGenGaoAck(const PyGetGenGaoAck& from);

  inline PyGetGenGaoAck& operator=(const PyGetGenGaoAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetGenGaoAck& default_instance();

  void Swap(PyGetGenGaoAck* other);

  // implements Message ----------------------------------------------

  PyGetGenGaoAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetGenGaoAck& from);
  void MergeFrom(const PyGetGenGaoAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PyGenGaoData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protoc::gameproto::PyGenGaoData& data(int index) const;
  inline ::protoc::gameproto::PyGenGaoData* mutable_data(int index);
  inline ::protoc::gameproto::PyGenGaoData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGenGaoData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGenGaoData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetGenGaoAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGenGaoData > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetGenGaoAck* default_instance_;
};
// -------------------------------------------------------------------

class PyGetGoodActivePanelReq : public ::google::protobuf::Message {
 public:
  PyGetGoodActivePanelReq();
  virtual ~PyGetGoodActivePanelReq();

  PyGetGoodActivePanelReq(const PyGetGoodActivePanelReq& from);

  inline PyGetGoodActivePanelReq& operator=(const PyGetGoodActivePanelReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetGoodActivePanelReq& default_instance();

  void Swap(PyGetGoodActivePanelReq* other);

  // implements Message ----------------------------------------------

  PyGetGoodActivePanelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetGoodActivePanelReq& from);
  void MergeFrom(const PyGetGoodActivePanelReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetGoodActivePanelReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetGoodActivePanelReq* default_instance_;
};
// -------------------------------------------------------------------

class PyGoodActiveInfo : public ::google::protobuf::Message {
 public:
  PyGoodActiveInfo();
  virtual ~PyGoodActiveInfo();

  PyGoodActiveInfo(const PyGoodActiveInfo& from);

  inline PyGoodActiveInfo& operator=(const PyGoodActiveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGoodActiveInfo& default_instance();

  void Swap(PyGoodActiveInfo* other);

  // implements Message ----------------------------------------------

  PyGoodActiveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGoodActiveInfo& from);
  void MergeFrom(const PyGoodActiveInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 active_id = 1;
  inline bool has_active_id() const;
  inline void clear_active_id();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 active_id() const;
  inline void set_active_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional string title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string desction = 4;
  inline bool has_desction() const;
  inline void clear_desction();
  static const int kDesctionFieldNumber = 4;
  inline const ::std::string& desction() const;
  inline void set_desction(const ::std::string& value);
  inline void set_desction(const char* value);
  inline void set_desction(const char* value, size_t size);
  inline ::std::string* mutable_desction();
  inline ::std::string* release_desction();
  inline void set_allocated_desction(::std::string* desction);

  // optional int64 param1 = 5;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 5;
  inline ::google::protobuf::int64 param1() const;
  inline void set_param1(::google::protobuf::int64 value);

  // optional string award = 6;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 6;
  inline const ::std::string& award() const;
  inline void set_award(const ::std::string& value);
  inline void set_award(const char* value);
  inline void set_award(const char* value, size_t size);
  inline ::std::string* mutable_award();
  inline ::std::string* release_award();
  inline void set_allocated_award(::std::string* award);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGoodActiveInfo)
 private:
  inline void set_has_active_id();
  inline void clear_has_active_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_desction();
  inline void clear_has_desction();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_award();
  inline void clear_has_award();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 active_id_;
  ::google::protobuf::uint32 type_;
  ::std::string* title_;
  ::std::string* desction_;
  ::google::protobuf::int64 param1_;
  ::std::string* award_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGoodActiveInfo* default_instance_;
};
// -------------------------------------------------------------------

class PyGetGoodActivePanelAck : public ::google::protobuf::Message {
 public:
  PyGetGoodActivePanelAck();
  virtual ~PyGetGoodActivePanelAck();

  PyGetGoodActivePanelAck(const PyGetGoodActivePanelAck& from);

  inline PyGetGoodActivePanelAck& operator=(const PyGetGoodActivePanelAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetGoodActivePanelAck& default_instance();

  void Swap(PyGetGoodActivePanelAck* other);

  // implements Message ----------------------------------------------

  PyGetGoodActivePanelAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetGoodActivePanelAck& from);
  void MergeFrom(const PyGetGoodActivePanelAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protoc.gameproto.PyGoodActiveInfo actives = 1;
  inline int actives_size() const;
  inline void clear_actives();
  static const int kActivesFieldNumber = 1;
  inline const ::protoc::gameproto::PyGoodActiveInfo& actives(int index) const;
  inline ::protoc::gameproto::PyGoodActiveInfo* mutable_actives(int index);
  inline ::protoc::gameproto::PyGoodActiveInfo* add_actives();
  inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGoodActiveInfo >&
      actives() const;
  inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGoodActiveInfo >*
      mutable_actives();

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetGoodActivePanelAck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGoodActiveInfo > actives_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetGoodActivePanelAck* default_instance_;
};
// -------------------------------------------------------------------

class PyGetActiveAwardReq : public ::google::protobuf::Message {
 public:
  PyGetActiveAwardReq();
  virtual ~PyGetActiveAwardReq();

  PyGetActiveAwardReq(const PyGetActiveAwardReq& from);

  inline PyGetActiveAwardReq& operator=(const PyGetActiveAwardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetActiveAwardReq& default_instance();

  void Swap(PyGetActiveAwardReq* other);

  // implements Message ----------------------------------------------

  PyGetActiveAwardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetActiveAwardReq& from);
  void MergeFrom(const PyGetActiveAwardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 active_id = 1;
  inline bool has_active_id() const;
  inline void clear_active_id();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 active_id() const;
  inline void set_active_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetActiveAwardReq)
 private:
  inline void set_has_active_id();
  inline void clear_has_active_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 active_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetActiveAwardReq* default_instance_;
};
// -------------------------------------------------------------------

class PyGetActiveAwardAck : public ::google::protobuf::Message {
 public:
  PyGetActiveAwardAck();
  virtual ~PyGetActiveAwardAck();

  PyGetActiveAwardAck(const PyGetActiveAwardAck& from);

  inline PyGetActiveAwardAck& operator=(const PyGetActiveAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyGetActiveAwardAck& default_instance();

  void Swap(PyGetActiveAwardAck* other);

  // implements Message ----------------------------------------------

  PyGetActiveAwardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyGetActiveAwardAck& from);
  void MergeFrom(const PyGetActiveAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 active_id = 1;
  inline bool has_active_id() const;
  inline void clear_active_id();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 active_id() const;
  inline void set_active_id(::google::protobuf::uint32 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyGetActiveAwardAck)
 private:
  inline void set_has_active_id();
  inline void clear_has_active_id();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 active_id_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyGetActiveAwardAck* default_instance_;
};
// -------------------------------------------------------------------

class PyEveryDataActiveNtf : public ::google::protobuf::Message {
 public:
  PyEveryDataActiveNtf();
  virtual ~PyEveryDataActiveNtf();

  PyEveryDataActiveNtf(const PyEveryDataActiveNtf& from);

  inline PyEveryDataActiveNtf& operator=(const PyEveryDataActiveNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyEveryDataActiveNtf& default_instance();

  void Swap(PyEveryDataActiveNtf* other);

  // implements Message ----------------------------------------------

  PyEveryDataActiveNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyEveryDataActiveNtf& from);
  void MergeFrom(const PyEveryDataActiveNtf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str_awards = 1;
  inline bool has_str_awards() const;
  inline void clear_str_awards();
  static const int kStrAwardsFieldNumber = 1;
  inline const ::std::string& str_awards() const;
  inline void set_str_awards(const ::std::string& value);
  inline void set_str_awards(const char* value);
  inline void set_str_awards(const char* value, size_t size);
  inline ::std::string* mutable_str_awards();
  inline ::std::string* release_str_awards();
  inline void set_allocated_str_awards(::std::string* str_awards);

  // optional uint32 days = 2;
  inline bool has_days() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 2;
  inline ::google::protobuf::uint32 days() const;
  inline void set_days(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyEveryDataActiveNtf)
 private:
  inline void set_has_str_awards();
  inline void clear_has_str_awards();
  inline void set_has_days();
  inline void clear_has_days();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_awards_;
  ::google::protobuf::uint32 days_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyEveryDataActiveNtf* default_instance_;
};
// -------------------------------------------------------------------

class PySaveGuideStepReq : public ::google::protobuf::Message {
 public:
  PySaveGuideStepReq();
  virtual ~PySaveGuideStepReq();

  PySaveGuideStepReq(const PySaveGuideStepReq& from);

  inline PySaveGuideStepReq& operator=(const PySaveGuideStepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PySaveGuideStepReq& default_instance();

  void Swap(PySaveGuideStepReq* other);

  // implements Message ----------------------------------------------

  PySaveGuideStepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PySaveGuideStepReq& from);
  void MergeFrom(const PySaveGuideStepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guide_step = 1;
  inline bool has_guide_step() const;
  inline void clear_guide_step();
  static const int kGuideStepFieldNumber = 1;
  inline const ::std::string& guide_step() const;
  inline void set_guide_step(const ::std::string& value);
  inline void set_guide_step(const char* value);
  inline void set_guide_step(const char* value, size_t size);
  inline ::std::string* mutable_guide_step();
  inline ::std::string* release_guide_step();
  inline void set_allocated_guide_step(::std::string* guide_step);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PySaveGuideStepReq)
 private:
  inline void set_has_guide_step();
  inline void clear_has_guide_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guide_step_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PySaveGuideStepReq* default_instance_;
};
// -------------------------------------------------------------------

class PySaveGuideStepAck : public ::google::protobuf::Message {
 public:
  PySaveGuideStepAck();
  virtual ~PySaveGuideStepAck();

  PySaveGuideStepAck(const PySaveGuideStepAck& from);

  inline PySaveGuideStepAck& operator=(const PySaveGuideStepAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PySaveGuideStepAck& default_instance();

  void Swap(PySaveGuideStepAck* other);

  // implements Message ----------------------------------------------

  PySaveGuideStepAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PySaveGuideStepAck& from);
  void MergeFrom(const PySaveGuideStepAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string guide_step = 1;
  inline bool has_guide_step() const;
  inline void clear_guide_step();
  static const int kGuideStepFieldNumber = 1;
  inline const ::std::string& guide_step() const;
  inline void set_guide_step(const ::std::string& value);
  inline void set_guide_step(const char* value);
  inline void set_guide_step(const char* value, size_t size);
  inline ::std::string* mutable_guide_step();
  inline ::std::string* release_guide_step();
  inline void set_allocated_guide_step(::std::string* guide_step);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PySaveGuideStepAck)
 private:
  inline void set_has_guide_step();
  inline void clear_has_guide_step();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guide_step_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PySaveGuideStepAck* default_instance_;
};
// -------------------------------------------------------------------

class PyBuyCheckPointChallengeCountReq : public ::google::protobuf::Message {
 public:
  PyBuyCheckPointChallengeCountReq();
  virtual ~PyBuyCheckPointChallengeCountReq();

  PyBuyCheckPointChallengeCountReq(const PyBuyCheckPointChallengeCountReq& from);

  inline PyBuyCheckPointChallengeCountReq& operator=(const PyBuyCheckPointChallengeCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyBuyCheckPointChallengeCountReq& default_instance();

  void Swap(PyBuyCheckPointChallengeCountReq* other);

  // implements Message ----------------------------------------------

  PyBuyCheckPointChallengeCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyBuyCheckPointChallengeCountReq& from);
  void MergeFrom(const PyBuyCheckPointChallengeCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chpater_kind = 1;
  inline bool has_chpater_kind() const;
  inline void clear_chpater_kind();
  static const int kChpaterKindFieldNumber = 1;
  inline ::google::protobuf::int32 chpater_kind() const;
  inline void set_chpater_kind(::google::protobuf::int32 value);

  // optional int32 chapter_id = 2;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 3;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 3;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyBuyCheckPointChallengeCountReq)
 private:
  inline void set_has_chpater_kind();
  inline void clear_has_chpater_kind();
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chpater_kind_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyBuyCheckPointChallengeCountReq* default_instance_;
};
// -------------------------------------------------------------------

class PyBuyCheckPointChallengeCountAck : public ::google::protobuf::Message {
 public:
  PyBuyCheckPointChallengeCountAck();
  virtual ~PyBuyCheckPointChallengeCountAck();

  PyBuyCheckPointChallengeCountAck(const PyBuyCheckPointChallengeCountAck& from);

  inline PyBuyCheckPointChallengeCountAck& operator=(const PyBuyCheckPointChallengeCountAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PyBuyCheckPointChallengeCountAck& default_instance();

  void Swap(PyBuyCheckPointChallengeCountAck* other);

  // implements Message ----------------------------------------------

  PyBuyCheckPointChallengeCountAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PyBuyCheckPointChallengeCountAck& from);
  void MergeFrom(const PyBuyCheckPointChallengeCountAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chpater_kind = 1;
  inline bool has_chpater_kind() const;
  inline void clear_chpater_kind();
  static const int kChpaterKindFieldNumber = 1;
  inline ::google::protobuf::int32 chpater_kind() const;
  inline void set_chpater_kind(::google::protobuf::int32 value);

  // optional int32 chapter_id = 2;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::int32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::int32 value);

  // optional int32 check_point_id = 3;
  inline bool has_check_point_id() const;
  inline void clear_check_point_id();
  static const int kCheckPointIdFieldNumber = 3;
  inline ::google::protobuf::int32 check_point_id() const;
  inline void set_check_point_id(::google::protobuf::int32 value);

  // optional int32 challenged_counts = 4;
  inline bool has_challenged_counts() const;
  inline void clear_challenged_counts();
  static const int kChallengedCountsFieldNumber = 4;
  inline ::google::protobuf::int32 challenged_counts() const;
  inline void set_challenged_counts(::google::protobuf::int32 value);

  // optional int32 buy_counts = 5;
  inline bool has_buy_counts() const;
  inline void clear_buy_counts();
  static const int kBuyCountsFieldNumber = 5;
  inline ::google::protobuf::int32 buy_counts() const;
  inline void set_buy_counts(::google::protobuf::int32 value);

  // optional int32 err_no = 6;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 6;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PyBuyCheckPointChallengeCountAck)
 private:
  inline void set_has_chpater_kind();
  inline void clear_has_chpater_kind();
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_check_point_id();
  inline void clear_has_check_point_id();
  inline void set_has_challenged_counts();
  inline void clear_has_challenged_counts();
  inline void set_has_buy_counts();
  inline void clear_has_buy_counts();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chpater_kind_;
  ::google::protobuf::int32 chapter_id_;
  ::google::protobuf::int32 check_point_id_;
  ::google::protobuf::int32 challenged_counts_;
  ::google::protobuf::int32 buy_counts_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_2eproto();

  void InitAsDefaultInstance();
  static PyBuyCheckPointChallengeCountAck* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientLoginGateReq

// required uint64 digit_account = 1;
inline bool ClientLoginGateReq::has_digit_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginGateReq::set_has_digit_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginGateReq::clear_has_digit_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginGateReq::clear_digit_account() {
  digit_account_ = GOOGLE_ULONGLONG(0);
  clear_has_digit_account();
}
inline ::google::protobuf::uint64 ClientLoginGateReq::digit_account() const {
  return digit_account_;
}
inline void ClientLoginGateReq::set_digit_account(::google::protobuf::uint64 value) {
  set_has_digit_account();
  digit_account_ = value;
}

// required string str_account = 2;
inline bool ClientLoginGateReq::has_str_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientLoginGateReq::set_has_str_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientLoginGateReq::clear_has_str_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientLoginGateReq::clear_str_account() {
  if (str_account_ != &::google::protobuf::internal::kEmptyString) {
    str_account_->clear();
  }
  clear_has_str_account();
}
inline const ::std::string& ClientLoginGateReq::str_account() const {
  return *str_account_;
}
inline void ClientLoginGateReq::set_str_account(const ::std::string& value) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(value);
}
inline void ClientLoginGateReq::set_str_account(const char* value) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(value);
}
inline void ClientLoginGateReq::set_str_account(const char* value, size_t size) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginGateReq::mutable_str_account() {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  return str_account_;
}
inline ::std::string* ClientLoginGateReq::release_str_account() {
  clear_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_account_;
    str_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginGateReq::set_allocated_str_account(::std::string* str_account) {
  if (str_account_ != &::google::protobuf::internal::kEmptyString) {
    delete str_account_;
  }
  if (str_account) {
    set_has_str_account();
    str_account_ = str_account;
  } else {
    clear_has_str_account();
    str_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string login_gate_key = 3;
inline bool ClientLoginGateReq::has_login_gate_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientLoginGateReq::set_has_login_gate_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientLoginGateReq::clear_has_login_gate_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientLoginGateReq::clear_login_gate_key() {
  if (login_gate_key_ != &::google::protobuf::internal::kEmptyString) {
    login_gate_key_->clear();
  }
  clear_has_login_gate_key();
}
inline const ::std::string& ClientLoginGateReq::login_gate_key() const {
  return *login_gate_key_;
}
inline void ClientLoginGateReq::set_login_gate_key(const ::std::string& value) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(value);
}
inline void ClientLoginGateReq::set_login_gate_key(const char* value) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(value);
}
inline void ClientLoginGateReq::set_login_gate_key(const char* value, size_t size) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginGateReq::mutable_login_gate_key() {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  return login_gate_key_;
}
inline ::std::string* ClientLoginGateReq::release_login_gate_key() {
  clear_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = login_gate_key_;
    login_gate_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginGateReq::set_allocated_login_gate_key(::std::string* login_gate_key) {
  if (login_gate_key_ != &::google::protobuf::internal::kEmptyString) {
    delete login_gate_key_;
  }
  if (login_gate_key) {
    set_has_login_gate_key();
    login_gate_key_ = login_gate_key;
  } else {
    clear_has_login_gate_key();
    login_gate_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string opt = 4;
inline bool ClientLoginGateReq::has_opt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientLoginGateReq::set_has_opt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientLoginGateReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientLoginGateReq::clear_opt() {
  if (opt_ != &::google::protobuf::internal::kEmptyString) {
    opt_->clear();
  }
  clear_has_opt();
}
inline const ::std::string& ClientLoginGateReq::opt() const {
  return *opt_;
}
inline void ClientLoginGateReq::set_opt(const ::std::string& value) {
  set_has_opt();
  if (opt_ == &::google::protobuf::internal::kEmptyString) {
    opt_ = new ::std::string;
  }
  opt_->assign(value);
}
inline void ClientLoginGateReq::set_opt(const char* value) {
  set_has_opt();
  if (opt_ == &::google::protobuf::internal::kEmptyString) {
    opt_ = new ::std::string;
  }
  opt_->assign(value);
}
inline void ClientLoginGateReq::set_opt(const char* value, size_t size) {
  set_has_opt();
  if (opt_ == &::google::protobuf::internal::kEmptyString) {
    opt_ = new ::std::string;
  }
  opt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginGateReq::mutable_opt() {
  set_has_opt();
  if (opt_ == &::google::protobuf::internal::kEmptyString) {
    opt_ = new ::std::string;
  }
  return opt_;
}
inline ::std::string* ClientLoginGateReq::release_opt() {
  clear_has_opt();
  if (opt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opt_;
    opt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginGateReq::set_allocated_opt(::std::string* opt) {
  if (opt_ != &::google::protobuf::internal::kEmptyString) {
    delete opt_;
  }
  if (opt) {
    set_has_opt();
    opt_ = opt;
  } else {
    clear_has_opt();
    opt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ClientLoginGateAck

// required int32 err_no = 1;
inline bool ClientLoginGateAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginGateAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginGateAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginGateAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ClientLoginGateAck::err_no() const {
  return err_no_;
}
inline void ClientLoginGateAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional int32 coding_id = 2;
inline bool ClientLoginGateAck::has_coding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientLoginGateAck::set_has_coding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientLoginGateAck::clear_has_coding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientLoginGateAck::clear_coding_id() {
  coding_id_ = 0;
  clear_has_coding_id();
}
inline ::google::protobuf::int32 ClientLoginGateAck::coding_id() const {
  return coding_id_;
}
inline void ClientLoginGateAck::set_coding_id(::google::protobuf::int32 value) {
  set_has_coding_id();
  coding_id_ = value;
}

// -------------------------------------------------------------------

// ClientLoginAgainGateReq

// required uint64 digit_account = 1;
inline bool ClientLoginAgainGateReq::has_digit_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginAgainGateReq::set_has_digit_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginAgainGateReq::clear_has_digit_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginAgainGateReq::clear_digit_account() {
  digit_account_ = GOOGLE_ULONGLONG(0);
  clear_has_digit_account();
}
inline ::google::protobuf::uint64 ClientLoginAgainGateReq::digit_account() const {
  return digit_account_;
}
inline void ClientLoginAgainGateReq::set_digit_account(::google::protobuf::uint64 value) {
  set_has_digit_account();
  digit_account_ = value;
}

// required string str_account = 2;
inline bool ClientLoginAgainGateReq::has_str_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientLoginAgainGateReq::set_has_str_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientLoginAgainGateReq::clear_has_str_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientLoginAgainGateReq::clear_str_account() {
  if (str_account_ != &::google::protobuf::internal::kEmptyString) {
    str_account_->clear();
  }
  clear_has_str_account();
}
inline const ::std::string& ClientLoginAgainGateReq::str_account() const {
  return *str_account_;
}
inline void ClientLoginAgainGateReq::set_str_account(const ::std::string& value) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(value);
}
inline void ClientLoginAgainGateReq::set_str_account(const char* value) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(value);
}
inline void ClientLoginAgainGateReq::set_str_account(const char* value, size_t size) {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  str_account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginAgainGateReq::mutable_str_account() {
  set_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    str_account_ = new ::std::string;
  }
  return str_account_;
}
inline ::std::string* ClientLoginAgainGateReq::release_str_account() {
  clear_has_str_account();
  if (str_account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_account_;
    str_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginAgainGateReq::set_allocated_str_account(::std::string* str_account) {
  if (str_account_ != &::google::protobuf::internal::kEmptyString) {
    delete str_account_;
  }
  if (str_account) {
    set_has_str_account();
    str_account_ = str_account;
  } else {
    clear_has_str_account();
    str_account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string login_gate_key = 3;
inline bool ClientLoginAgainGateReq::has_login_gate_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientLoginAgainGateReq::set_has_login_gate_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientLoginAgainGateReq::clear_has_login_gate_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientLoginAgainGateReq::clear_login_gate_key() {
  if (login_gate_key_ != &::google::protobuf::internal::kEmptyString) {
    login_gate_key_->clear();
  }
  clear_has_login_gate_key();
}
inline const ::std::string& ClientLoginAgainGateReq::login_gate_key() const {
  return *login_gate_key_;
}
inline void ClientLoginAgainGateReq::set_login_gate_key(const ::std::string& value) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(value);
}
inline void ClientLoginAgainGateReq::set_login_gate_key(const char* value) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(value);
}
inline void ClientLoginAgainGateReq::set_login_gate_key(const char* value, size_t size) {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  login_gate_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginAgainGateReq::mutable_login_gate_key() {
  set_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    login_gate_key_ = new ::std::string;
  }
  return login_gate_key_;
}
inline ::std::string* ClientLoginAgainGateReq::release_login_gate_key() {
  clear_has_login_gate_key();
  if (login_gate_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = login_gate_key_;
    login_gate_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginAgainGateReq::set_allocated_login_gate_key(::std::string* login_gate_key) {
  if (login_gate_key_ != &::google::protobuf::internal::kEmptyString) {
    delete login_gate_key_;
  }
  if (login_gate_key) {
    set_has_login_gate_key();
    login_gate_key_ = login_gate_key;
  } else {
    clear_has_login_gate_key();
    login_gate_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ClientLoginAgainGateAck

// required int32 err_no = 1;
inline bool ClientLoginAgainGateAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginAgainGateAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginAgainGateAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginAgainGateAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ClientLoginAgainGateAck::err_no() const {
  return err_no_;
}
inline void ClientLoginAgainGateAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional int32 coding_id = 2;
inline bool ClientLoginAgainGateAck::has_coding_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientLoginAgainGateAck::set_has_coding_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientLoginAgainGateAck::clear_has_coding_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientLoginAgainGateAck::clear_coding_id() {
  coding_id_ = 0;
  clear_has_coding_id();
}
inline ::google::protobuf::int32 ClientLoginAgainGateAck::coding_id() const {
  return coding_id_;
}
inline void ClientLoginAgainGateAck::set_coding_id(::google::protobuf::int32 value) {
  set_has_coding_id();
  coding_id_ = value;
}

// -------------------------------------------------------------------

// ClientLeaveGameReq

// required int32 leave_type = 3;
inline bool ClientLeaveGameReq::has_leave_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLeaveGameReq::set_has_leave_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLeaveGameReq::clear_has_leave_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLeaveGameReq::clear_leave_type() {
  leave_type_ = 0;
  clear_has_leave_type();
}
inline ::google::protobuf::int32 ClientLeaveGameReq::leave_type() const {
  return leave_type_;
}
inline void ClientLeaveGameReq::set_leave_type(::google::protobuf::int32 value) {
  set_has_leave_type();
  leave_type_ = value;
}

// -------------------------------------------------------------------

// ClientLeaveGameAck

// required int32 err_no = 1;
inline bool ClientLeaveGameAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLeaveGameAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLeaveGameAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLeaveGameAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ClientLeaveGameAck::err_no() const {
  return err_no_;
}
inline void ClientLeaveGameAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// SysErrorNtf

// required int32 err_no = 1;
inline bool SysErrorNtf::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SysErrorNtf::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SysErrorNtf::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SysErrorNtf::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SysErrorNtf::err_no() const {
  return err_no_;
}
inline void SysErrorNtf::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// KeepClientAlive

// -------------------------------------------------------------------

// KeepClientAliveAck

// -------------------------------------------------------------------

// TestReq

// optional double t_double = 1;
inline bool TestReq::has_t_double() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestReq::set_has_t_double() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestReq::clear_has_t_double() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestReq::clear_t_double() {
  t_double_ = 0;
  clear_has_t_double();
}
inline double TestReq::t_double() const {
  return t_double_;
}
inline void TestReq::set_t_double(double value) {
  set_has_t_double();
  t_double_ = value;
}

// optional float t_float = 2;
inline bool TestReq::has_t_float() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestReq::set_has_t_float() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestReq::clear_has_t_float() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestReq::clear_t_float() {
  t_float_ = 0;
  clear_has_t_float();
}
inline float TestReq::t_float() const {
  return t_float_;
}
inline void TestReq::set_t_float(float value) {
  set_has_t_float();
  t_float_ = value;
}

// optional int32 t_int32 = 3;
inline bool TestReq::has_t_int32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestReq::set_has_t_int32() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestReq::clear_has_t_int32() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestReq::clear_t_int32() {
  t_int32_ = 0;
  clear_has_t_int32();
}
inline ::google::protobuf::int32 TestReq::t_int32() const {
  return t_int32_;
}
inline void TestReq::set_t_int32(::google::protobuf::int32 value) {
  set_has_t_int32();
  t_int32_ = value;
}

// optional int64 t_int64 = 4;
inline bool TestReq::has_t_int64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestReq::set_has_t_int64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestReq::clear_has_t_int64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestReq::clear_t_int64() {
  t_int64_ = GOOGLE_LONGLONG(0);
  clear_has_t_int64();
}
inline ::google::protobuf::int64 TestReq::t_int64() const {
  return t_int64_;
}
inline void TestReq::set_t_int64(::google::protobuf::int64 value) {
  set_has_t_int64();
  t_int64_ = value;
}

// optional uint32 t_uint32 = 5;
inline bool TestReq::has_t_uint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TestReq::set_has_t_uint32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TestReq::clear_has_t_uint32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TestReq::clear_t_uint32() {
  t_uint32_ = 0u;
  clear_has_t_uint32();
}
inline ::google::protobuf::uint32 TestReq::t_uint32() const {
  return t_uint32_;
}
inline void TestReq::set_t_uint32(::google::protobuf::uint32 value) {
  set_has_t_uint32();
  t_uint32_ = value;
}

// optional uint64 t_uint64 = 6;
inline bool TestReq::has_t_uint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TestReq::set_has_t_uint64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TestReq::clear_has_t_uint64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TestReq::clear_t_uint64() {
  t_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_t_uint64();
}
inline ::google::protobuf::uint64 TestReq::t_uint64() const {
  return t_uint64_;
}
inline void TestReq::set_t_uint64(::google::protobuf::uint64 value) {
  set_has_t_uint64();
  t_uint64_ = value;
}

// optional sint32 t_sint32 = 7;
inline bool TestReq::has_t_sint32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TestReq::set_has_t_sint32() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TestReq::clear_has_t_sint32() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TestReq::clear_t_sint32() {
  t_sint32_ = 0;
  clear_has_t_sint32();
}
inline ::google::protobuf::int32 TestReq::t_sint32() const {
  return t_sint32_;
}
inline void TestReq::set_t_sint32(::google::protobuf::int32 value) {
  set_has_t_sint32();
  t_sint32_ = value;
}

// optional sint64 t_sint64 = 8;
inline bool TestReq::has_t_sint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TestReq::set_has_t_sint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TestReq::clear_has_t_sint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TestReq::clear_t_sint64() {
  t_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_t_sint64();
}
inline ::google::protobuf::int64 TestReq::t_sint64() const {
  return t_sint64_;
}
inline void TestReq::set_t_sint64(::google::protobuf::int64 value) {
  set_has_t_sint64();
  t_sint64_ = value;
}

// optional bool t_bool = 9;
inline bool TestReq::has_t_bool() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TestReq::set_has_t_bool() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TestReq::clear_has_t_bool() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TestReq::clear_t_bool() {
  t_bool_ = false;
  clear_has_t_bool();
}
inline bool TestReq::t_bool() const {
  return t_bool_;
}
inline void TestReq::set_t_bool(bool value) {
  set_has_t_bool();
  t_bool_ = value;
}

// optional string t_string = 10;
inline bool TestReq::has_t_string() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TestReq::set_has_t_string() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TestReq::clear_has_t_string() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TestReq::clear_t_string() {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    t_string_->clear();
  }
  clear_has_t_string();
}
inline const ::std::string& TestReq::t_string() const {
  return *t_string_;
}
inline void TestReq::set_t_string(const ::std::string& value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void TestReq::set_t_string(const char* value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void TestReq::set_t_string(const char* value, size_t size) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TestReq::mutable_t_string() {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  return t_string_;
}
inline ::std::string* TestReq::release_t_string() {
  clear_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_string_;
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TestReq::set_allocated_t_string(::std::string* t_string) {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    delete t_string_;
  }
  if (t_string) {
    set_has_t_string();
    t_string_ = t_string;
  } else {
    clear_has_t_string();
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes t_bytes = 11;
inline bool TestReq::has_t_bytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TestReq::set_has_t_bytes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TestReq::clear_has_t_bytes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TestReq::clear_t_bytes() {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    t_bytes_->clear();
  }
  clear_has_t_bytes();
}
inline const ::std::string& TestReq::t_bytes() const {
  return *t_bytes_;
}
inline void TestReq::set_t_bytes(const ::std::string& value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void TestReq::set_t_bytes(const char* value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void TestReq::set_t_bytes(const void* value, size_t size) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TestReq::mutable_t_bytes() {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  return t_bytes_;
}
inline ::std::string* TestReq::release_t_bytes() {
  clear_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_bytes_;
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TestReq::set_allocated_t_bytes(::std::string* t_bytes) {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete t_bytes_;
  }
  if (t_bytes) {
    set_has_t_bytes();
    t_bytes_ = t_bytes;
  } else {
    clear_has_t_bytes();
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TestAck

// optional double t_double = 1;
inline bool TestAck::has_t_double() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TestAck::set_has_t_double() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TestAck::clear_has_t_double() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TestAck::clear_t_double() {
  t_double_ = 0;
  clear_has_t_double();
}
inline double TestAck::t_double() const {
  return t_double_;
}
inline void TestAck::set_t_double(double value) {
  set_has_t_double();
  t_double_ = value;
}

// optional float t_float = 2;
inline bool TestAck::has_t_float() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TestAck::set_has_t_float() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TestAck::clear_has_t_float() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TestAck::clear_t_float() {
  t_float_ = 0;
  clear_has_t_float();
}
inline float TestAck::t_float() const {
  return t_float_;
}
inline void TestAck::set_t_float(float value) {
  set_has_t_float();
  t_float_ = value;
}

// optional int32 t_int32 = 3;
inline bool TestAck::has_t_int32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TestAck::set_has_t_int32() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TestAck::clear_has_t_int32() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TestAck::clear_t_int32() {
  t_int32_ = 0;
  clear_has_t_int32();
}
inline ::google::protobuf::int32 TestAck::t_int32() const {
  return t_int32_;
}
inline void TestAck::set_t_int32(::google::protobuf::int32 value) {
  set_has_t_int32();
  t_int32_ = value;
}

// optional int64 t_int64 = 4;
inline bool TestAck::has_t_int64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TestAck::set_has_t_int64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TestAck::clear_has_t_int64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TestAck::clear_t_int64() {
  t_int64_ = GOOGLE_LONGLONG(0);
  clear_has_t_int64();
}
inline ::google::protobuf::int64 TestAck::t_int64() const {
  return t_int64_;
}
inline void TestAck::set_t_int64(::google::protobuf::int64 value) {
  set_has_t_int64();
  t_int64_ = value;
}

// optional uint32 t_uint32 = 5;
inline bool TestAck::has_t_uint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TestAck::set_has_t_uint32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TestAck::clear_has_t_uint32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TestAck::clear_t_uint32() {
  t_uint32_ = 0u;
  clear_has_t_uint32();
}
inline ::google::protobuf::uint32 TestAck::t_uint32() const {
  return t_uint32_;
}
inline void TestAck::set_t_uint32(::google::protobuf::uint32 value) {
  set_has_t_uint32();
  t_uint32_ = value;
}

// optional uint64 t_uint64 = 6;
inline bool TestAck::has_t_uint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TestAck::set_has_t_uint64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TestAck::clear_has_t_uint64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TestAck::clear_t_uint64() {
  t_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_t_uint64();
}
inline ::google::protobuf::uint64 TestAck::t_uint64() const {
  return t_uint64_;
}
inline void TestAck::set_t_uint64(::google::protobuf::uint64 value) {
  set_has_t_uint64();
  t_uint64_ = value;
}

// optional sint32 t_sint32 = 7;
inline bool TestAck::has_t_sint32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TestAck::set_has_t_sint32() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TestAck::clear_has_t_sint32() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TestAck::clear_t_sint32() {
  t_sint32_ = 0;
  clear_has_t_sint32();
}
inline ::google::protobuf::int32 TestAck::t_sint32() const {
  return t_sint32_;
}
inline void TestAck::set_t_sint32(::google::protobuf::int32 value) {
  set_has_t_sint32();
  t_sint32_ = value;
}

// optional sint64 t_sint64 = 8;
inline bool TestAck::has_t_sint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TestAck::set_has_t_sint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TestAck::clear_has_t_sint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TestAck::clear_t_sint64() {
  t_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_t_sint64();
}
inline ::google::protobuf::int64 TestAck::t_sint64() const {
  return t_sint64_;
}
inline void TestAck::set_t_sint64(::google::protobuf::int64 value) {
  set_has_t_sint64();
  t_sint64_ = value;
}

// optional bool t_bool = 9;
inline bool TestAck::has_t_bool() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TestAck::set_has_t_bool() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TestAck::clear_has_t_bool() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TestAck::clear_t_bool() {
  t_bool_ = false;
  clear_has_t_bool();
}
inline bool TestAck::t_bool() const {
  return t_bool_;
}
inline void TestAck::set_t_bool(bool value) {
  set_has_t_bool();
  t_bool_ = value;
}

// optional string t_string = 10;
inline bool TestAck::has_t_string() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TestAck::set_has_t_string() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TestAck::clear_has_t_string() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TestAck::clear_t_string() {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    t_string_->clear();
  }
  clear_has_t_string();
}
inline const ::std::string& TestAck::t_string() const {
  return *t_string_;
}
inline void TestAck::set_t_string(const ::std::string& value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void TestAck::set_t_string(const char* value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void TestAck::set_t_string(const char* value, size_t size) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TestAck::mutable_t_string() {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  return t_string_;
}
inline ::std::string* TestAck::release_t_string() {
  clear_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_string_;
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TestAck::set_allocated_t_string(::std::string* t_string) {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    delete t_string_;
  }
  if (t_string) {
    set_has_t_string();
    t_string_ = t_string;
  } else {
    clear_has_t_string();
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes t_bytes = 11;
inline bool TestAck::has_t_bytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TestAck::set_has_t_bytes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TestAck::clear_has_t_bytes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TestAck::clear_t_bytes() {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    t_bytes_->clear();
  }
  clear_has_t_bytes();
}
inline const ::std::string& TestAck::t_bytes() const {
  return *t_bytes_;
}
inline void TestAck::set_t_bytes(const ::std::string& value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void TestAck::set_t_bytes(const char* value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void TestAck::set_t_bytes(const void* value, size_t size) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TestAck::mutable_t_bytes() {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  return t_bytes_;
}
inline ::std::string* TestAck::release_t_bytes() {
  clear_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_bytes_;
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TestAck::set_allocated_t_bytes(::std::string* t_bytes) {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete t_bytes_;
  }
  if (t_bytes) {
    set_has_t_bytes();
    t_bytes_ = t_bytes;
  } else {
    clear_has_t_bytes();
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PlayerBaseData

// optional string playername = 1;
inline bool PlayerBaseData::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBaseData::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBaseData::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBaseData::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PlayerBaseData::playername() const {
  return *playername_;
}
inline void PlayerBaseData::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PlayerBaseData::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PlayerBaseData::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerBaseData::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PlayerBaseData::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerBaseData::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 vip_level = 2;
inline bool PlayerBaseData::has_vip_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBaseData::set_has_vip_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBaseData::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBaseData::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 PlayerBaseData::vip_level() const {
  return vip_level_;
}
inline void PlayerBaseData::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int32 area_id = 3;
inline bool PlayerBaseData::has_area_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBaseData::set_has_area_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBaseData::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBaseData::clear_area_id() {
  area_id_ = 0;
  clear_has_area_id();
}
inline ::google::protobuf::int32 PlayerBaseData::area_id() const {
  return area_id_;
}
inline void PlayerBaseData::set_area_id(::google::protobuf::int32 value) {
  set_has_area_id();
  area_id_ = value;
}

// optional uint32 head_pic_id = 4;
inline bool PlayerBaseData::has_head_pic_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerBaseData::set_has_head_pic_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerBaseData::clear_has_head_pic_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerBaseData::clear_head_pic_id() {
  head_pic_id_ = 0u;
  clear_has_head_pic_id();
}
inline ::google::protobuf::uint32 PlayerBaseData::head_pic_id() const {
  return head_pic_id_;
}
inline void PlayerBaseData::set_head_pic_id(::google::protobuf::uint32 value) {
  set_has_head_pic_id();
  head_pic_id_ = value;
}

// optional bool sex = 5;
inline bool PlayerBaseData::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerBaseData::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerBaseData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerBaseData::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool PlayerBaseData::sex() const {
  return sex_;
}
inline void PlayerBaseData::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// optional uint32 exp = 6;
inline bool PlayerBaseData::has_exp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerBaseData::set_has_exp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerBaseData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerBaseData::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 PlayerBaseData::exp() const {
  return exp_;
}
inline void PlayerBaseData::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 gold = 7;
inline bool PlayerBaseData::has_gold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerBaseData::set_has_gold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerBaseData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerBaseData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 PlayerBaseData::gold() const {
  return gold_;
}
inline void PlayerBaseData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 level = 8;
inline bool PlayerBaseData::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerBaseData::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerBaseData::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerBaseData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PlayerBaseData::level() const {
  return level_;
}
inline void PlayerBaseData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 action_count = 9;
inline bool PlayerBaseData::has_action_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerBaseData::set_has_action_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerBaseData::clear_has_action_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerBaseData::clear_action_count() {
  action_count_ = 0u;
  clear_has_action_count();
}
inline ::google::protobuf::uint32 PlayerBaseData::action_count() const {
  return action_count_;
}
inline void PlayerBaseData::set_action_count(::google::protobuf::uint32 value) {
  set_has_action_count();
  action_count_ = value;
}

// optional uint32 spirit = 10;
inline bool PlayerBaseData::has_spirit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerBaseData::set_has_spirit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerBaseData::clear_has_spirit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerBaseData::clear_spirit() {
  spirit_ = 0u;
  clear_has_spirit();
}
inline ::google::protobuf::uint32 PlayerBaseData::spirit() const {
  return spirit_;
}
inline void PlayerBaseData::set_spirit(::google::protobuf::uint32 value) {
  set_has_spirit();
  spirit_ = value;
}

// optional uint32 hp = 11;
inline bool PlayerBaseData::has_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerBaseData::set_has_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerBaseData::clear_has_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerBaseData::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 PlayerBaseData::hp() const {
  return hp_;
}
inline void PlayerBaseData::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 mp = 12;
inline bool PlayerBaseData::has_mp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerBaseData::set_has_mp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerBaseData::clear_has_mp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerBaseData::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 PlayerBaseData::mp() const {
  return mp_;
}
inline void PlayerBaseData::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
}

// optional uint32 yuan_bao = 13;
inline bool PlayerBaseData::has_yuan_bao() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerBaseData::set_has_yuan_bao() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerBaseData::clear_has_yuan_bao() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerBaseData::clear_yuan_bao() {
  yuan_bao_ = 0u;
  clear_has_yuan_bao();
}
inline ::google::protobuf::uint32 PlayerBaseData::yuan_bao() const {
  return yuan_bao_;
}
inline void PlayerBaseData::set_yuan_bao(::google::protobuf::uint32 value) {
  set_has_yuan_bao();
  yuan_bao_ = value;
}

// optional int32 gmlevel = 14;
inline bool PlayerBaseData::has_gmlevel() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerBaseData::set_has_gmlevel() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerBaseData::clear_has_gmlevel() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerBaseData::clear_gmlevel() {
  gmlevel_ = 0;
  clear_has_gmlevel();
}
inline ::google::protobuf::int32 PlayerBaseData::gmlevel() const {
  return gmlevel_;
}
inline void PlayerBaseData::set_gmlevel(::google::protobuf::int32 value) {
  set_has_gmlevel();
  gmlevel_ = value;
}

// optional uint32 cur_queue_id = 15;
inline bool PlayerBaseData::has_cur_queue_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PlayerBaseData::set_has_cur_queue_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PlayerBaseData::clear_has_cur_queue_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PlayerBaseData::clear_cur_queue_id() {
  cur_queue_id_ = 0u;
  clear_has_cur_queue_id();
}
inline ::google::protobuf::uint32 PlayerBaseData::cur_queue_id() const {
  return cur_queue_id_;
}
inline void PlayerBaseData::set_cur_queue_id(::google::protobuf::uint32 value) {
  set_has_cur_queue_id();
  cur_queue_id_ = value;
}

// optional int32 friend_ship = 16;
inline bool PlayerBaseData::has_friend_ship() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PlayerBaseData::set_has_friend_ship() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PlayerBaseData::clear_has_friend_ship() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PlayerBaseData::clear_friend_ship() {
  friend_ship_ = 0;
  clear_has_friend_ship();
}
inline ::google::protobuf::int32 PlayerBaseData::friend_ship() const {
  return friend_ship_;
}
inline void PlayerBaseData::set_friend_ship(::google::protobuf::int32 value) {
  set_has_friend_ship();
  friend_ship_ = value;
}

// optional bool not_ask_friend = 17;
inline bool PlayerBaseData::has_not_ask_friend() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PlayerBaseData::set_has_not_ask_friend() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PlayerBaseData::clear_has_not_ask_friend() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PlayerBaseData::clear_not_ask_friend() {
  not_ask_friend_ = false;
  clear_has_not_ask_friend();
}
inline bool PlayerBaseData::not_ask_friend() const {
  return not_ask_friend_;
}
inline void PlayerBaseData::set_not_ask_friend(bool value) {
  set_has_not_ask_friend();
  not_ask_friend_ = value;
}

// optional bool today_first_login = 18;
inline bool PlayerBaseData::has_today_first_login() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PlayerBaseData::set_has_today_first_login() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PlayerBaseData::clear_has_today_first_login() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PlayerBaseData::clear_today_first_login() {
  today_first_login_ = false;
  clear_has_today_first_login();
}
inline bool PlayerBaseData::today_first_login() const {
  return today_first_login_;
}
inline void PlayerBaseData::set_today_first_login(bool value) {
  set_has_today_first_login();
  today_first_login_ = value;
}

// -------------------------------------------------------------------

// MsgNodeText

// optional string text = 1;
inline bool MsgNodeText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNodeText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNodeText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNodeText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& MsgNodeText::text() const {
  return *text_;
}
inline void MsgNodeText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void MsgNodeText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void MsgNodeText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNodeText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* MsgNodeText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgNodeText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UniqueID

// optional uint64 id = 1;
inline bool UniqueID::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniqueID::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniqueID::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniqueID::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 UniqueID::id() const {
  return id_;
}
inline void UniqueID::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Priority

// optional uint32 pri = 1;
inline bool Priority::has_pri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Priority::set_has_pri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Priority::clear_has_pri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Priority::clear_pri() {
  pri_ = 0u;
  clear_has_pri();
}
inline ::google::protobuf::uint32 Priority::pri() const {
  return pri_;
}
inline void Priority::set_pri(::google::protobuf::uint32 value) {
  set_has_pri();
  pri_ = value;
}

// -------------------------------------------------------------------

// RepeatCount

// optional uint32 count = 1;
inline bool RepeatCount::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RepeatCount::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RepeatCount::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RepeatCount::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RepeatCount::count() const {
  return count_;
}
inline void RepeatCount::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// MsgNodePlayerIDName

// optional uint64 id = 1;
inline bool MsgNodePlayerIDName::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgNodePlayerIDName::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgNodePlayerIDName::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgNodePlayerIDName::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MsgNodePlayerIDName::id() const {
  return id_;
}
inline void MsgNodePlayerIDName::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool MsgNodePlayerIDName::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgNodePlayerIDName::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgNodePlayerIDName::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgNodePlayerIDName::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MsgNodePlayerIDName::name() const {
  return *name_;
}
inline void MsgNodePlayerIDName::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNodePlayerIDName::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgNodePlayerIDName::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgNodePlayerIDName::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MsgNodePlayerIDName::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MsgNodePlayerIDName::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MessageRepeateNode

// repeated .protoc.gameproto.MessageNode nodes = 1;
inline int MessageRepeateNode::nodes_size() const {
  return nodes_.size();
}
inline void MessageRepeateNode::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& MessageRepeateNode::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* MessageRepeateNode::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* MessageRepeateNode::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
MessageRepeateNode::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
MessageRepeateNode::mutable_nodes() {
  return &nodes_;
}

// -------------------------------------------------------------------

// MessageNode

// optional .protoc.gameproto.CHAT_MSG_NODE_TYPE node_type = 1;
inline bool MessageNode::has_node_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageNode::set_has_node_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageNode::clear_has_node_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageNode::clear_node_type() {
  node_type_ = 0;
  clear_has_node_type();
}
inline ::protoc::gameproto::CHAT_MSG_NODE_TYPE MessageNode::node_type() const {
  return static_cast< ::protoc::gameproto::CHAT_MSG_NODE_TYPE >(node_type_);
}
inline void MessageNode::set_node_type(::protoc::gameproto::CHAT_MSG_NODE_TYPE value) {
  assert(::protoc::gameproto::CHAT_MSG_NODE_TYPE_IsValid(value));
  set_has_node_type();
  node_type_ = value;
}

// optional bytes data = 2;
inline bool MessageNode::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageNode::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageNode::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageNode::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& MessageNode::data() const {
  return *data_;
}
inline void MessageNode::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MessageNode::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void MessageNode::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MessageNode::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* MessageNode::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MessageNode::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ChatRpt

// optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
inline bool ChatRpt::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpt::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpt::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpt::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::protoc::gameproto::CHAT_MSG_TYPE ChatRpt::msg_type() const {
  return static_cast< ::protoc::gameproto::CHAT_MSG_TYPE >(msg_type_);
}
inline void ChatRpt::set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value) {
  assert(::protoc::gameproto::CHAT_MSG_TYPE_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// optional string msg = 2;
inline bool ChatRpt::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRpt::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRpt::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRpt::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& ChatRpt::msg() const {
  return *msg_;
}
inline void ChatRpt::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void ChatRpt::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void ChatRpt::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChatRpt::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* ChatRpt::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChatRpt::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 to_playerid = 3;
inline bool ChatRpt::has_to_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatRpt::set_has_to_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatRpt::clear_has_to_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatRpt::clear_to_playerid() {
  to_playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_to_playerid();
}
inline ::google::protobuf::uint64 ChatRpt::to_playerid() const {
  return to_playerid_;
}
inline void ChatRpt::set_to_playerid(::google::protobuf::uint64 value) {
  set_has_to_playerid();
  to_playerid_ = value;
}

// optional string to_playername = 4;
inline bool ChatRpt::has_to_playername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatRpt::set_has_to_playername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatRpt::clear_has_to_playername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatRpt::clear_to_playername() {
  if (to_playername_ != &::google::protobuf::internal::kEmptyString) {
    to_playername_->clear();
  }
  clear_has_to_playername();
}
inline const ::std::string& ChatRpt::to_playername() const {
  return *to_playername_;
}
inline void ChatRpt::set_to_playername(const ::std::string& value) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(value);
}
inline void ChatRpt::set_to_playername(const char* value) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(value);
}
inline void ChatRpt::set_to_playername(const char* value, size_t size) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChatRpt::mutable_to_playername() {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  return to_playername_;
}
inline ::std::string* ChatRpt::release_to_playername() {
  clear_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_playername_;
    to_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChatRpt::set_allocated_to_playername(::std::string* to_playername) {
  if (to_playername_ != &::google::protobuf::internal::kEmptyString) {
    delete to_playername_;
  }
  if (to_playername) {
    set_has_to_playername();
    to_playername_ = to_playername;
  } else {
    clear_has_to_playername();
    to_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.MessageNode nodes = 5;
inline int ChatRpt::nodes_size() const {
  return nodes_.size();
}
inline void ChatRpt::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& ChatRpt::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* ChatRpt::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* ChatRpt::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
ChatRpt::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
ChatRpt::mutable_nodes() {
  return &nodes_;
}

// -------------------------------------------------------------------

// ChatNtf

// optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
inline bool ChatNtf::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatNtf::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatNtf::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatNtf::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::protoc::gameproto::CHAT_MSG_TYPE ChatNtf::msg_type() const {
  return static_cast< ::protoc::gameproto::CHAT_MSG_TYPE >(msg_type_);
}
inline void ChatNtf::set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value) {
  assert(::protoc::gameproto::CHAT_MSG_TYPE_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// repeated .protoc.gameproto.MessageNode nodes = 2;
inline int ChatNtf::nodes_size() const {
  return nodes_.size();
}
inline void ChatNtf::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& ChatNtf::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* ChatNtf::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* ChatNtf::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
ChatNtf::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
ChatNtf::mutable_nodes() {
  return &nodes_;
}

// optional int32 err_no = 3;
inline bool ChatNtf::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatNtf::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatNtf::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatNtf::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ChatNtf::err_no() const {
  return err_no_;
}
inline void ChatNtf::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// GSChatNtf

// optional .protoc.gameproto.CHAT_MSG_TYPE msg_type = 1;
inline bool GSChatNtf::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSChatNtf::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSChatNtf::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSChatNtf::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::protoc::gameproto::CHAT_MSG_TYPE GSChatNtf::msg_type() const {
  return static_cast< ::protoc::gameproto::CHAT_MSG_TYPE >(msg_type_);
}
inline void GSChatNtf::set_msg_type(::protoc::gameproto::CHAT_MSG_TYPE value) {
  assert(::protoc::gameproto::CHAT_MSG_TYPE_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// optional uint64 playerid = 2;
inline bool GSChatNtf::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSChatNtf::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSChatNtf::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSChatNtf::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 GSChatNtf::playerid() const {
  return playerid_;
}
inline void GSChatNtf::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional uint64 to_playerid = 3;
inline bool GSChatNtf::has_to_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GSChatNtf::set_has_to_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GSChatNtf::clear_has_to_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GSChatNtf::clear_to_playerid() {
  to_playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_to_playerid();
}
inline ::google::protobuf::uint64 GSChatNtf::to_playerid() const {
  return to_playerid_;
}
inline void GSChatNtf::set_to_playerid(::google::protobuf::uint64 value) {
  set_has_to_playerid();
  to_playerid_ = value;
}

// optional string to_playername = 4;
inline bool GSChatNtf::has_to_playername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GSChatNtf::set_has_to_playername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GSChatNtf::clear_has_to_playername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GSChatNtf::clear_to_playername() {
  if (to_playername_ != &::google::protobuf::internal::kEmptyString) {
    to_playername_->clear();
  }
  clear_has_to_playername();
}
inline const ::std::string& GSChatNtf::to_playername() const {
  return *to_playername_;
}
inline void GSChatNtf::set_to_playername(const ::std::string& value) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(value);
}
inline void GSChatNtf::set_to_playername(const char* value) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(value);
}
inline void GSChatNtf::set_to_playername(const char* value, size_t size) {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  to_playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GSChatNtf::mutable_to_playername() {
  set_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    to_playername_ = new ::std::string;
  }
  return to_playername_;
}
inline ::std::string* GSChatNtf::release_to_playername() {
  clear_has_to_playername();
  if (to_playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_playername_;
    to_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GSChatNtf::set_allocated_to_playername(::std::string* to_playername) {
  if (to_playername_ != &::google::protobuf::internal::kEmptyString) {
    delete to_playername_;
  }
  if (to_playername) {
    set_has_to_playername();
    to_playername_ = to_playername;
  } else {
    clear_has_to_playername();
    to_playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.MessageNode nodes = 5;
inline int GSChatNtf::nodes_size() const {
  return nodes_.size();
}
inline void GSChatNtf::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& GSChatNtf::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* GSChatNtf::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* GSChatNtf::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
GSChatNtf::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
GSChatNtf::mutable_nodes() {
  return &nodes_;
}

// -------------------------------------------------------------------

// GSSystemMessageNtf

// optional .protoc.gameproto.SYSTEM_MSG_TYPE msg_type = 1 [default = E_NORMALL_MSG];
inline bool GSSystemMessageNtf::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GSSystemMessageNtf::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GSSystemMessageNtf::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GSSystemMessageNtf::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::protoc::gameproto::SYSTEM_MSG_TYPE GSSystemMessageNtf::msg_type() const {
  return static_cast< ::protoc::gameproto::SYSTEM_MSG_TYPE >(msg_type_);
}
inline void GSSystemMessageNtf::set_msg_type(::protoc::gameproto::SYSTEM_MSG_TYPE value) {
  assert(::protoc::gameproto::SYSTEM_MSG_TYPE_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// optional string msg = 2;
inline bool GSSystemMessageNtf::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GSSystemMessageNtf::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GSSystemMessageNtf::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GSSystemMessageNtf::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& GSSystemMessageNtf::msg() const {
  return *msg_;
}
inline void GSSystemMessageNtf::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void GSSystemMessageNtf::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void GSSystemMessageNtf::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GSSystemMessageNtf::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* GSSystemMessageNtf::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GSSystemMessageNtf::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.MessageNode nodes = 3;
inline int GSSystemMessageNtf::nodes_size() const {
  return nodes_.size();
}
inline void GSSystemMessageNtf::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& GSSystemMessageNtf::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* GSSystemMessageNtf::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* GSSystemMessageNtf::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
GSSystemMessageNtf::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
GSSystemMessageNtf::mutable_nodes() {
  return &nodes_;
}

// -------------------------------------------------------------------

// SystemMessage

// optional .protoc.gameproto.SYSTEM_MSG_TYPE msg_type = 1 [default = E_NORMALL_MSG];
inline bool SystemMessage::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemMessage::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemMessage::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemMessage::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::protoc::gameproto::SYSTEM_MSG_TYPE SystemMessage::msg_type() const {
  return static_cast< ::protoc::gameproto::SYSTEM_MSG_TYPE >(msg_type_);
}
inline void SystemMessage::set_msg_type(::protoc::gameproto::SYSTEM_MSG_TYPE value) {
  assert(::protoc::gameproto::SYSTEM_MSG_TYPE_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
}

// optional string msg = 2;
inline bool SystemMessage::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemMessage::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemMessage::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemMessage::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& SystemMessage::msg() const {
  return *msg_;
}
inline void SystemMessage::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SystemMessage::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void SystemMessage::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemMessage::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* SystemMessage::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemMessage::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.MessageNode nodes = 3;
inline int SystemMessage::nodes_size() const {
  return nodes_.size();
}
inline void SystemMessage::clear_nodes() {
  nodes_.Clear();
}
inline const ::protoc::gameproto::MessageNode& SystemMessage::nodes(int index) const {
  return nodes_.Get(index);
}
inline ::protoc::gameproto::MessageNode* SystemMessage::mutable_nodes(int index) {
  return nodes_.Mutable(index);
}
inline ::protoc::gameproto::MessageNode* SystemMessage::add_nodes() {
  return nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >&
SystemMessage::nodes() const {
  return nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MessageNode >*
SystemMessage::mutable_nodes() {
  return &nodes_;
}

// optional bool is_my_msg = 4;
inline bool SystemMessage::has_is_my_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemMessage::set_has_is_my_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemMessage::clear_has_is_my_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemMessage::clear_is_my_msg() {
  is_my_msg_ = false;
  clear_has_is_my_msg();
}
inline bool SystemMessage::is_my_msg() const {
  return is_my_msg_;
}
inline void SystemMessage::set_is_my_msg(bool value) {
  set_has_is_my_msg();
  is_my_msg_ = value;
}

// -------------------------------------------------------------------

// GMExecuteResult

// optional int32 err_no = 1;
inline bool GMExecuteResult::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMExecuteResult::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMExecuteResult::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMExecuteResult::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GMExecuteResult::err_no() const {
  return err_no_;
}
inline void GMExecuteResult::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional string msg = 2;
inline bool GMExecuteResult::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GMExecuteResult::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GMExecuteResult::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GMExecuteResult::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& GMExecuteResult::msg() const {
  return *msg_;
}
inline void GMExecuteResult::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void GMExecuteResult::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void GMExecuteResult::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GMExecuteResult::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* GMExecuteResult::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GMExecuteResult::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TeXiaoItem

// optional .protoc.gameproto.TeXiaoItem.ITEM_TYPE itemtype = 1;
inline bool TeXiaoItem::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeXiaoItem::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeXiaoItem::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeXiaoItem::clear_itemtype() {
  itemtype_ = 1;
  clear_has_itemtype();
}
inline ::protoc::gameproto::TeXiaoItem_ITEM_TYPE TeXiaoItem::itemtype() const {
  return static_cast< ::protoc::gameproto::TeXiaoItem_ITEM_TYPE >(itemtype_);
}
inline void TeXiaoItem::set_itemtype(::protoc::gameproto::TeXiaoItem_ITEM_TYPE value) {
  assert(::protoc::gameproto::TeXiaoItem_ITEM_TYPE_IsValid(value));
  set_has_itemtype();
  itemtype_ = value;
}

// optional int32 id = 2;
inline bool TeXiaoItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeXiaoItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeXiaoItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeXiaoItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TeXiaoItem::id() const {
  return id_;
}
inline void TeXiaoItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 number = 3;
inline bool TeXiaoItem::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeXiaoItem::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeXiaoItem::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeXiaoItem::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 TeXiaoItem::number() const {
  return number_;
}
inline void TeXiaoItem::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// optional int32 level = 4;
inline bool TeXiaoItem::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeXiaoItem::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeXiaoItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeXiaoItem::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 TeXiaoItem::level() const {
  return level_;
}
inline void TeXiaoItem::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// TeXiao

// optional .protoc.gameproto.TEXIAO_TYPE type = 1;
inline bool TeXiao::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeXiao::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeXiao::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeXiao::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::TEXIAO_TYPE TeXiao::type() const {
  return static_cast< ::protoc::gameproto::TEXIAO_TYPE >(type_);
}
inline void TeXiao::set_type(::protoc::gameproto::TEXIAO_TYPE value) {
  assert(::protoc::gameproto::TEXIAO_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .protoc.gameproto.TeXiaoItem item = 2;
inline int TeXiao::item_size() const {
  return item_.size();
}
inline void TeXiao::clear_item() {
  item_.Clear();
}
inline const ::protoc::gameproto::TeXiaoItem& TeXiao::item(int index) const {
  return item_.Get(index);
}
inline ::protoc::gameproto::TeXiaoItem* TeXiao::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::protoc::gameproto::TeXiaoItem* TeXiao::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
TeXiao::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
TeXiao::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// TeXiaoTypeNtf

// optional .protoc.gameproto.TeXiao texiao = 1;
inline bool TeXiaoTypeNtf::has_texiao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeXiaoTypeNtf::set_has_texiao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeXiaoTypeNtf::clear_has_texiao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeXiaoTypeNtf::clear_texiao() {
  if (texiao_ != NULL) texiao_->::protoc::gameproto::TeXiao::Clear();
  clear_has_texiao();
}
inline const ::protoc::gameproto::TeXiao& TeXiaoTypeNtf::texiao() const {
  return texiao_ != NULL ? *texiao_ : *default_instance_->texiao_;
}
inline ::protoc::gameproto::TeXiao* TeXiaoTypeNtf::mutable_texiao() {
  set_has_texiao();
  if (texiao_ == NULL) texiao_ = new ::protoc::gameproto::TeXiao;
  return texiao_;
}
inline ::protoc::gameproto::TeXiao* TeXiaoTypeNtf::release_texiao() {
  clear_has_texiao();
  ::protoc::gameproto::TeXiao* temp = texiao_;
  texiao_ = NULL;
  return temp;
}
inline void TeXiaoTypeNtf::set_allocated_texiao(::protoc::gameproto::TeXiao* texiao) {
  delete texiao_;
  texiao_ = texiao;
  if (texiao) {
    set_has_texiao();
  } else {
    clear_has_texiao();
  }
}

// -------------------------------------------------------------------

// GetKeyAwardReq

// optional string key = 1;
inline bool GetKeyAwardReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetKeyAwardReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetKeyAwardReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetKeyAwardReq::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& GetKeyAwardReq::key() const {
  return *key_;
}
inline void GetKeyAwardReq::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void GetKeyAwardReq::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void GetKeyAwardReq::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetKeyAwardReq::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* GetKeyAwardReq::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetKeyAwardReq::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetKeyAwardAck

// optional int32 err_no = 1;
inline bool GetKeyAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetKeyAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetKeyAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetKeyAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetKeyAwardAck::err_no() const {
  return err_no_;
}
inline void GetKeyAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// NeedCreatePlayerName

// -------------------------------------------------------------------

// CreatePlayerNameReq

// required string newname = 1;
inline bool CreatePlayerNameReq::has_newname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePlayerNameReq::set_has_newname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePlayerNameReq::clear_has_newname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePlayerNameReq::clear_newname() {
  if (newname_ != &::google::protobuf::internal::kEmptyString) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& CreatePlayerNameReq::newname() const {
  return *newname_;
}
inline void CreatePlayerNameReq::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void CreatePlayerNameReq::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
}
inline void CreatePlayerNameReq::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreatePlayerNameReq::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    newname_ = new ::std::string;
  }
  return newname_;
}
inline ::std::string* CreatePlayerNameReq::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreatePlayerNameReq::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::kEmptyString) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 head_pic_id = 2;
inline bool CreatePlayerNameReq::has_head_pic_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatePlayerNameReq::set_has_head_pic_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatePlayerNameReq::clear_has_head_pic_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatePlayerNameReq::clear_head_pic_id() {
  head_pic_id_ = 0u;
  clear_has_head_pic_id();
}
inline ::google::protobuf::uint32 CreatePlayerNameReq::head_pic_id() const {
  return head_pic_id_;
}
inline void CreatePlayerNameReq::set_head_pic_id(::google::protobuf::uint32 value) {
  set_has_head_pic_id();
  head_pic_id_ = value;
}

// optional bool sex = 4;
inline bool CreatePlayerNameReq::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreatePlayerNameReq::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreatePlayerNameReq::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreatePlayerNameReq::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool CreatePlayerNameReq::sex() const {
  return sex_;
}
inline void CreatePlayerNameReq::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// CreatePlayerNameAck

// required int32 err_no = 1;
inline bool CreatePlayerNameAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePlayerNameAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePlayerNameAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePlayerNameAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 CreatePlayerNameAck::err_no() const {
  return err_no_;
}
inline void CreatePlayerNameAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// ShangChengGoods

// optional uint32 id = 1;
inline bool ShangChengGoods::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShangChengGoods::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShangChengGoods::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShangChengGoods::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShangChengGoods::id() const {
  return id_;
}
inline void ShangChengGoods::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 kind = 2;
inline bool ShangChengGoods::has_kind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShangChengGoods::set_has_kind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShangChengGoods::clear_has_kind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShangChengGoods::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ShangChengGoods::kind() const {
  return kind_;
}
inline void ShangChengGoods::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// optional uint32 price = 3;
inline bool ShangChengGoods::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShangChengGoods::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShangChengGoods::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShangChengGoods::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 ShangChengGoods::price() const {
  return price_;
}
inline void ShangChengGoods::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 price_1 = 4;
inline bool ShangChengGoods::has_price_1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShangChengGoods::set_has_price_1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShangChengGoods::clear_has_price_1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShangChengGoods::clear_price_1() {
  price_1_ = 0u;
  clear_has_price_1();
}
inline ::google::protobuf::uint32 ShangChengGoods::price_1() const {
  return price_1_;
}
inline void ShangChengGoods::set_price_1(::google::protobuf::uint32 value) {
  set_has_price_1();
  price_1_ = value;
}

// optional int64 end_time = 5;
inline bool ShangChengGoods::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShangChengGoods::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShangChengGoods::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShangChengGoods::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 ShangChengGoods::end_time() const {
  return end_time_;
}
inline void ShangChengGoods::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 limit_number = 6;
inline bool ShangChengGoods::has_limit_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShangChengGoods::set_has_limit_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShangChengGoods::clear_has_limit_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShangChengGoods::clear_limit_number() {
  limit_number_ = 0;
  clear_has_limit_number();
}
inline ::google::protobuf::int32 ShangChengGoods::limit_number() const {
  return limit_number_;
}
inline void ShangChengGoods::set_limit_number(::google::protobuf::int32 value) {
  set_has_limit_number();
  limit_number_ = value;
}

// optional int32 sell_type = 7;
inline bool ShangChengGoods::has_sell_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShangChengGoods::set_has_sell_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShangChengGoods::clear_has_sell_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShangChengGoods::clear_sell_type() {
  sell_type_ = 0;
  clear_has_sell_type();
}
inline ::google::protobuf::int32 ShangChengGoods::sell_type() const {
  return sell_type_;
}
inline void ShangChengGoods::set_sell_type(::google::protobuf::int32 value) {
  set_has_sell_type();
  sell_type_ = value;
}

// optional int32 percent = 8;
inline bool ShangChengGoods::has_percent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShangChengGoods::set_has_percent() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShangChengGoods::clear_has_percent() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShangChengGoods::clear_percent() {
  percent_ = 0;
  clear_has_percent();
}
inline ::google::protobuf::int32 ShangChengGoods::percent() const {
  return percent_;
}
inline void ShangChengGoods::set_percent(::google::protobuf::int32 value) {
  set_has_percent();
  percent_ = value;
}

// -------------------------------------------------------------------

// LabelShangChengGoods

// optional string label_name = 1;
inline bool LabelShangChengGoods::has_label_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LabelShangChengGoods::set_has_label_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LabelShangChengGoods::clear_has_label_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LabelShangChengGoods::clear_label_name() {
  if (label_name_ != &::google::protobuf::internal::kEmptyString) {
    label_name_->clear();
  }
  clear_has_label_name();
}
inline const ::std::string& LabelShangChengGoods::label_name() const {
  return *label_name_;
}
inline void LabelShangChengGoods::set_label_name(const ::std::string& value) {
  set_has_label_name();
  if (label_name_ == &::google::protobuf::internal::kEmptyString) {
    label_name_ = new ::std::string;
  }
  label_name_->assign(value);
}
inline void LabelShangChengGoods::set_label_name(const char* value) {
  set_has_label_name();
  if (label_name_ == &::google::protobuf::internal::kEmptyString) {
    label_name_ = new ::std::string;
  }
  label_name_->assign(value);
}
inline void LabelShangChengGoods::set_label_name(const char* value, size_t size) {
  set_has_label_name();
  if (label_name_ == &::google::protobuf::internal::kEmptyString) {
    label_name_ = new ::std::string;
  }
  label_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LabelShangChengGoods::mutable_label_name() {
  set_has_label_name();
  if (label_name_ == &::google::protobuf::internal::kEmptyString) {
    label_name_ = new ::std::string;
  }
  return label_name_;
}
inline ::std::string* LabelShangChengGoods::release_label_name() {
  clear_has_label_name();
  if (label_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = label_name_;
    label_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LabelShangChengGoods::set_allocated_label_name(::std::string* label_name) {
  if (label_name_ != &::google::protobuf::internal::kEmptyString) {
    delete label_name_;
  }
  if (label_name) {
    set_has_label_name();
    label_name_ = label_name;
  } else {
    clear_has_label_name();
    label_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.ShangChengGoods sellgoodslist = 2;
inline int LabelShangChengGoods::sellgoodslist_size() const {
  return sellgoodslist_.size();
}
inline void LabelShangChengGoods::clear_sellgoodslist() {
  sellgoodslist_.Clear();
}
inline const ::protoc::gameproto::ShangChengGoods& LabelShangChengGoods::sellgoodslist(int index) const {
  return sellgoodslist_.Get(index);
}
inline ::protoc::gameproto::ShangChengGoods* LabelShangChengGoods::mutable_sellgoodslist(int index) {
  return sellgoodslist_.Mutable(index);
}
inline ::protoc::gameproto::ShangChengGoods* LabelShangChengGoods::add_sellgoodslist() {
  return sellgoodslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ShangChengGoods >&
LabelShangChengGoods::sellgoodslist() const {
  return sellgoodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ShangChengGoods >*
LabelShangChengGoods::mutable_sellgoodslist() {
  return &sellgoodslist_;
}

// -------------------------------------------------------------------

// GetShangChengGoodsListAck

// optional uint32 shop_id = 1;
inline bool GetShangChengGoodsListAck::has_shop_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetShangChengGoodsListAck::set_has_shop_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetShangChengGoodsListAck::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetShangChengGoodsListAck::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 GetShangChengGoodsListAck::shop_id() const {
  return shop_id_;
}
inline void GetShangChengGoodsListAck::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
}

// repeated .protoc.gameproto.LabelShangChengGoods labels = 2;
inline int GetShangChengGoodsListAck::labels_size() const {
  return labels_.size();
}
inline void GetShangChengGoodsListAck::clear_labels() {
  labels_.Clear();
}
inline const ::protoc::gameproto::LabelShangChengGoods& GetShangChengGoodsListAck::labels(int index) const {
  return labels_.Get(index);
}
inline ::protoc::gameproto::LabelShangChengGoods* GetShangChengGoodsListAck::mutable_labels(int index) {
  return labels_.Mutable(index);
}
inline ::protoc::gameproto::LabelShangChengGoods* GetShangChengGoodsListAck::add_labels() {
  return labels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::LabelShangChengGoods >&
GetShangChengGoodsListAck::labels() const {
  return labels_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::LabelShangChengGoods >*
GetShangChengGoodsListAck::mutable_labels() {
  return &labels_;
}

// -------------------------------------------------------------------

// GetShangChengGoodsListReq

// -------------------------------------------------------------------

// CommonDialog

// optional int32 dlg_id = 1;
inline bool CommonDialog::has_dlg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonDialog::set_has_dlg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonDialog::clear_has_dlg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonDialog::clear_dlg_id() {
  dlg_id_ = 0;
  clear_has_dlg_id();
}
inline ::google::protobuf::int32 CommonDialog::dlg_id() const {
  return dlg_id_;
}
inline void CommonDialog::set_dlg_id(::google::protobuf::int32 value) {
  set_has_dlg_id();
  dlg_id_ = value;
}

// optional .protoc.gameproto.CommonDialogType dlg_type = 2;
inline bool CommonDialog::has_dlg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonDialog::set_has_dlg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonDialog::clear_has_dlg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonDialog::clear_dlg_type() {
  dlg_type_ = 1;
  clear_has_dlg_type();
}
inline ::protoc::gameproto::CommonDialogType CommonDialog::dlg_type() const {
  return static_cast< ::protoc::gameproto::CommonDialogType >(dlg_type_);
}
inline void CommonDialog::set_dlg_type(::protoc::gameproto::CommonDialogType value) {
  assert(::protoc::gameproto::CommonDialogType_IsValid(value));
  set_has_dlg_type();
  dlg_type_ = value;
}

// optional int32 dlg_return = 3;
inline bool CommonDialog::has_dlg_return() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommonDialog::set_has_dlg_return() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommonDialog::clear_has_dlg_return() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommonDialog::clear_dlg_return() {
  dlg_return_ = 0;
  clear_has_dlg_return();
}
inline ::google::protobuf::int32 CommonDialog::dlg_return() const {
  return dlg_return_;
}
inline void CommonDialog::set_dlg_return(::google::protobuf::int32 value) {
  set_has_dlg_return();
  dlg_return_ = value;
}

// optional string output_text = 4;
inline bool CommonDialog::has_output_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CommonDialog::set_has_output_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CommonDialog::clear_has_output_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CommonDialog::clear_output_text() {
  if (output_text_ != &::google::protobuf::internal::kEmptyString) {
    output_text_->clear();
  }
  clear_has_output_text();
}
inline const ::std::string& CommonDialog::output_text() const {
  return *output_text_;
}
inline void CommonDialog::set_output_text(const ::std::string& value) {
  set_has_output_text();
  if (output_text_ == &::google::protobuf::internal::kEmptyString) {
    output_text_ = new ::std::string;
  }
  output_text_->assign(value);
}
inline void CommonDialog::set_output_text(const char* value) {
  set_has_output_text();
  if (output_text_ == &::google::protobuf::internal::kEmptyString) {
    output_text_ = new ::std::string;
  }
  output_text_->assign(value);
}
inline void CommonDialog::set_output_text(const char* value, size_t size) {
  set_has_output_text();
  if (output_text_ == &::google::protobuf::internal::kEmptyString) {
    output_text_ = new ::std::string;
  }
  output_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommonDialog::mutable_output_text() {
  set_has_output_text();
  if (output_text_ == &::google::protobuf::internal::kEmptyString) {
    output_text_ = new ::std::string;
  }
  return output_text_;
}
inline ::std::string* CommonDialog::release_output_text() {
  clear_has_output_text();
  if (output_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = output_text_;
    output_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommonDialog::set_allocated_output_text(::std::string* output_text) {
  if (output_text_ != &::google::protobuf::internal::kEmptyString) {
    delete output_text_;
  }
  if (output_text) {
    set_has_output_text();
    output_text_ = output_text;
  } else {
    clear_has_output_text();
    output_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string input_text = 5;
inline bool CommonDialog::has_input_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CommonDialog::set_has_input_text() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CommonDialog::clear_has_input_text() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CommonDialog::clear_input_text() {
  if (input_text_ != &::google::protobuf::internal::kEmptyString) {
    input_text_->clear();
  }
  clear_has_input_text();
}
inline const ::std::string& CommonDialog::input_text() const {
  return *input_text_;
}
inline void CommonDialog::set_input_text(const ::std::string& value) {
  set_has_input_text();
  if (input_text_ == &::google::protobuf::internal::kEmptyString) {
    input_text_ = new ::std::string;
  }
  input_text_->assign(value);
}
inline void CommonDialog::set_input_text(const char* value) {
  set_has_input_text();
  if (input_text_ == &::google::protobuf::internal::kEmptyString) {
    input_text_ = new ::std::string;
  }
  input_text_->assign(value);
}
inline void CommonDialog::set_input_text(const char* value, size_t size) {
  set_has_input_text();
  if (input_text_ == &::google::protobuf::internal::kEmptyString) {
    input_text_ = new ::std::string;
  }
  input_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CommonDialog::mutable_input_text() {
  set_has_input_text();
  if (input_text_ == &::google::protobuf::internal::kEmptyString) {
    input_text_ = new ::std::string;
  }
  return input_text_;
}
inline ::std::string* CommonDialog::release_input_text() {
  clear_has_input_text();
  if (input_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = input_text_;
    input_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CommonDialog::set_allocated_input_text(::std::string* input_text) {
  if (input_text_ != &::google::protobuf::internal::kEmptyString) {
    delete input_text_;
  }
  if (input_text) {
    set_has_input_text();
    input_text_ = input_text;
  } else {
    clear_has_input_text();
    input_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 r32_1 = 6;
inline bool CommonDialog::has_r32_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CommonDialog::set_has_r32_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CommonDialog::clear_has_r32_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CommonDialog::clear_r32_1() {
  r32_1_ = 0;
  clear_has_r32_1();
}
inline ::google::protobuf::int32 CommonDialog::r32_1() const {
  return r32_1_;
}
inline void CommonDialog::set_r32_1(::google::protobuf::int32 value) {
  set_has_r32_1();
  r32_1_ = value;
}

// optional int32 r32_2 = 7;
inline bool CommonDialog::has_r32_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CommonDialog::set_has_r32_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CommonDialog::clear_has_r32_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CommonDialog::clear_r32_2() {
  r32_2_ = 0;
  clear_has_r32_2();
}
inline ::google::protobuf::int32 CommonDialog::r32_2() const {
  return r32_2_;
}
inline void CommonDialog::set_r32_2(::google::protobuf::int32 value) {
  set_has_r32_2();
  r32_2_ = value;
}

// optional uint64 r64_1 = 8;
inline bool CommonDialog::has_r64_1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CommonDialog::set_has_r64_1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CommonDialog::clear_has_r64_1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CommonDialog::clear_r64_1() {
  r64_1_ = GOOGLE_ULONGLONG(0);
  clear_has_r64_1();
}
inline ::google::protobuf::uint64 CommonDialog::r64_1() const {
  return r64_1_;
}
inline void CommonDialog::set_r64_1(::google::protobuf::uint64 value) {
  set_has_r64_1();
  r64_1_ = value;
}

// -------------------------------------------------------------------

// GetGMAward

// -------------------------------------------------------------------

// GetGMAwardAck

// optional int32 err_no = 1;
inline bool GetGMAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGMAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGMAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGMAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetGMAwardAck::err_no() const {
  return err_no_;
}
inline void GetGMAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// UpdateExp

// required uint32 exp = 1;
inline bool UpdateExp::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateExp::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateExp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateExp::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 UpdateExp::exp() const {
  return exp_;
}
inline void UpdateExp::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// UpdateGold

// required uint32 gold = 1;
inline bool UpdateGold::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGold::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGold::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGold::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 UpdateGold::gold() const {
  return gold_;
}
inline void UpdateGold::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// UpdateLevel

// required uint32 id = 1;
inline bool UpdateLevel::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateLevel::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateLevel::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateLevel::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 UpdateLevel::id() const {
  return id_;
}
inline void UpdateLevel::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// UpdateYuanBao

// required uint32 yuan_bao = 1;
inline bool UpdateYuanBao::has_yuan_bao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateYuanBao::set_has_yuan_bao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateYuanBao::clear_has_yuan_bao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateYuanBao::clear_yuan_bao() {
  yuan_bao_ = 0u;
  clear_has_yuan_bao();
}
inline ::google::protobuf::uint32 UpdateYuanBao::yuan_bao() const {
  return yuan_bao_;
}
inline void UpdateYuanBao::set_yuan_bao(::google::protobuf::uint32 value) {
  set_has_yuan_bao();
  yuan_bao_ = value;
}

// -------------------------------------------------------------------

// PetRecord

// optional uint64 qwid = 1;
inline bool PetRecord::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetRecord::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetRecord::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetRecord::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 PetRecord::qwid() const {
  return qwid_;
}
inline void PetRecord::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// optional uint32 pet_id = 2;
inline bool PetRecord::has_pet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetRecord::set_has_pet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetRecord::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetRecord::clear_pet_id() {
  pet_id_ = 0u;
  clear_has_pet_id();
}
inline ::google::protobuf::uint32 PetRecord::pet_id() const {
  return pet_id_;
}
inline void PetRecord::set_pet_id(::google::protobuf::uint32 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional .protoc.gameproto.PET_POSITION position = 3;
inline bool PetRecord::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetRecord::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetRecord::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetRecord::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::protoc::gameproto::PET_POSITION PetRecord::position() const {
  return static_cast< ::protoc::gameproto::PET_POSITION >(position_);
}
inline void PetRecord::set_position(::protoc::gameproto::PET_POSITION value) {
  assert(::protoc::gameproto::PET_POSITION_IsValid(value));
  set_has_position();
  position_ = value;
}

// optional uint32 bind = 4;
inline bool PetRecord::has_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetRecord::set_has_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetRecord::clear_has_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetRecord::clear_bind() {
  bind_ = 0u;
  clear_has_bind();
}
inline ::google::protobuf::uint32 PetRecord::bind() const {
  return bind_;
}
inline void PetRecord::set_bind(::google::protobuf::uint32 value) {
  set_has_bind();
  bind_ = value;
}

// optional uint32 recover = 5;
inline bool PetRecord::has_recover() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetRecord::set_has_recover() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetRecord::clear_has_recover() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetRecord::clear_recover() {
  recover_ = 0u;
  clear_has_recover();
}
inline ::google::protobuf::uint32 PetRecord::recover() const {
  return recover_;
}
inline void PetRecord::set_recover(::google::protobuf::uint32 value) {
  set_has_recover();
  recover_ = value;
}

// optional float dps = 6;
inline bool PetRecord::has_dps() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetRecord::set_has_dps() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetRecord::clear_has_dps() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetRecord::clear_dps() {
  dps_ = 0;
  clear_has_dps();
}
inline float PetRecord::dps() const {
  return dps_;
}
inline void PetRecord::set_dps(float value) {
  set_has_dps();
  dps_ = value;
}

// optional uint32 hp = 7;
inline bool PetRecord::has_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetRecord::set_has_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetRecord::clear_has_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetRecord::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 PetRecord::hp() const {
  return hp_;
}
inline void PetRecord::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// optional uint32 level = 8;
inline bool PetRecord::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PetRecord::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PetRecord::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PetRecord::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PetRecord::level() const {
  return level_;
}
inline void PetRecord::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 exp = 9;
inline bool PetRecord::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetRecord::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetRecord::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetRecord::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 PetRecord::exp() const {
  return exp_;
}
inline void PetRecord::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 action_skill = 10;
inline bool PetRecord::has_action_skill() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetRecord::set_has_action_skill() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetRecord::clear_has_action_skill() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetRecord::clear_action_skill() {
  action_skill_ = 0u;
  clear_has_action_skill();
}
inline ::google::protobuf::uint32 PetRecord::action_skill() const {
  return action_skill_;
}
inline void PetRecord::set_action_skill(::google::protobuf::uint32 value) {
  set_has_action_skill();
  action_skill_ = value;
}

// optional uint32 leader_skill = 11;
inline bool PetRecord::has_leader_skill() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PetRecord::set_has_leader_skill() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PetRecord::clear_has_leader_skill() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PetRecord::clear_leader_skill() {
  leader_skill_ = 0u;
  clear_has_leader_skill();
}
inline ::google::protobuf::uint32 PetRecord::leader_skill() const {
  return leader_skill_;
}
inline void PetRecord::set_leader_skill(::google::protobuf::uint32 value) {
  set_has_leader_skill();
  leader_skill_ = value;
}

// repeated uint32 passive_skill = 12;
inline int PetRecord::passive_skill_size() const {
  return passive_skill_.size();
}
inline void PetRecord::clear_passive_skill() {
  passive_skill_.Clear();
}
inline ::google::protobuf::uint32 PetRecord::passive_skill(int index) const {
  return passive_skill_.Get(index);
}
inline void PetRecord::set_passive_skill(int index, ::google::protobuf::uint32 value) {
  passive_skill_.Set(index, value);
}
inline void PetRecord::add_passive_skill(::google::protobuf::uint32 value) {
  passive_skill_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetRecord::passive_skill() const {
  return passive_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetRecord::mutable_passive_skill() {
  return &passive_skill_;
}

// optional int64 create_time = 13;
inline bool PetRecord::has_create_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PetRecord::set_has_create_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PetRecord::clear_has_create_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PetRecord::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 PetRecord::create_time() const {
  return create_time_;
}
inline void PetRecord::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional uint32 protect = 14;
inline bool PetRecord::has_protect() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PetRecord::set_has_protect() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PetRecord::clear_has_protect() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PetRecord::clear_protect() {
  protect_ = 0u;
  clear_has_protect();
}
inline ::google::protobuf::uint32 PetRecord::protect() const {
  return protect_;
}
inline void PetRecord::set_protect(::google::protobuf::uint32 value) {
  set_has_protect();
  protect_ = value;
}

// optional uint32 skill_level = 15;
inline bool PetRecord::has_skill_level() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PetRecord::set_has_skill_level() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PetRecord::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PetRecord::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 PetRecord::skill_level() const {
  return skill_level_;
}
inline void PetRecord::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// repeated uint64 equip_id = 16;
inline int PetRecord::equip_id_size() const {
  return equip_id_.size();
}
inline void PetRecord::clear_equip_id() {
  equip_id_.Clear();
}
inline ::google::protobuf::uint64 PetRecord::equip_id(int index) const {
  return equip_id_.Get(index);
}
inline void PetRecord::set_equip_id(int index, ::google::protobuf::uint64 value) {
  equip_id_.Set(index, value);
}
inline void PetRecord::add_equip_id(::google::protobuf::uint64 value) {
  equip_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PetRecord::equip_id() const {
  return equip_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PetRecord::mutable_equip_id() {
  return &equip_id_;
}

// optional bool new_state = 17;
inline bool PetRecord::has_new_state() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PetRecord::set_has_new_state() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PetRecord::clear_has_new_state() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PetRecord::clear_new_state() {
  new_state_ = false;
  clear_has_new_state();
}
inline bool PetRecord::new_state() const {
  return new_state_;
}
inline void PetRecord::set_new_state(bool value) {
  set_has_new_state();
  new_state_ = value;
}

// optional uint32 pvp_number = 18;
inline bool PetRecord::has_pvp_number() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PetRecord::set_has_pvp_number() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PetRecord::clear_has_pvp_number() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PetRecord::clear_pvp_number() {
  pvp_number_ = 0u;
  clear_has_pvp_number();
}
inline ::google::protobuf::uint32 PetRecord::pvp_number() const {
  return pvp_number_;
}
inline void PetRecord::set_pvp_number(::google::protobuf::uint32 value) {
  set_has_pvp_number();
  pvp_number_ = value;
}

// -------------------------------------------------------------------

// PetRecordSIGN

// optional uint64 qwid = 1;
inline bool PetRecordSIGN::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetRecordSIGN::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetRecordSIGN::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetRecordSIGN::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 PetRecordSIGN::qwid() const {
  return qwid_;
}
inline void PetRecordSIGN::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// optional bytes sign_pet_id = 2;
inline bool PetRecordSIGN::has_sign_pet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetRecordSIGN::set_has_sign_pet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetRecordSIGN::clear_has_sign_pet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetRecordSIGN::clear_sign_pet_id() {
  if (sign_pet_id_ != &::google::protobuf::internal::kEmptyString) {
    sign_pet_id_->clear();
  }
  clear_has_sign_pet_id();
}
inline const ::std::string& PetRecordSIGN::sign_pet_id() const {
  return *sign_pet_id_;
}
inline void PetRecordSIGN::set_sign_pet_id(const ::std::string& value) {
  set_has_sign_pet_id();
  if (sign_pet_id_ == &::google::protobuf::internal::kEmptyString) {
    sign_pet_id_ = new ::std::string;
  }
  sign_pet_id_->assign(value);
}
inline void PetRecordSIGN::set_sign_pet_id(const char* value) {
  set_has_sign_pet_id();
  if (sign_pet_id_ == &::google::protobuf::internal::kEmptyString) {
    sign_pet_id_ = new ::std::string;
  }
  sign_pet_id_->assign(value);
}
inline void PetRecordSIGN::set_sign_pet_id(const void* value, size_t size) {
  set_has_sign_pet_id();
  if (sign_pet_id_ == &::google::protobuf::internal::kEmptyString) {
    sign_pet_id_ = new ::std::string;
  }
  sign_pet_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_pet_id() {
  set_has_sign_pet_id();
  if (sign_pet_id_ == &::google::protobuf::internal::kEmptyString) {
    sign_pet_id_ = new ::std::string;
  }
  return sign_pet_id_;
}
inline ::std::string* PetRecordSIGN::release_sign_pet_id() {
  clear_has_sign_pet_id();
  if (sign_pet_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_pet_id_;
    sign_pet_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_pet_id(::std::string* sign_pet_id) {
  if (sign_pet_id_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_pet_id_;
  }
  if (sign_pet_id) {
    set_has_sign_pet_id();
    sign_pet_id_ = sign_pet_id;
  } else {
    clear_has_sign_pet_id();
    sign_pet_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_recover = 3;
inline bool PetRecordSIGN::has_sign_recover() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetRecordSIGN::set_has_sign_recover() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetRecordSIGN::clear_has_sign_recover() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetRecordSIGN::clear_sign_recover() {
  if (sign_recover_ != &::google::protobuf::internal::kEmptyString) {
    sign_recover_->clear();
  }
  clear_has_sign_recover();
}
inline const ::std::string& PetRecordSIGN::sign_recover() const {
  return *sign_recover_;
}
inline void PetRecordSIGN::set_sign_recover(const ::std::string& value) {
  set_has_sign_recover();
  if (sign_recover_ == &::google::protobuf::internal::kEmptyString) {
    sign_recover_ = new ::std::string;
  }
  sign_recover_->assign(value);
}
inline void PetRecordSIGN::set_sign_recover(const char* value) {
  set_has_sign_recover();
  if (sign_recover_ == &::google::protobuf::internal::kEmptyString) {
    sign_recover_ = new ::std::string;
  }
  sign_recover_->assign(value);
}
inline void PetRecordSIGN::set_sign_recover(const void* value, size_t size) {
  set_has_sign_recover();
  if (sign_recover_ == &::google::protobuf::internal::kEmptyString) {
    sign_recover_ = new ::std::string;
  }
  sign_recover_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_recover() {
  set_has_sign_recover();
  if (sign_recover_ == &::google::protobuf::internal::kEmptyString) {
    sign_recover_ = new ::std::string;
  }
  return sign_recover_;
}
inline ::std::string* PetRecordSIGN::release_sign_recover() {
  clear_has_sign_recover();
  if (sign_recover_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_recover_;
    sign_recover_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_recover(::std::string* sign_recover) {
  if (sign_recover_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_recover_;
  }
  if (sign_recover) {
    set_has_sign_recover();
    sign_recover_ = sign_recover;
  } else {
    clear_has_sign_recover();
    sign_recover_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_dps = 4;
inline bool PetRecordSIGN::has_sign_dps() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetRecordSIGN::set_has_sign_dps() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetRecordSIGN::clear_has_sign_dps() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetRecordSIGN::clear_sign_dps() {
  if (sign_dps_ != &::google::protobuf::internal::kEmptyString) {
    sign_dps_->clear();
  }
  clear_has_sign_dps();
}
inline const ::std::string& PetRecordSIGN::sign_dps() const {
  return *sign_dps_;
}
inline void PetRecordSIGN::set_sign_dps(const ::std::string& value) {
  set_has_sign_dps();
  if (sign_dps_ == &::google::protobuf::internal::kEmptyString) {
    sign_dps_ = new ::std::string;
  }
  sign_dps_->assign(value);
}
inline void PetRecordSIGN::set_sign_dps(const char* value) {
  set_has_sign_dps();
  if (sign_dps_ == &::google::protobuf::internal::kEmptyString) {
    sign_dps_ = new ::std::string;
  }
  sign_dps_->assign(value);
}
inline void PetRecordSIGN::set_sign_dps(const void* value, size_t size) {
  set_has_sign_dps();
  if (sign_dps_ == &::google::protobuf::internal::kEmptyString) {
    sign_dps_ = new ::std::string;
  }
  sign_dps_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_dps() {
  set_has_sign_dps();
  if (sign_dps_ == &::google::protobuf::internal::kEmptyString) {
    sign_dps_ = new ::std::string;
  }
  return sign_dps_;
}
inline ::std::string* PetRecordSIGN::release_sign_dps() {
  clear_has_sign_dps();
  if (sign_dps_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_dps_;
    sign_dps_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_dps(::std::string* sign_dps) {
  if (sign_dps_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_dps_;
  }
  if (sign_dps) {
    set_has_sign_dps();
    sign_dps_ = sign_dps;
  } else {
    clear_has_sign_dps();
    sign_dps_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_hp = 5;
inline bool PetRecordSIGN::has_sign_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetRecordSIGN::set_has_sign_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetRecordSIGN::clear_has_sign_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetRecordSIGN::clear_sign_hp() {
  if (sign_hp_ != &::google::protobuf::internal::kEmptyString) {
    sign_hp_->clear();
  }
  clear_has_sign_hp();
}
inline const ::std::string& PetRecordSIGN::sign_hp() const {
  return *sign_hp_;
}
inline void PetRecordSIGN::set_sign_hp(const ::std::string& value) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(value);
}
inline void PetRecordSIGN::set_sign_hp(const char* value) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(value);
}
inline void PetRecordSIGN::set_sign_hp(const void* value, size_t size) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_hp() {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  return sign_hp_;
}
inline ::std::string* PetRecordSIGN::release_sign_hp() {
  clear_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_hp_;
    sign_hp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_hp(::std::string* sign_hp) {
  if (sign_hp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_hp_;
  }
  if (sign_hp) {
    set_has_sign_hp();
    sign_hp_ = sign_hp;
  } else {
    clear_has_sign_hp();
    sign_hp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_action_skill = 6;
inline bool PetRecordSIGN::has_sign_action_skill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetRecordSIGN::set_has_sign_action_skill() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetRecordSIGN::clear_has_sign_action_skill() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetRecordSIGN::clear_sign_action_skill() {
  if (sign_action_skill_ != &::google::protobuf::internal::kEmptyString) {
    sign_action_skill_->clear();
  }
  clear_has_sign_action_skill();
}
inline const ::std::string& PetRecordSIGN::sign_action_skill() const {
  return *sign_action_skill_;
}
inline void PetRecordSIGN::set_sign_action_skill(const ::std::string& value) {
  set_has_sign_action_skill();
  if (sign_action_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_action_skill_ = new ::std::string;
  }
  sign_action_skill_->assign(value);
}
inline void PetRecordSIGN::set_sign_action_skill(const char* value) {
  set_has_sign_action_skill();
  if (sign_action_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_action_skill_ = new ::std::string;
  }
  sign_action_skill_->assign(value);
}
inline void PetRecordSIGN::set_sign_action_skill(const void* value, size_t size) {
  set_has_sign_action_skill();
  if (sign_action_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_action_skill_ = new ::std::string;
  }
  sign_action_skill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_action_skill() {
  set_has_sign_action_skill();
  if (sign_action_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_action_skill_ = new ::std::string;
  }
  return sign_action_skill_;
}
inline ::std::string* PetRecordSIGN::release_sign_action_skill() {
  clear_has_sign_action_skill();
  if (sign_action_skill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_action_skill_;
    sign_action_skill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_action_skill(::std::string* sign_action_skill) {
  if (sign_action_skill_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_action_skill_;
  }
  if (sign_action_skill) {
    set_has_sign_action_skill();
    sign_action_skill_ = sign_action_skill;
  } else {
    clear_has_sign_action_skill();
    sign_action_skill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_leader_skill = 7;
inline bool PetRecordSIGN::has_sign_leader_skill() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PetRecordSIGN::set_has_sign_leader_skill() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PetRecordSIGN::clear_has_sign_leader_skill() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PetRecordSIGN::clear_sign_leader_skill() {
  if (sign_leader_skill_ != &::google::protobuf::internal::kEmptyString) {
    sign_leader_skill_->clear();
  }
  clear_has_sign_leader_skill();
}
inline const ::std::string& PetRecordSIGN::sign_leader_skill() const {
  return *sign_leader_skill_;
}
inline void PetRecordSIGN::set_sign_leader_skill(const ::std::string& value) {
  set_has_sign_leader_skill();
  if (sign_leader_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_leader_skill_ = new ::std::string;
  }
  sign_leader_skill_->assign(value);
}
inline void PetRecordSIGN::set_sign_leader_skill(const char* value) {
  set_has_sign_leader_skill();
  if (sign_leader_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_leader_skill_ = new ::std::string;
  }
  sign_leader_skill_->assign(value);
}
inline void PetRecordSIGN::set_sign_leader_skill(const void* value, size_t size) {
  set_has_sign_leader_skill();
  if (sign_leader_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_leader_skill_ = new ::std::string;
  }
  sign_leader_skill_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_leader_skill() {
  set_has_sign_leader_skill();
  if (sign_leader_skill_ == &::google::protobuf::internal::kEmptyString) {
    sign_leader_skill_ = new ::std::string;
  }
  return sign_leader_skill_;
}
inline ::std::string* PetRecordSIGN::release_sign_leader_skill() {
  clear_has_sign_leader_skill();
  if (sign_leader_skill_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_leader_skill_;
    sign_leader_skill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_leader_skill(::std::string* sign_leader_skill) {
  if (sign_leader_skill_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_leader_skill_;
  }
  if (sign_leader_skill) {
    set_has_sign_leader_skill();
    sign_leader_skill_ = sign_leader_skill;
  } else {
    clear_has_sign_leader_skill();
    sign_leader_skill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_skill_level = 8;
inline bool PetRecordSIGN::has_sign_skill_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PetRecordSIGN::set_has_sign_skill_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PetRecordSIGN::clear_has_sign_skill_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PetRecordSIGN::clear_sign_skill_level() {
  if (sign_skill_level_ != &::google::protobuf::internal::kEmptyString) {
    sign_skill_level_->clear();
  }
  clear_has_sign_skill_level();
}
inline const ::std::string& PetRecordSIGN::sign_skill_level() const {
  return *sign_skill_level_;
}
inline void PetRecordSIGN::set_sign_skill_level(const ::std::string& value) {
  set_has_sign_skill_level();
  if (sign_skill_level_ == &::google::protobuf::internal::kEmptyString) {
    sign_skill_level_ = new ::std::string;
  }
  sign_skill_level_->assign(value);
}
inline void PetRecordSIGN::set_sign_skill_level(const char* value) {
  set_has_sign_skill_level();
  if (sign_skill_level_ == &::google::protobuf::internal::kEmptyString) {
    sign_skill_level_ = new ::std::string;
  }
  sign_skill_level_->assign(value);
}
inline void PetRecordSIGN::set_sign_skill_level(const void* value, size_t size) {
  set_has_sign_skill_level();
  if (sign_skill_level_ == &::google::protobuf::internal::kEmptyString) {
    sign_skill_level_ = new ::std::string;
  }
  sign_skill_level_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_skill_level() {
  set_has_sign_skill_level();
  if (sign_skill_level_ == &::google::protobuf::internal::kEmptyString) {
    sign_skill_level_ = new ::std::string;
  }
  return sign_skill_level_;
}
inline ::std::string* PetRecordSIGN::release_sign_skill_level() {
  clear_has_sign_skill_level();
  if (sign_skill_level_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_skill_level_;
    sign_skill_level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_skill_level(::std::string* sign_skill_level) {
  if (sign_skill_level_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_skill_level_;
  }
  if (sign_skill_level) {
    set_has_sign_skill_level();
    sign_skill_level_ = sign_skill_level;
  } else {
    clear_has_sign_skill_level();
    sign_skill_level_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_mp = 9;
inline bool PetRecordSIGN::has_sign_mp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PetRecordSIGN::set_has_sign_mp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PetRecordSIGN::clear_has_sign_mp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PetRecordSIGN::clear_sign_mp() {
  if (sign_mp_ != &::google::protobuf::internal::kEmptyString) {
    sign_mp_->clear();
  }
  clear_has_sign_mp();
}
inline const ::std::string& PetRecordSIGN::sign_mp() const {
  return *sign_mp_;
}
inline void PetRecordSIGN::set_sign_mp(const ::std::string& value) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(value);
}
inline void PetRecordSIGN::set_sign_mp(const char* value) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(value);
}
inline void PetRecordSIGN::set_sign_mp(const void* value, size_t size) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_mp() {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  return sign_mp_;
}
inline ::std::string* PetRecordSIGN::release_sign_mp() {
  clear_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_mp_;
    sign_mp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_mp(::std::string* sign_mp) {
  if (sign_mp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_mp_;
  }
  if (sign_mp) {
    set_has_sign_mp();
    sign_mp_ = sign_mp;
  } else {
    clear_has_sign_mp();
    sign_mp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_spirit = 10;
inline bool PetRecordSIGN::has_sign_spirit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PetRecordSIGN::set_has_sign_spirit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PetRecordSIGN::clear_has_sign_spirit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PetRecordSIGN::clear_sign_spirit() {
  if (sign_spirit_ != &::google::protobuf::internal::kEmptyString) {
    sign_spirit_->clear();
  }
  clear_has_sign_spirit();
}
inline const ::std::string& PetRecordSIGN::sign_spirit() const {
  return *sign_spirit_;
}
inline void PetRecordSIGN::set_sign_spirit(const ::std::string& value) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(value);
}
inline void PetRecordSIGN::set_sign_spirit(const char* value) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(value);
}
inline void PetRecordSIGN::set_sign_spirit(const void* value, size_t size) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PetRecordSIGN::mutable_sign_spirit() {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  return sign_spirit_;
}
inline ::std::string* PetRecordSIGN::release_sign_spirit() {
  clear_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_spirit_;
    sign_spirit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PetRecordSIGN::set_allocated_sign_spirit(::std::string* sign_spirit) {
  if (sign_spirit_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_spirit_;
  }
  if (sign_spirit) {
    set_has_sign_spirit();
    sign_spirit_ = sign_spirit;
  } else {
    clear_has_sign_spirit();
    sign_spirit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AddPet

// optional .protoc.gameproto.PetRecord pet = 1;
inline bool AddPet::has_pet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPet::set_has_pet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPet::clear_has_pet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPet::clear_pet() {
  if (pet_ != NULL) pet_->::protoc::gameproto::PetRecord::Clear();
  clear_has_pet();
}
inline const ::protoc::gameproto::PetRecord& AddPet::pet() const {
  return pet_ != NULL ? *pet_ : *default_instance_->pet_;
}
inline ::protoc::gameproto::PetRecord* AddPet::mutable_pet() {
  set_has_pet();
  if (pet_ == NULL) pet_ = new ::protoc::gameproto::PetRecord;
  return pet_;
}
inline ::protoc::gameproto::PetRecord* AddPet::release_pet() {
  clear_has_pet();
  ::protoc::gameproto::PetRecord* temp = pet_;
  pet_ = NULL;
  return temp;
}
inline void AddPet::set_allocated_pet(::protoc::gameproto::PetRecord* pet) {
  delete pet_;
  pet_ = pet;
  if (pet) {
    set_has_pet();
  } else {
    clear_has_pet();
  }
}

// -------------------------------------------------------------------

// DelPet

// optional uint64 id = 1;
inline bool DelPet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelPet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelPet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelPet::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DelPet::id() const {
  return id_;
}
inline void DelPet::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// UpdatePet

// optional .protoc.gameproto.PetRecord pet = 1;
inline bool UpdatePet::has_pet() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePet::set_has_pet() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePet::clear_has_pet() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePet::clear_pet() {
  if (pet_ != NULL) pet_->::protoc::gameproto::PetRecord::Clear();
  clear_has_pet();
}
inline const ::protoc::gameproto::PetRecord& UpdatePet::pet() const {
  return pet_ != NULL ? *pet_ : *default_instance_->pet_;
}
inline ::protoc::gameproto::PetRecord* UpdatePet::mutable_pet() {
  set_has_pet();
  if (pet_ == NULL) pet_ = new ::protoc::gameproto::PetRecord;
  return pet_;
}
inline ::protoc::gameproto::PetRecord* UpdatePet::release_pet() {
  clear_has_pet();
  ::protoc::gameproto::PetRecord* temp = pet_;
  pet_ = NULL;
  return temp;
}
inline void UpdatePet::set_allocated_pet(::protoc::gameproto::PetRecord* pet) {
  delete pet_;
  pet_ = pet;
  if (pet) {
    set_has_pet();
  } else {
    clear_has_pet();
  }
}

// -------------------------------------------------------------------

// PetList

// repeated .protoc.gameproto.PetRecord talbe = 1;
inline int PetList::talbe_size() const {
  return talbe_.size();
}
inline void PetList::clear_talbe() {
  talbe_.Clear();
}
inline const ::protoc::gameproto::PetRecord& PetList::talbe(int index) const {
  return talbe_.Get(index);
}
inline ::protoc::gameproto::PetRecord* PetList::mutable_talbe(int index) {
  return talbe_.Mutable(index);
}
inline ::protoc::gameproto::PetRecord* PetList::add_talbe() {
  return talbe_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
PetList::talbe() const {
  return talbe_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
PetList::mutable_talbe() {
  return &talbe_;
}

// -------------------------------------------------------------------

// SystemData

// optional uint64 msg_id = 1;
inline bool SystemData::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemData::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemData::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemData::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 SystemData::msg_id() const {
  return msg_id_;
}
inline void SystemData::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional uint32 msg_type = 2;
inline bool SystemData::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemData::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemData::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemData::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 SystemData::msg_type() const {
  return msg_type_;
}
inline void SystemData::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional string send_name = 3;
inline bool SystemData::has_send_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemData::set_has_send_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemData::clear_has_send_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemData::clear_send_name() {
  if (send_name_ != &::google::protobuf::internal::kEmptyString) {
    send_name_->clear();
  }
  clear_has_send_name();
}
inline const ::std::string& SystemData::send_name() const {
  return *send_name_;
}
inline void SystemData::set_send_name(const ::std::string& value) {
  set_has_send_name();
  if (send_name_ == &::google::protobuf::internal::kEmptyString) {
    send_name_ = new ::std::string;
  }
  send_name_->assign(value);
}
inline void SystemData::set_send_name(const char* value) {
  set_has_send_name();
  if (send_name_ == &::google::protobuf::internal::kEmptyString) {
    send_name_ = new ::std::string;
  }
  send_name_->assign(value);
}
inline void SystemData::set_send_name(const char* value, size_t size) {
  set_has_send_name();
  if (send_name_ == &::google::protobuf::internal::kEmptyString) {
    send_name_ = new ::std::string;
  }
  send_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemData::mutable_send_name() {
  set_has_send_name();
  if (send_name_ == &::google::protobuf::internal::kEmptyString) {
    send_name_ = new ::std::string;
  }
  return send_name_;
}
inline ::std::string* SystemData::release_send_name() {
  clear_has_send_name();
  if (send_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = send_name_;
    send_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemData::set_allocated_send_name(::std::string* send_name) {
  if (send_name_ != &::google::protobuf::internal::kEmptyString) {
    delete send_name_;
  }
  if (send_name) {
    set_has_send_name();
    send_name_ = send_name;
  } else {
    clear_has_send_name();
    send_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string title = 4;
inline bool SystemData::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemData::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemData::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemData::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& SystemData::title() const {
  return *title_;
}
inline void SystemData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SystemData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SystemData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* SystemData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool read_flag = 5;
inline bool SystemData::has_read_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemData::set_has_read_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SystemData::clear_has_read_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SystemData::clear_read_flag() {
  read_flag_ = false;
  clear_has_read_flag();
}
inline bool SystemData::read_flag() const {
  return read_flag_;
}
inline void SystemData::set_read_flag(bool value) {
  set_has_read_flag();
  read_flag_ = value;
}

// optional int64 msg_time = 6;
inline bool SystemData::has_msg_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemData::set_has_msg_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SystemData::clear_has_msg_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SystemData::clear_msg_time() {
  msg_time_ = GOOGLE_LONGLONG(0);
  clear_has_msg_time();
}
inline ::google::protobuf::int64 SystemData::msg_time() const {
  return msg_time_;
}
inline void SystemData::set_msg_time(::google::protobuf::int64 value) {
  set_has_msg_time();
  msg_time_ = value;
}

// optional string award = 7;
inline bool SystemData::has_award() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SystemData::set_has_award() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SystemData::clear_has_award() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SystemData::clear_award() {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    award_->clear();
  }
  clear_has_award();
}
inline const ::std::string& SystemData::award() const {
  return *award_;
}
inline void SystemData::set_award(const ::std::string& value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void SystemData::set_award(const char* value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void SystemData::set_award(const char* value, size_t size) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemData::mutable_award() {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  return award_;
}
inline ::std::string* SystemData::release_award() {
  clear_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award_;
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemData::set_allocated_award(::std::string* award) {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    delete award_;
  }
  if (award) {
    set_has_award();
    award_ = award;
  } else {
    clear_has_award();
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 last_days = 8;
inline bool SystemData::has_last_days() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SystemData::set_has_last_days() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SystemData::clear_has_last_days() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SystemData::clear_last_days() {
  last_days_ = 0u;
  clear_has_last_days();
}
inline ::google::protobuf::uint32 SystemData::last_days() const {
  return last_days_;
}
inline void SystemData::set_last_days(::google::protobuf::uint32 value) {
  set_has_last_days();
  last_days_ = value;
}

// optional string content = 9;
inline bool SystemData::has_content() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SystemData::set_has_content() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SystemData::clear_has_content() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SystemData::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SystemData::content() const {
  return *content_;
}
inline void SystemData::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SystemData::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SystemData::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SystemData::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* SystemData::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SystemData::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetAllSysMsgReq

// -------------------------------------------------------------------

// GetAllSysMsgAck

// repeated .protoc.gameproto.SystemData sysmsg = 1;
inline int GetAllSysMsgAck::sysmsg_size() const {
  return sysmsg_.size();
}
inline void GetAllSysMsgAck::clear_sysmsg() {
  sysmsg_.Clear();
}
inline const ::protoc::gameproto::SystemData& GetAllSysMsgAck::sysmsg(int index) const {
  return sysmsg_.Get(index);
}
inline ::protoc::gameproto::SystemData* GetAllSysMsgAck::mutable_sysmsg(int index) {
  return sysmsg_.Mutable(index);
}
inline ::protoc::gameproto::SystemData* GetAllSysMsgAck::add_sysmsg() {
  return sysmsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SystemData >&
GetAllSysMsgAck::sysmsg() const {
  return sysmsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SystemData >*
GetAllSysMsgAck::mutable_sysmsg() {
  return &sysmsg_;
}

// -------------------------------------------------------------------

// DeleteSysMsgReq

// repeated uint64 msg_ids = 1;
inline int DeleteSysMsgReq::msg_ids_size() const {
  return msg_ids_.size();
}
inline void DeleteSysMsgReq::clear_msg_ids() {
  msg_ids_.Clear();
}
inline ::google::protobuf::uint64 DeleteSysMsgReq::msg_ids(int index) const {
  return msg_ids_.Get(index);
}
inline void DeleteSysMsgReq::set_msg_ids(int index, ::google::protobuf::uint64 value) {
  msg_ids_.Set(index, value);
}
inline void DeleteSysMsgReq::add_msg_ids(::google::protobuf::uint64 value) {
  msg_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
DeleteSysMsgReq::msg_ids() const {
  return msg_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
DeleteSysMsgReq::mutable_msg_ids() {
  return &msg_ids_;
}

// -------------------------------------------------------------------

// DeleteSysMsgAck

// optional int32 err_no = 1;
inline bool DeleteSysMsgAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteSysMsgAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteSysMsgAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteSysMsgAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 DeleteSysMsgAck::err_no() const {
  return err_no_;
}
inline void DeleteSysMsgAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// SendSysMsgReq

// optional string player_name = 1;
inline bool SendSysMsgReq::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSysMsgReq::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSysMsgReq::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSysMsgReq::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& SendSysMsgReq::player_name() const {
  return *player_name_;
}
inline void SendSysMsgReq::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void SendSysMsgReq::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void SendSysMsgReq::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendSysMsgReq::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* SendSysMsgReq::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendSysMsgReq::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string theme = 2;
inline bool SendSysMsgReq::has_theme() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendSysMsgReq::set_has_theme() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendSysMsgReq::clear_has_theme() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendSysMsgReq::clear_theme() {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    theme_->clear();
  }
  clear_has_theme();
}
inline const ::std::string& SendSysMsgReq::theme() const {
  return *theme_;
}
inline void SendSysMsgReq::set_theme(const ::std::string& value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void SendSysMsgReq::set_theme(const char* value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void SendSysMsgReq::set_theme(const char* value, size_t size) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendSysMsgReq::mutable_theme() {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  return theme_;
}
inline ::std::string* SendSysMsgReq::release_theme() {
  clear_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = theme_;
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendSysMsgReq::set_allocated_theme(::std::string* theme) {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    delete theme_;
  }
  if (theme) {
    set_has_theme();
    theme_ = theme;
  } else {
    clear_has_theme();
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 3;
inline bool SendSysMsgReq::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendSysMsgReq::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendSysMsgReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendSysMsgReq::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SendSysMsgReq::content() const {
  return *content_;
}
inline void SendSysMsgReq::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SendSysMsgReq::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SendSysMsgReq::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendSysMsgReq::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* SendSysMsgReq::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendSysMsgReq::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 playerid = 4;
inline bool SendSysMsgReq::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendSysMsgReq::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendSysMsgReq::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendSysMsgReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::uint64 SendSysMsgReq::playerid() const {
  return playerid_;
}
inline void SendSysMsgReq::set_playerid(::google::protobuf::uint64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// SendSysMsgAck

// optional int32 err_no = 1;
inline bool SendSysMsgAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSysMsgAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSysMsgAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSysMsgAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SendSysMsgAck::err_no() const {
  return err_no_;
}
inline void SendSysMsgAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// ReadSysMsgReq

// optional uint64 msg_id = 1;
inline bool ReadSysMsgReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadSysMsgReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadSysMsgReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadSysMsgReq::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 ReadSysMsgReq::msg_id() const {
  return msg_id_;
}
inline void ReadSysMsgReq::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// -------------------------------------------------------------------

// ReadSysMsgAck

// optional uint64 msg_id = 1;
inline bool ReadSysMsgAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadSysMsgAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadSysMsgAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadSysMsgAck::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 ReadSysMsgAck::msg_id() const {
  return msg_id_;
}
inline void ReadSysMsgAck::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional string content = 2;
inline bool ReadSysMsgAck::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadSysMsgAck::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadSysMsgAck::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadSysMsgAck::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ReadSysMsgAck::content() const {
  return *content_;
}
inline void ReadSysMsgAck::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReadSysMsgAck::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReadSysMsgAck::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReadSysMsgAck::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ReadSysMsgAck::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReadSysMsgAck::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetEmailAwardReq

// optional uint64 msg_id = 1;
inline bool GetEmailAwardReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEmailAwardReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEmailAwardReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEmailAwardReq::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 GetEmailAwardReq::msg_id() const {
  return msg_id_;
}
inline void GetEmailAwardReq::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// -------------------------------------------------------------------

// GetEmailAwardAck

// optional uint64 msg_id = 1;
inline bool GetEmailAwardAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEmailAwardAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEmailAwardAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEmailAwardAck::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 GetEmailAwardAck::msg_id() const {
  return msg_id_;
}
inline void GetEmailAwardAck::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional int32 err_no = 2;
inline bool GetEmailAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEmailAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEmailAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEmailAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetEmailAwardAck::err_no() const {
  return err_no_;
}
inline void GetEmailAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// OneKeyGetEmailAwardReq

// repeated uint64 msg_id = 1;
inline int OneKeyGetEmailAwardReq::msg_id_size() const {
  return msg_id_.size();
}
inline void OneKeyGetEmailAwardReq::clear_msg_id() {
  msg_id_.Clear();
}
inline ::google::protobuf::uint64 OneKeyGetEmailAwardReq::msg_id(int index) const {
  return msg_id_.Get(index);
}
inline void OneKeyGetEmailAwardReq::set_msg_id(int index, ::google::protobuf::uint64 value) {
  msg_id_.Set(index, value);
}
inline void OneKeyGetEmailAwardReq::add_msg_id(::google::protobuf::uint64 value) {
  msg_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
OneKeyGetEmailAwardReq::msg_id() const {
  return msg_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
OneKeyGetEmailAwardReq::mutable_msg_id() {
  return &msg_id_;
}

// -------------------------------------------------------------------

// EmailMessageNtf

// -------------------------------------------------------------------

// ProtectPetReq

// optional uint64 pet_id = 1;
inline bool ProtectPetReq::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtectPetReq::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtectPetReq::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtectPetReq::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 ProtectPetReq::pet_id() const {
  return pet_id_;
}
inline void ProtectPetReq::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// -------------------------------------------------------------------

// ProtectPetAck

// optional uint64 pet_id = 1;
inline bool ProtectPetAck::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtectPetAck::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtectPetAck::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtectPetAck::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 ProtectPetAck::pet_id() const {
  return pet_id_;
}
inline void ProtectPetAck::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional int32 err_no = 2;
inline bool ProtectPetAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtectPetAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtectPetAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtectPetAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ProtectPetAck::err_no() const {
  return err_no_;
}
inline void ProtectPetAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// SellPetToSysReq

// repeated uint64 pet_ids = 1;
inline int SellPetToSysReq::pet_ids_size() const {
  return pet_ids_.size();
}
inline void SellPetToSysReq::clear_pet_ids() {
  pet_ids_.Clear();
}
inline ::google::protobuf::uint64 SellPetToSysReq::pet_ids(int index) const {
  return pet_ids_.Get(index);
}
inline void SellPetToSysReq::set_pet_ids(int index, ::google::protobuf::uint64 value) {
  pet_ids_.Set(index, value);
}
inline void SellPetToSysReq::add_pet_ids(::google::protobuf::uint64 value) {
  pet_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SellPetToSysReq::pet_ids() const {
  return pet_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SellPetToSysReq::mutable_pet_ids() {
  return &pet_ids_;
}

// -------------------------------------------------------------------

// SellPetToSysAck

// repeated uint64 pet_ids = 1;
inline int SellPetToSysAck::pet_ids_size() const {
  return pet_ids_.size();
}
inline void SellPetToSysAck::clear_pet_ids() {
  pet_ids_.Clear();
}
inline ::google::protobuf::uint64 SellPetToSysAck::pet_ids(int index) const {
  return pet_ids_.Get(index);
}
inline void SellPetToSysAck::set_pet_ids(int index, ::google::protobuf::uint64 value) {
  pet_ids_.Set(index, value);
}
inline void SellPetToSysAck::add_pet_ids(::google::protobuf::uint64 value) {
  pet_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SellPetToSysAck::pet_ids() const {
  return pet_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SellPetToSysAck::mutable_pet_ids() {
  return &pet_ids_;
}

// optional int32 err_no = 2;
inline bool SellPetToSysAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellPetToSysAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellPetToSysAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellPetToSysAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SellPetToSysAck::err_no() const {
  return err_no_;
}
inline void SellPetToSysAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PetInBianDui

// optional uint64 pet_id = 1;
inline bool PetInBianDui::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetInBianDui::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetInBianDui::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetInBianDui::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 PetInBianDui::pet_id() const {
  return pet_id_;
}
inline void PetInBianDui::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional uint32 idx = 2;
inline bool PetInBianDui::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetInBianDui::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetInBianDui::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetInBianDui::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 PetInBianDui::idx() const {
  return idx_;
}
inline void PetInBianDui::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// optional uint32 number = 3;
inline bool PetInBianDui::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetInBianDui::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetInBianDui::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetInBianDui::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 PetInBianDui::number() const {
  return number_;
}
inline void PetInBianDui::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// BianDuiData

// optional uint32 index = 1;
inline bool BianDuiData::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BianDuiData::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BianDuiData::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BianDuiData::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 BianDuiData::index() const {
  return index_;
}
inline void BianDuiData::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional string name = 2;
inline bool BianDuiData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BianDuiData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BianDuiData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BianDuiData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BianDuiData::name() const {
  return *name_;
}
inline void BianDuiData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BianDuiData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BianDuiData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BianDuiData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BianDuiData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BianDuiData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 admin_pet_id = 3;
inline bool BianDuiData::has_admin_pet_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BianDuiData::set_has_admin_pet_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BianDuiData::clear_has_admin_pet_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BianDuiData::clear_admin_pet_id() {
  admin_pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_admin_pet_id();
}
inline ::google::protobuf::uint64 BianDuiData::admin_pet_id() const {
  return admin_pet_id_;
}
inline void BianDuiData::set_admin_pet_id(::google::protobuf::uint64 value) {
  set_has_admin_pet_id();
  admin_pet_id_ = value;
}

// repeated .protoc.gameproto.PetInBianDui pet = 4;
inline int BianDuiData::pet_size() const {
  return pet_.size();
}
inline void BianDuiData::clear_pet() {
  pet_.Clear();
}
inline const ::protoc::gameproto::PetInBianDui& BianDuiData::pet(int index) const {
  return pet_.Get(index);
}
inline ::protoc::gameproto::PetInBianDui* BianDuiData::mutable_pet(int index) {
  return pet_.Mutable(index);
}
inline ::protoc::gameproto::PetInBianDui* BianDuiData::add_pet() {
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetInBianDui >&
BianDuiData::pet() const {
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetInBianDui >*
BianDuiData::mutable_pet() {
  return &pet_;
}

// optional int32 total_attack = 5;
inline bool BianDuiData::has_total_attack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BianDuiData::set_has_total_attack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BianDuiData::clear_has_total_attack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BianDuiData::clear_total_attack() {
  total_attack_ = 0;
  clear_has_total_attack();
}
inline ::google::protobuf::int32 BianDuiData::total_attack() const {
  return total_attack_;
}
inline void BianDuiData::set_total_attack(::google::protobuf::int32 value) {
  set_has_total_attack();
  total_attack_ = value;
}

// optional bool state = 6;
inline bool BianDuiData::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BianDuiData::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BianDuiData::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BianDuiData::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool BianDuiData::state() const {
  return state_;
}
inline void BianDuiData::set_state(bool value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// BianDuiList

// repeated .protoc.gameproto.BianDuiData data = 1;
inline int BianDuiList::data_size() const {
  return data_.size();
}
inline void BianDuiList::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::BianDuiData& BianDuiList::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::BianDuiData* BianDuiList::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::BianDuiData* BianDuiList::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BianDuiData >&
BianDuiList::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BianDuiData >*
BianDuiList::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SubBianDuiReq

// optional .protoc.gameproto.BianDuiData biandui = 1;
inline bool SubBianDuiReq::has_biandui() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubBianDuiReq::set_has_biandui() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubBianDuiReq::clear_has_biandui() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubBianDuiReq::clear_biandui() {
  if (biandui_ != NULL) biandui_->::protoc::gameproto::BianDuiData::Clear();
  clear_has_biandui();
}
inline const ::protoc::gameproto::BianDuiData& SubBianDuiReq::biandui() const {
  return biandui_ != NULL ? *biandui_ : *default_instance_->biandui_;
}
inline ::protoc::gameproto::BianDuiData* SubBianDuiReq::mutable_biandui() {
  set_has_biandui();
  if (biandui_ == NULL) biandui_ = new ::protoc::gameproto::BianDuiData;
  return biandui_;
}
inline ::protoc::gameproto::BianDuiData* SubBianDuiReq::release_biandui() {
  clear_has_biandui();
  ::protoc::gameproto::BianDuiData* temp = biandui_;
  biandui_ = NULL;
  return temp;
}
inline void SubBianDuiReq::set_allocated_biandui(::protoc::gameproto::BianDuiData* biandui) {
  delete biandui_;
  biandui_ = biandui;
  if (biandui) {
    set_has_biandui();
  } else {
    clear_has_biandui();
  }
}

// -------------------------------------------------------------------

// SubBianDuiAck

// optional uint32 idx = 1;
inline bool SubBianDuiAck::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubBianDuiAck::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubBianDuiAck::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubBianDuiAck::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 SubBianDuiAck::idx() const {
  return idx_;
}
inline void SubBianDuiAck::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// optional int32 err_no = 2;
inline bool SubBianDuiAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubBianDuiAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubBianDuiAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubBianDuiAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SubBianDuiAck::err_no() const {
  return err_no_;
}
inline void SubBianDuiAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// ModifyBianDuiNameReq

// optional string name = 1;
inline bool ModifyBianDuiNameReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyBianDuiNameReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyBianDuiNameReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyBianDuiNameReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ModifyBianDuiNameReq::name() const {
  return *name_;
}
inline void ModifyBianDuiNameReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ModifyBianDuiNameReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ModifyBianDuiNameReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ModifyBianDuiNameReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ModifyBianDuiNameReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ModifyBianDuiNameReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ModifyBianDuiNameAck

// optional string name = 1;
inline bool ModifyBianDuiNameAck::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyBianDuiNameAck::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyBianDuiNameAck::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyBianDuiNameAck::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ModifyBianDuiNameAck::name() const {
  return *name_;
}
inline void ModifyBianDuiNameAck::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ModifyBianDuiNameAck::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ModifyBianDuiNameAck::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ModifyBianDuiNameAck::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ModifyBianDuiNameAck::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ModifyBianDuiNameAck::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 err_no = 2;
inline bool ModifyBianDuiNameAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyBianDuiNameAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyBianDuiNameAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyBianDuiNameAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ModifyBianDuiNameAck::err_no() const {
  return err_no_;
}
inline void ModifyBianDuiNameAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// ModifyBIanDuiDataReq

// optional uint64 pet_id_1 = 1;
inline bool ModifyBIanDuiDataReq::has_pet_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyBIanDuiDataReq::set_has_pet_id_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyBIanDuiDataReq::clear_has_pet_id_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyBIanDuiDataReq::clear_pet_id_1() {
  pet_id_1_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id_1();
}
inline ::google::protobuf::uint64 ModifyBIanDuiDataReq::pet_id_1() const {
  return pet_id_1_;
}
inline void ModifyBIanDuiDataReq::set_pet_id_1(::google::protobuf::uint64 value) {
  set_has_pet_id_1();
  pet_id_1_ = value;
}

// optional uint64 pet_id_2 = 2;
inline bool ModifyBIanDuiDataReq::has_pet_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyBIanDuiDataReq::set_has_pet_id_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyBIanDuiDataReq::clear_has_pet_id_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyBIanDuiDataReq::clear_pet_id_2() {
  pet_id_2_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id_2();
}
inline ::google::protobuf::uint64 ModifyBIanDuiDataReq::pet_id_2() const {
  return pet_id_2_;
}
inline void ModifyBIanDuiDataReq::set_pet_id_2(::google::protobuf::uint64 value) {
  set_has_pet_id_2();
  pet_id_2_ = value;
}

// optional uint32 queue_idx = 3;
inline bool ModifyBIanDuiDataReq::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyBIanDuiDataReq::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyBIanDuiDataReq::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyBIanDuiDataReq::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 ModifyBIanDuiDataReq::queue_idx() const {
  return queue_idx_;
}
inline void ModifyBIanDuiDataReq::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// ModifyBIanDuiDataAck

// optional uint64 pet_id_1 = 1;
inline bool ModifyBIanDuiDataAck::has_pet_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModifyBIanDuiDataAck::set_has_pet_id_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModifyBIanDuiDataAck::clear_has_pet_id_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModifyBIanDuiDataAck::clear_pet_id_1() {
  pet_id_1_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id_1();
}
inline ::google::protobuf::uint64 ModifyBIanDuiDataAck::pet_id_1() const {
  return pet_id_1_;
}
inline void ModifyBIanDuiDataAck::set_pet_id_1(::google::protobuf::uint64 value) {
  set_has_pet_id_1();
  pet_id_1_ = value;
}

// optional uint64 pet_id_2 = 2;
inline bool ModifyBIanDuiDataAck::has_pet_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModifyBIanDuiDataAck::set_has_pet_id_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModifyBIanDuiDataAck::clear_has_pet_id_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModifyBIanDuiDataAck::clear_pet_id_2() {
  pet_id_2_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id_2();
}
inline ::google::protobuf::uint64 ModifyBIanDuiDataAck::pet_id_2() const {
  return pet_id_2_;
}
inline void ModifyBIanDuiDataAck::set_pet_id_2(::google::protobuf::uint64 value) {
  set_has_pet_id_2();
  pet_id_2_ = value;
}

// optional int32 err_no = 3;
inline bool ModifyBIanDuiDataAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModifyBIanDuiDataAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModifyBIanDuiDataAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModifyBIanDuiDataAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ModifyBIanDuiDataAck::err_no() const {
  return err_no_;
}
inline void ModifyBIanDuiDataAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 queue_idx = 4;
inline bool ModifyBIanDuiDataAck::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModifyBIanDuiDataAck::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModifyBIanDuiDataAck::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModifyBIanDuiDataAck::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 ModifyBIanDuiDataAck::queue_idx() const {
  return queue_idx_;
}
inline void ModifyBIanDuiDataAck::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// BianDuiNtf

// optional .protoc.gameproto.BianDuiData queue = 1;
inline bool BianDuiNtf::has_queue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BianDuiNtf::set_has_queue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BianDuiNtf::clear_has_queue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BianDuiNtf::clear_queue() {
  if (queue_ != NULL) queue_->::protoc::gameproto::BianDuiData::Clear();
  clear_has_queue();
}
inline const ::protoc::gameproto::BianDuiData& BianDuiNtf::queue() const {
  return queue_ != NULL ? *queue_ : *default_instance_->queue_;
}
inline ::protoc::gameproto::BianDuiData* BianDuiNtf::mutable_queue() {
  set_has_queue();
  if (queue_ == NULL) queue_ = new ::protoc::gameproto::BianDuiData;
  return queue_;
}
inline ::protoc::gameproto::BianDuiData* BianDuiNtf::release_queue() {
  clear_has_queue();
  ::protoc::gameproto::BianDuiData* temp = queue_;
  queue_ = NULL;
  return temp;
}
inline void BianDuiNtf::set_allocated_queue(::protoc::gameproto::BianDuiData* queue) {
  delete queue_;
  queue_ = queue;
  if (queue) {
    set_has_queue();
  } else {
    clear_has_queue();
  }
}

// -------------------------------------------------------------------

// AddBianDui

// optional .protoc.gameproto.BianDuiData queue = 1;
inline bool AddBianDui::has_queue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBianDui::set_has_queue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBianDui::clear_has_queue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBianDui::clear_queue() {
  if (queue_ != NULL) queue_->::protoc::gameproto::BianDuiData::Clear();
  clear_has_queue();
}
inline const ::protoc::gameproto::BianDuiData& AddBianDui::queue() const {
  return queue_ != NULL ? *queue_ : *default_instance_->queue_;
}
inline ::protoc::gameproto::BianDuiData* AddBianDui::mutable_queue() {
  set_has_queue();
  if (queue_ == NULL) queue_ = new ::protoc::gameproto::BianDuiData;
  return queue_;
}
inline ::protoc::gameproto::BianDuiData* AddBianDui::release_queue() {
  clear_has_queue();
  ::protoc::gameproto::BianDuiData* temp = queue_;
  queue_ = NULL;
  return temp;
}
inline void AddBianDui::set_allocated_queue(::protoc::gameproto::BianDuiData* queue) {
  delete queue_;
  queue_ = queue;
  if (queue) {
    set_has_queue();
  } else {
    clear_has_queue();
  }
}

// -------------------------------------------------------------------

// GetCurBianDuiReq

// optional uint32 idx = 1;
inline bool GetCurBianDuiReq::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCurBianDuiReq::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCurBianDuiReq::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCurBianDuiReq::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 GetCurBianDuiReq::idx() const {
  return idx_;
}
inline void GetCurBianDuiReq::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// GetCurBianDuiAck

// optional .protoc.gameproto.BianDuiData biandui = 1;
inline bool GetCurBianDuiAck::has_biandui() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCurBianDuiAck::set_has_biandui() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCurBianDuiAck::clear_has_biandui() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCurBianDuiAck::clear_biandui() {
  if (biandui_ != NULL) biandui_->::protoc::gameproto::BianDuiData::Clear();
  clear_has_biandui();
}
inline const ::protoc::gameproto::BianDuiData& GetCurBianDuiAck::biandui() const {
  return biandui_ != NULL ? *biandui_ : *default_instance_->biandui_;
}
inline ::protoc::gameproto::BianDuiData* GetCurBianDuiAck::mutable_biandui() {
  set_has_biandui();
  if (biandui_ == NULL) biandui_ = new ::protoc::gameproto::BianDuiData;
  return biandui_;
}
inline ::protoc::gameproto::BianDuiData* GetCurBianDuiAck::release_biandui() {
  clear_has_biandui();
  ::protoc::gameproto::BianDuiData* temp = biandui_;
  biandui_ = NULL;
  return temp;
}
inline void GetCurBianDuiAck::set_allocated_biandui(::protoc::gameproto::BianDuiData* biandui) {
  delete biandui_;
  biandui_ = biandui;
  if (biandui) {
    set_has_biandui();
  } else {
    clear_has_biandui();
  }
}

// optional int32 err_no = 2;
inline bool GetCurBianDuiAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCurBianDuiAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCurBianDuiAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCurBianDuiAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetCurBianDuiAck::err_no() const {
  return err_no_;
}
inline void GetCurBianDuiAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// SetCurBianDuiReq

// optional uint32 queue_id = 1;
inline bool SetCurBianDuiReq::has_queue_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetCurBianDuiReq::set_has_queue_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetCurBianDuiReq::clear_has_queue_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetCurBianDuiReq::clear_queue_id() {
  queue_id_ = 0u;
  clear_has_queue_id();
}
inline ::google::protobuf::uint32 SetCurBianDuiReq::queue_id() const {
  return queue_id_;
}
inline void SetCurBianDuiReq::set_queue_id(::google::protobuf::uint32 value) {
  set_has_queue_id();
  queue_id_ = value;
}

// -------------------------------------------------------------------

// SetCurBianDuiAck

// optional uint32 queue_id = 1;
inline bool SetCurBianDuiAck::has_queue_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetCurBianDuiAck::set_has_queue_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetCurBianDuiAck::clear_has_queue_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetCurBianDuiAck::clear_queue_id() {
  queue_id_ = 0u;
  clear_has_queue_id();
}
inline ::google::protobuf::uint32 SetCurBianDuiAck::queue_id() const {
  return queue_id_;
}
inline void SetCurBianDuiAck::set_queue_id(::google::protobuf::uint32 value) {
  set_has_queue_id();
  queue_id_ = value;
}

// optional int32 err_no = 2;
inline bool SetCurBianDuiAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetCurBianDuiAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetCurBianDuiAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetCurBianDuiAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SetCurBianDuiAck::err_no() const {
  return err_no_;
}
inline void SetCurBianDuiAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// AddPetToBianDuiReq

// optional uint64 pet_id = 1;
inline bool AddPetToBianDuiReq::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPetToBianDuiReq::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPetToBianDuiReq::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPetToBianDuiReq::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 AddPetToBianDuiReq::pet_id() const {
  return pet_id_;
}
inline void AddPetToBianDuiReq::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional uint32 idx = 2;
inline bool AddPetToBianDuiReq::has_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddPetToBianDuiReq::set_has_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddPetToBianDuiReq::clear_has_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddPetToBianDuiReq::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 AddPetToBianDuiReq::idx() const {
  return idx_;
}
inline void AddPetToBianDuiReq::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// optional uint32 queue_idx = 3;
inline bool AddPetToBianDuiReq::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddPetToBianDuiReq::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddPetToBianDuiReq::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddPetToBianDuiReq::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 AddPetToBianDuiReq::queue_idx() const {
  return queue_idx_;
}
inline void AddPetToBianDuiReq::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// AddPetToBianDuiAck

// optional uint64 pet_id = 1;
inline bool AddPetToBianDuiAck::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPetToBianDuiAck::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPetToBianDuiAck::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPetToBianDuiAck::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 AddPetToBianDuiAck::pet_id() const {
  return pet_id_;
}
inline void AddPetToBianDuiAck::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional int32 err_no = 2;
inline bool AddPetToBianDuiAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddPetToBianDuiAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddPetToBianDuiAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddPetToBianDuiAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 AddPetToBianDuiAck::err_no() const {
  return err_no_;
}
inline void AddPetToBianDuiAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 queue_idx = 3;
inline bool AddPetToBianDuiAck::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddPetToBianDuiAck::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddPetToBianDuiAck::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddPetToBianDuiAck::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 AddPetToBianDuiAck::queue_idx() const {
  return queue_idx_;
}
inline void AddPetToBianDuiAck::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// DelPetToBianDuiReq

// optional uint64 pet_id = 1;
inline bool DelPetToBianDuiReq::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelPetToBianDuiReq::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelPetToBianDuiReq::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelPetToBianDuiReq::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 DelPetToBianDuiReq::pet_id() const {
  return pet_id_;
}
inline void DelPetToBianDuiReq::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional uint32 queue_idx = 3;
inline bool DelPetToBianDuiReq::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelPetToBianDuiReq::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelPetToBianDuiReq::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelPetToBianDuiReq::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 DelPetToBianDuiReq::queue_idx() const {
  return queue_idx_;
}
inline void DelPetToBianDuiReq::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// DelPetToBianDuiAck

// optional uint64 pet_id = 1;
inline bool DelPetToBianDuiAck::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelPetToBianDuiAck::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelPetToBianDuiAck::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelPetToBianDuiAck::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 DelPetToBianDuiAck::pet_id() const {
  return pet_id_;
}
inline void DelPetToBianDuiAck::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional int32 err_no = 2;
inline bool DelPetToBianDuiAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelPetToBianDuiAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelPetToBianDuiAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelPetToBianDuiAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 DelPetToBianDuiAck::err_no() const {
  return err_no_;
}
inline void DelPetToBianDuiAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 queue_idx = 3;
inline bool DelPetToBianDuiAck::has_queue_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelPetToBianDuiAck::set_has_queue_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelPetToBianDuiAck::clear_has_queue_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelPetToBianDuiAck::clear_queue_idx() {
  queue_idx_ = 0u;
  clear_has_queue_idx();
}
inline ::google::protobuf::uint32 DelPetToBianDuiAck::queue_idx() const {
  return queue_idx_;
}
inline void DelPetToBianDuiAck::set_queue_idx(::google::protobuf::uint32 value) {
  set_has_queue_idx();
  queue_idx_ = value;
}

// -------------------------------------------------------------------

// AddPetMaxNumberReq

// -------------------------------------------------------------------

// AddPetMaxNumberAck

// optional int32 err_no = 1;
inline bool AddPetMaxNumberAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPetMaxNumberAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPetMaxNumberAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPetMaxNumberAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 AddPetMaxNumberAck::err_no() const {
  return err_no_;
}
inline void AddPetMaxNumberAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// AddQueueMaxNumberReq

// -------------------------------------------------------------------

// AddQueueMaxNumberAck

// optional int32 err_no = 1;
inline bool AddQueueMaxNumberAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddQueueMaxNumberAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddQueueMaxNumberAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddQueueMaxNumberAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 AddQueueMaxNumberAck::err_no() const {
  return err_no_;
}
inline void AddQueueMaxNumberAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PetMaxNumberNtf

// optional uint32 number = 1;
inline bool PetMaxNumberNtf::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetMaxNumberNtf::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetMaxNumberNtf::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetMaxNumberNtf::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 PetMaxNumberNtf::number() const {
  return number_;
}
inline void PetMaxNumberNtf::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// QueueMaxNumberNtf

// optional uint32 number = 1;
inline bool QueueMaxNumberNtf::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueueMaxNumberNtf::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueueMaxNumberNtf::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueueMaxNumberNtf::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 QueueMaxNumberNtf::number() const {
  return number_;
}
inline void QueueMaxNumberNtf::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// UpdateCurBianDuiIdx

// optional uint32 idx = 1;
inline bool UpdateCurBianDuiIdx::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateCurBianDuiIdx::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateCurBianDuiIdx::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateCurBianDuiIdx::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 UpdateCurBianDuiIdx::idx() const {
  return idx_;
}
inline void UpdateCurBianDuiIdx::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// RecoverActiveCountReq

// -------------------------------------------------------------------

// RecoverActiveCountAck

// optional int32 err_no = 1;
inline bool RecoverActiveCountAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecoverActiveCountAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecoverActiveCountAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecoverActiveCountAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 RecoverActiveCountAck::err_no() const {
  return err_no_;
}
inline void RecoverActiveCountAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// ActiveCountNtf

// optional uint32 count = 1;
inline bool ActiveCountNtf::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveCountNtf::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveCountNtf::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveCountNtf::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ActiveCountNtf::count() const {
  return count_;
}
inline void ActiveCountNtf::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// SpiritNtf

// optional uint32 spirit = 1;
inline bool SpiritNtf::has_spirit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritNtf::set_has_spirit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritNtf::clear_has_spirit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritNtf::clear_spirit() {
  spirit_ = 0u;
  clear_has_spirit();
}
inline ::google::protobuf::uint32 SpiritNtf::spirit() const {
  return spirit_;
}
inline void SpiritNtf::set_spirit(::google::protobuf::uint32 value) {
  set_has_spirit();
  spirit_ = value;
}

// -------------------------------------------------------------------

// UpdateHp

// optional uint32 hp = 1;
inline bool UpdateHp::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateHp::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateHp::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateHp::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 UpdateHp::hp() const {
  return hp_;
}
inline void UpdateHp::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// UpdateMp

// optional uint32 mp = 1;
inline bool UpdateMp::has_mp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateMp::set_has_mp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateMp::clear_has_mp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateMp::clear_mp() {
  mp_ = 0u;
  clear_has_mp();
}
inline ::google::protobuf::uint32 UpdateMp::mp() const {
  return mp_;
}
inline void UpdateMp::set_mp(::google::protobuf::uint32 value) {
  set_has_mp();
  mp_ = value;
}

// -------------------------------------------------------------------

// GoodsOfSell

// optional uint32 id = 1;
inline bool GoodsOfSell::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsOfSell::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsOfSell::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsOfSell::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GoodsOfSell::id() const {
  return id_;
}
inline void GoodsOfSell::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool GoodsOfSell::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsOfSell::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsOfSell::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsOfSell::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GoodsOfSell::name() const {
  return *name_;
}
inline void GoodsOfSell::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoodsOfSell::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoodsOfSell::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoodsOfSell::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GoodsOfSell::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GoodsOfSell::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 price = 3;
inline bool GoodsOfSell::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsOfSell::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsOfSell::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsOfSell::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 GoodsOfSell::price() const {
  return price_;
}
inline void GoodsOfSell::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 cost_type = 4;
inline bool GoodsOfSell::has_cost_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodsOfSell::set_has_cost_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodsOfSell::clear_has_cost_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodsOfSell::clear_cost_type() {
  cost_type_ = 0u;
  clear_has_cost_type();
}
inline ::google::protobuf::uint32 GoodsOfSell::cost_type() const {
  return cost_type_;
}
inline void GoodsOfSell::set_cost_type(::google::protobuf::uint32 value) {
  set_has_cost_type();
  cost_type_ = value;
}

// optional string desc = 5;
inline bool GoodsOfSell::has_desc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodsOfSell::set_has_desc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodsOfSell::clear_has_desc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodsOfSell::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& GoodsOfSell::desc() const {
  return *desc_;
}
inline void GoodsOfSell::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void GoodsOfSell::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void GoodsOfSell::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoodsOfSell::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* GoodsOfSell::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GoodsOfSell::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 price_1 = 6;
inline bool GoodsOfSell::has_price_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoodsOfSell::set_has_price_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoodsOfSell::clear_has_price_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoodsOfSell::clear_price_1() {
  price_1_ = 0u;
  clear_has_price_1();
}
inline ::google::protobuf::uint32 GoodsOfSell::price_1() const {
  return price_1_;
}
inline void GoodsOfSell::set_price_1(::google::protobuf::uint32 value) {
  set_has_price_1();
  price_1_ = value;
}

// optional float fpercent = 7;
inline bool GoodsOfSell::has_fpercent() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GoodsOfSell::set_has_fpercent() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GoodsOfSell::clear_has_fpercent() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GoodsOfSell::clear_fpercent() {
  fpercent_ = 0;
  clear_has_fpercent();
}
inline float GoodsOfSell::fpercent() const {
  return fpercent_;
}
inline void GoodsOfSell::set_fpercent(float value) {
  set_has_fpercent();
  fpercent_ = value;
}

// optional int32 last_month_days = 8;
inline bool GoodsOfSell::has_last_month_days() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GoodsOfSell::set_has_last_month_days() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GoodsOfSell::clear_has_last_month_days() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GoodsOfSell::clear_last_month_days() {
  last_month_days_ = 0;
  clear_has_last_month_days();
}
inline ::google::protobuf::int32 GoodsOfSell::last_month_days() const {
  return last_month_days_;
}
inline void GoodsOfSell::set_last_month_days(::google::protobuf::int32 value) {
  set_has_last_month_days();
  last_month_days_ = value;
}

// optional int64 zhaohuan_free_time = 9;
inline bool GoodsOfSell::has_zhaohuan_free_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GoodsOfSell::set_has_zhaohuan_free_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GoodsOfSell::clear_has_zhaohuan_free_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GoodsOfSell::clear_zhaohuan_free_time() {
  zhaohuan_free_time_ = GOOGLE_LONGLONG(0);
  clear_has_zhaohuan_free_time();
}
inline ::google::protobuf::int64 GoodsOfSell::zhaohuan_free_time() const {
  return zhaohuan_free_time_;
}
inline void GoodsOfSell::set_zhaohuan_free_time(::google::protobuf::int64 value) {
  set_has_zhaohuan_free_time();
  zhaohuan_free_time_ = value;
}

// optional uint32 show_id = 10;
inline bool GoodsOfSell::has_show_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GoodsOfSell::set_has_show_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GoodsOfSell::clear_has_show_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GoodsOfSell::clear_show_id() {
  show_id_ = 0u;
  clear_has_show_id();
}
inline ::google::protobuf::uint32 GoodsOfSell::show_id() const {
  return show_id_;
}
inline void GoodsOfSell::set_show_id(::google::protobuf::uint32 value) {
  set_has_show_id();
  show_id_ = value;
}

// -------------------------------------------------------------------

// GetShopListReq

// optional uint32 shopid = 1;
inline bool GetShopListReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetShopListReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetShopListReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetShopListReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 GetShopListReq::shopid() const {
  return shopid_;
}
inline void GetShopListReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// -------------------------------------------------------------------

// GetShopListAck

// optional uint32 shopid = 1;
inline bool GetShopListAck::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetShopListAck::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetShopListAck::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetShopListAck::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 GetShopListAck::shopid() const {
  return shopid_;
}
inline void GetShopListAck::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// repeated .protoc.gameproto.GoodsOfSell goods = 2;
inline int GetShopListAck::goods_size() const {
  return goods_.size();
}
inline void GetShopListAck::clear_goods() {
  goods_.Clear();
}
inline const ::protoc::gameproto::GoodsOfSell& GetShopListAck::goods(int index) const {
  return goods_.Get(index);
}
inline ::protoc::gameproto::GoodsOfSell* GetShopListAck::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::protoc::gameproto::GoodsOfSell* GetShopListAck::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsOfSell >&
GetShopListAck::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsOfSell >*
GetShopListAck::mutable_goods() {
  return &goods_;
}

// -------------------------------------------------------------------

// ShoppingReq

// optional uint32 shopid = 1;
inline bool ShoppingReq::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShoppingReq::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShoppingReq::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShoppingReq::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 ShoppingReq::shopid() const {
  return shopid_;
}
inline void ShoppingReq::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// optional uint32 id = 2;
inline bool ShoppingReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShoppingReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShoppingReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShoppingReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShoppingReq::id() const {
  return id_;
}
inline void ShoppingReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ShoppingAck

// optional uint32 shopid = 1;
inline bool ShoppingAck::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShoppingAck::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShoppingAck::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShoppingAck::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
inline ::google::protobuf::uint32 ShoppingAck::shopid() const {
  return shopid_;
}
inline void ShoppingAck::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
}

// optional uint32 id = 2;
inline bool ShoppingAck::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShoppingAck::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShoppingAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShoppingAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShoppingAck::id() const {
  return id_;
}
inline void ShoppingAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 err_no = 3;
inline bool ShoppingAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShoppingAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShoppingAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShoppingAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ShoppingAck::err_no() const {
  return err_no_;
}
inline void ShoppingAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// UpdateVIPLevel

// optional uint32 level = 1;
inline bool UpdateVIPLevel::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateVIPLevel::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateVIPLevel::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateVIPLevel::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UpdateVIPLevel::level() const {
  return level_;
}
inline void UpdateVIPLevel::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 sum_chongzhi = 2;
inline bool UpdateVIPLevel::has_sum_chongzhi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateVIPLevel::set_has_sum_chongzhi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateVIPLevel::clear_has_sum_chongzhi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateVIPLevel::clear_sum_chongzhi() {
  sum_chongzhi_ = 0u;
  clear_has_sum_chongzhi();
}
inline ::google::protobuf::uint32 UpdateVIPLevel::sum_chongzhi() const {
  return sum_chongzhi_;
}
inline void UpdateVIPLevel::set_sum_chongzhi(::google::protobuf::uint32 value) {
  set_has_sum_chongzhi();
  sum_chongzhi_ = value;
}

// -------------------------------------------------------------------

// UpdateFriendShip

// optional uint32 ship = 1;
inline bool UpdateFriendShip::has_ship() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriendShip::set_has_ship() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriendShip::clear_has_ship() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriendShip::clear_ship() {
  ship_ = 0u;
  clear_has_ship();
}
inline ::google::protobuf::uint32 UpdateFriendShip::ship() const {
  return ship_;
}
inline void UpdateFriendShip::set_ship(::google::protobuf::uint32 value) {
  set_has_ship();
  ship_ = value;
}

// -------------------------------------------------------------------

// ChongZhiOrderNtf

// optional uint64 order_id = 1;
inline bool ChongZhiOrderNtf::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChongZhiOrderNtf::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChongZhiOrderNtf::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChongZhiOrderNtf::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::uint64 ChongZhiOrderNtf::order_id() const {
  return order_id_;
}
inline void ChongZhiOrderNtf::set_order_id(::google::protobuf::uint64 value) {
  set_has_order_id();
  order_id_ = value;
}

// optional float money = 2;
inline bool ChongZhiOrderNtf::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChongZhiOrderNtf::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChongZhiOrderNtf::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChongZhiOrderNtf::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float ChongZhiOrderNtf::money() const {
  return money_;
}
inline void ChongZhiOrderNtf::set_money(float value) {
  set_has_money();
  money_ = value;
}

// optional string str_url = 3;
inline bool ChongZhiOrderNtf::has_str_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChongZhiOrderNtf::set_has_str_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChongZhiOrderNtf::clear_has_str_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChongZhiOrderNtf::clear_str_url() {
  if (str_url_ != &::google::protobuf::internal::kEmptyString) {
    str_url_->clear();
  }
  clear_has_str_url();
}
inline const ::std::string& ChongZhiOrderNtf::str_url() const {
  return *str_url_;
}
inline void ChongZhiOrderNtf::set_str_url(const ::std::string& value) {
  set_has_str_url();
  if (str_url_ == &::google::protobuf::internal::kEmptyString) {
    str_url_ = new ::std::string;
  }
  str_url_->assign(value);
}
inline void ChongZhiOrderNtf::set_str_url(const char* value) {
  set_has_str_url();
  if (str_url_ == &::google::protobuf::internal::kEmptyString) {
    str_url_ = new ::std::string;
  }
  str_url_->assign(value);
}
inline void ChongZhiOrderNtf::set_str_url(const char* value, size_t size) {
  set_has_str_url();
  if (str_url_ == &::google::protobuf::internal::kEmptyString) {
    str_url_ = new ::std::string;
  }
  str_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChongZhiOrderNtf::mutable_str_url() {
  set_has_str_url();
  if (str_url_ == &::google::protobuf::internal::kEmptyString) {
    str_url_ = new ::std::string;
  }
  return str_url_;
}
inline ::std::string* ChongZhiOrderNtf::release_str_url() {
  clear_has_str_url();
  if (str_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_url_;
    str_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChongZhiOrderNtf::set_allocated_str_url(::std::string* str_url) {
  if (str_url_ != &::google::protobuf::internal::kEmptyString) {
    delete str_url_;
  }
  if (str_url) {
    set_has_str_url();
    str_url_ = str_url;
  } else {
    clear_has_str_url();
    str_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BuffItemListReq

// optional .protoc.gameproto.BUFF_TYPE type = 1;
inline bool BuffItemListReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffItemListReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffItemListReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffItemListReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::BUFF_TYPE BuffItemListReq::type() const {
  return static_cast< ::protoc::gameproto::BUFF_TYPE >(type_);
}
inline void BuffItemListReq::set_type(::protoc::gameproto::BUFF_TYPE value) {
  assert(::protoc::gameproto::BUFF_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// BuffItemListAck

// optional int32 err_no = 1;
inline bool BuffItemListAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffItemListAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffItemListAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffItemListAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 BuffItemListAck::err_no() const {
  return err_no_;
}
inline void BuffItemListAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// repeated .protoc.gameproto.BuffItemInfo items = 2;
inline int BuffItemListAck::items_size() const {
  return items_.size();
}
inline void BuffItemListAck::clear_items() {
  items_.Clear();
}
inline const ::protoc::gameproto::BuffItemInfo& BuffItemListAck::items(int index) const {
  return items_.Get(index);
}
inline ::protoc::gameproto::BuffItemInfo* BuffItemListAck::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protoc::gameproto::BuffItemInfo* BuffItemListAck::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BuffItemInfo >&
BuffItemListAck::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BuffItemInfo >*
BuffItemListAck::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// BuffItemBuyReq

// repeated uint32 ids = 1;
inline int BuffItemBuyReq::ids_size() const {
  return ids_.size();
}
inline void BuffItemBuyReq::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 BuffItemBuyReq::ids(int index) const {
  return ids_.Get(index);
}
inline void BuffItemBuyReq::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void BuffItemBuyReq::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BuffItemBuyReq::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BuffItemBuyReq::mutable_ids() {
  return &ids_;
}

// optional .protoc.gameproto.BUFF_TYPE type = 2;
inline bool BuffItemBuyReq::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffItemBuyReq::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffItemBuyReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffItemBuyReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::BUFF_TYPE BuffItemBuyReq::type() const {
  return static_cast< ::protoc::gameproto::BUFF_TYPE >(type_);
}
inline void BuffItemBuyReq::set_type(::protoc::gameproto::BUFF_TYPE value) {
  assert(::protoc::gameproto::BUFF_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// BuffItemInfo

// optional uint32 id = 1;
inline bool BuffItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffItemInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BuffItemInfo::id() const {
  return id_;
}
inline void BuffItemInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 price = 2;
inline bool BuffItemInfo::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffItemInfo::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffItemInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffItemInfo::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 BuffItemInfo::price() const {
  return price_;
}
inline void BuffItemInfo::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
}

// optional uint32 number = 3;
inline bool BuffItemInfo::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffItemInfo::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffItemInfo::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffItemInfo::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 BuffItemInfo::number() const {
  return number_;
}
inline void BuffItemInfo::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// optional .protoc.gameproto.SELL_TYPE type = 4;
inline bool BuffItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffItemInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::SELL_TYPE BuffItemInfo::type() const {
  return static_cast< ::protoc::gameproto::SELL_TYPE >(type_);
}
inline void BuffItemInfo::set_type(::protoc::gameproto::SELL_TYPE value) {
  assert(::protoc::gameproto::SELL_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional string name = 5;
inline bool BuffItemInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffItemInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffItemInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffItemInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BuffItemInfo::name() const {
  return *name_;
}
inline void BuffItemInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BuffItemInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BuffItemInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuffItemInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BuffItemInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuffItemInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string desc = 6;
inline bool BuffItemInfo::has_desc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffItemInfo::set_has_desc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffItemInfo::clear_has_desc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffItemInfo::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& BuffItemInfo::desc() const {
  return *desc_;
}
inline void BuffItemInfo::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void BuffItemInfo::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void BuffItemInfo::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuffItemInfo::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* BuffItemInfo::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuffItemInfo::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool owned = 7;
inline bool BuffItemInfo::has_owned() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuffItemInfo::set_has_owned() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuffItemInfo::clear_has_owned() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuffItemInfo::clear_owned() {
  owned_ = false;
  clear_has_owned();
}
inline bool BuffItemInfo::owned() const {
  return owned_;
}
inline void BuffItemInfo::set_owned(bool value) {
  set_has_owned();
  owned_ = value;
}

// optional uint32 duration = 8;
inline bool BuffItemInfo::has_duration() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BuffItemInfo::set_has_duration() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BuffItemInfo::clear_has_duration() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BuffItemInfo::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 BuffItemInfo::duration() const {
  return duration_;
}
inline void BuffItemInfo::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
}

// -------------------------------------------------------------------

// RandomItemListReq

// optional .protoc.gameproto.BUFF_TYPE type = 1;
inline bool RandomItemListReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomItemListReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomItemListReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomItemListReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::BUFF_TYPE RandomItemListReq::type() const {
  return static_cast< ::protoc::gameproto::BUFF_TYPE >(type_);
}
inline void RandomItemListReq::set_type(::protoc::gameproto::BUFF_TYPE value) {
  assert(::protoc::gameproto::BUFF_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RandomItemListAck

// optional int32 err_no = 1;
inline bool RandomItemListAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomItemListAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomItemListAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomItemListAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 RandomItemListAck::err_no() const {
  return err_no_;
}
inline void RandomItemListAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional .protoc.gameproto.BuffItemInfo info = 2;
inline bool RandomItemListAck::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandomItemListAck::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RandomItemListAck::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RandomItemListAck::clear_info() {
  if (info_ != NULL) info_->::protoc::gameproto::BuffItemInfo::Clear();
  clear_has_info();
}
inline const ::protoc::gameproto::BuffItemInfo& RandomItemListAck::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::protoc::gameproto::BuffItemInfo* RandomItemListAck::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::protoc::gameproto::BuffItemInfo;
  return info_;
}
inline ::protoc::gameproto::BuffItemInfo* RandomItemListAck::release_info() {
  clear_has_info();
  ::protoc::gameproto::BuffItemInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RandomItemListAck::set_allocated_info(::protoc::gameproto::BuffItemInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// RandomItemBuyReq

// optional .protoc.gameproto.BUFF_TYPE type = 1;
inline bool RandomItemBuyReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandomItemBuyReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandomItemBuyReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandomItemBuyReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::protoc::gameproto::BUFF_TYPE RandomItemBuyReq::type() const {
  return static_cast< ::protoc::gameproto::BUFF_TYPE >(type_);
}
inline void RandomItemBuyReq::set_type(::protoc::gameproto::BUFF_TYPE value) {
  assert(::protoc::gameproto::BUFF_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// FriendData

// optional uint64 friend_id = 1;
inline bool FriendData::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendData::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendData::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendData::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 FriendData::friend_id() const {
  return friend_id_;
}
inline void FriendData::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional string name = 2;
inline bool FriendData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendData::name() const {
  return *name_;
}
inline void FriendData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FriendData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 head_id = 3;
inline bool FriendData::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendData::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendData::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendData::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 FriendData::head_id() const {
  return head_id_;
}
inline void FriendData::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint32 level = 4;
inline bool FriendData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FriendData::level() const {
  return level_;
}
inline void FriendData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 kind = 5;
inline bool FriendData::has_kind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendData::set_has_kind() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendData::clear_has_kind() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendData::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 FriendData::kind() const {
  return kind_;
}
inline void FriendData::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int64 last_online_time = 6;
inline bool FriendData::has_last_online_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendData::set_has_last_online_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendData::clear_has_last_online_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendData::clear_last_online_time() {
  last_online_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_online_time();
}
inline ::google::protobuf::int64 FriendData::last_online_time() const {
  return last_online_time_;
}
inline void FriendData::set_last_online_time(::google::protobuf::int64 value) {
  set_has_last_online_time();
  last_online_time_ = value;
}

// optional bool sex = 7;
inline bool FriendData::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendData::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendData::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool FriendData::sex() const {
  return sex_;
}
inline void FriendData::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 total_attack = 8;
inline bool FriendData::has_total_attack() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendData::set_has_total_attack() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendData::clear_has_total_attack() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendData::clear_total_attack() {
  total_attack_ = 0;
  clear_has_total_attack();
}
inline ::google::protobuf::int32 FriendData::total_attack() const {
  return total_attack_;
}
inline void FriendData::set_total_attack(::google::protobuf::int32 value) {
  set_has_total_attack();
  total_attack_ = value;
}

// -------------------------------------------------------------------

// FriendList

// repeated .protoc.gameproto.FriendData data = 1;
inline int FriendList::data_size() const {
  return data_.size();
}
inline void FriendList::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::FriendData& FriendList::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::FriendData* FriendList::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::FriendData* FriendList::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendData >&
FriendList::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendData >*
FriendList::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// UpdateFriend

// optional .protoc.gameproto.FriendData data = 1;
inline bool UpdateFriend::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateFriend::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateFriend::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateFriend::clear_data() {
  if (data_ != NULL) data_->::protoc::gameproto::FriendData::Clear();
  clear_has_data();
}
inline const ::protoc::gameproto::FriendData& UpdateFriend::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protoc::gameproto::FriendData* UpdateFriend::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protoc::gameproto::FriendData;
  return data_;
}
inline ::protoc::gameproto::FriendData* UpdateFriend::release_data() {
  clear_has_data();
  ::protoc::gameproto::FriendData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UpdateFriend::set_allocated_data(::protoc::gameproto::FriendData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// DelFriendReq

// optional uint64 friend_id = 1;
inline bool DelFriendReq::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelFriendReq::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelFriendReq::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelFriendReq::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DelFriendReq::friend_id() const {
  return friend_id_;
}
inline void DelFriendReq::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// -------------------------------------------------------------------

// DelFriendAck

// optional uint64 friend_id = 1;
inline bool DelFriendAck::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelFriendAck::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelFriendAck::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelFriendAck::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DelFriendAck::friend_id() const {
  return friend_id_;
}
inline void DelFriendAck::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional int32 err_no = 2;
inline bool DelFriendAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelFriendAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelFriendAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelFriendAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 DelFriendAck::err_no() const {
  return err_no_;
}
inline void DelFriendAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// DelFriendNtf

// optional uint64 friend_id = 1;
inline bool DelFriendNtf::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelFriendNtf::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelFriendNtf::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelFriendNtf::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 DelFriendNtf::friend_id() const {
  return friend_id_;
}
inline void DelFriendNtf::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// -------------------------------------------------------------------

// VisitFriendReq

// optional uint64 friend_id = 1;
inline bool VisitFriendReq::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisitFriendReq::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisitFriendReq::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisitFriendReq::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 VisitFriendReq::friend_id() const {
  return friend_id_;
}
inline void VisitFriendReq::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional bool cur_queue = 2;
inline bool VisitFriendReq::has_cur_queue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisitFriendReq::set_has_cur_queue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisitFriendReq::clear_has_cur_queue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisitFriendReq::clear_cur_queue() {
  cur_queue_ = false;
  clear_has_cur_queue();
}
inline bool VisitFriendReq::cur_queue() const {
  return cur_queue_;
}
inline void VisitFriendReq::set_cur_queue(bool value) {
  set_has_cur_queue();
  cur_queue_ = value;
}

// -------------------------------------------------------------------

// VisitFriendAck

// optional uint64 friend_id = 1;
inline bool VisitFriendAck::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisitFriendAck::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisitFriendAck::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisitFriendAck::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 VisitFriendAck::friend_id() const {
  return friend_id_;
}
inline void VisitFriendAck::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// repeated .protoc.gameproto.PetRecord pet = 2;
inline int VisitFriendAck::pet_size() const {
  return pet_.size();
}
inline void VisitFriendAck::clear_pet() {
  pet_.Clear();
}
inline const ::protoc::gameproto::PetRecord& VisitFriendAck::pet(int index) const {
  return pet_.Get(index);
}
inline ::protoc::gameproto::PetRecord* VisitFriendAck::mutable_pet(int index) {
  return pet_.Mutable(index);
}
inline ::protoc::gameproto::PetRecord* VisitFriendAck::add_pet() {
  return pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
VisitFriendAck::pet() const {
  return pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
VisitFriendAck::mutable_pet() {
  return &pet_;
}

// optional uint64 admin_id = 3;
inline bool VisitFriendAck::has_admin_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisitFriendAck::set_has_admin_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisitFriendAck::clear_has_admin_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisitFriendAck::clear_admin_id() {
  admin_id_ = GOOGLE_ULONGLONG(0);
  clear_has_admin_id();
}
inline ::google::protobuf::uint64 VisitFriendAck::admin_id() const {
  return admin_id_;
}
inline void VisitFriendAck::set_admin_id(::google::protobuf::uint64 value) {
  set_has_admin_id();
  admin_id_ = value;
}

// -------------------------------------------------------------------

// AskFriendData

// optional uint64 ask_friend_id = 1;
inline bool AskFriendData::has_ask_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskFriendData::set_has_ask_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskFriendData::clear_has_ask_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskFriendData::clear_ask_friend_id() {
  ask_friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ask_friend_id();
}
inline ::google::protobuf::uint64 AskFriendData::ask_friend_id() const {
  return ask_friend_id_;
}
inline void AskFriendData::set_ask_friend_id(::google::protobuf::uint64 value) {
  set_has_ask_friend_id();
  ask_friend_id_ = value;
}

// optional string name = 2;
inline bool AskFriendData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskFriendData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskFriendData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskFriendData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AskFriendData::name() const {
  return *name_;
}
inline void AskFriendData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AskFriendData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AskFriendData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AskFriendData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* AskFriendData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AskFriendData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 head_id = 3;
inline bool AskFriendData::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AskFriendData::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AskFriendData::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AskFriendData::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 AskFriendData::head_id() const {
  return head_id_;
}
inline void AskFriendData::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint32 level = 4;
inline bool AskFriendData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AskFriendData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AskFriendData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AskFriendData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 AskFriendData::level() const {
  return level_;
}
inline void AskFriendData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 kind = 5;
inline bool AskFriendData::has_kind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AskFriendData::set_has_kind() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AskFriendData::clear_has_kind() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AskFriendData::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 AskFriendData::kind() const {
  return kind_;
}
inline void AskFriendData::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// optional int64 ask_time = 6;
inline bool AskFriendData::has_ask_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AskFriendData::set_has_ask_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AskFriendData::clear_has_ask_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AskFriendData::clear_ask_time() {
  ask_time_ = GOOGLE_LONGLONG(0);
  clear_has_ask_time();
}
inline ::google::protobuf::int64 AskFriendData::ask_time() const {
  return ask_time_;
}
inline void AskFriendData::set_ask_time(::google::protobuf::int64 value) {
  set_has_ask_time();
  ask_time_ = value;
}

// optional int32 total_attack = 7;
inline bool AskFriendData::has_total_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AskFriendData::set_has_total_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AskFriendData::clear_has_total_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AskFriendData::clear_total_attack() {
  total_attack_ = 0;
  clear_has_total_attack();
}
inline ::google::protobuf::int32 AskFriendData::total_attack() const {
  return total_attack_;
}
inline void AskFriendData::set_total_attack(::google::protobuf::int32 value) {
  set_has_total_attack();
  total_attack_ = value;
}

// optional bool sex = 8;
inline bool AskFriendData::has_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AskFriendData::set_has_sex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AskFriendData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AskFriendData::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool AskFriendData::sex() const {
  return sex_;
}
inline void AskFriendData::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// GetAskFriendReq

// -------------------------------------------------------------------

// GetAskFriendAck

// repeated .protoc.gameproto.AskFriendData data = 1;
inline int GetAskFriendAck::data_size() const {
  return data_.size();
}
inline void GetAskFriendAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::AskFriendData& GetAskFriendAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::AskFriendData* GetAskFriendAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::AskFriendData* GetAskFriendAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::AskFriendData >&
GetAskFriendAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::AskFriendData >*
GetAskFriendAck::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// SearchPlayerReq

// optional uint64 player_id = 1;
inline bool SearchPlayerReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchPlayerReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchPlayerReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchPlayerReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 SearchPlayerReq::player_id() const {
  return player_id_;
}
inline void SearchPlayerReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string player_name = 2;
inline bool SearchPlayerReq::has_player_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchPlayerReq::set_has_player_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchPlayerReq::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchPlayerReq::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& SearchPlayerReq::player_name() const {
  return *player_name_;
}
inline void SearchPlayerReq::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void SearchPlayerReq::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void SearchPlayerReq::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SearchPlayerReq::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* SearchPlayerReq::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SearchPlayerReq::set_allocated_player_name(::std::string* player_name) {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (player_name) {
    set_has_player_name();
    player_name_ = player_name;
  } else {
    clear_has_player_name();
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SearchPlayerAck

// optional uint64 player_id = 1;
inline bool SearchPlayerAck::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchPlayerAck::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchPlayerAck::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchPlayerAck::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 SearchPlayerAck::player_id() const {
  return player_id_;
}
inline void SearchPlayerAck::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string name = 2;
inline bool SearchPlayerAck::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchPlayerAck::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchPlayerAck::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchPlayerAck::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SearchPlayerAck::name() const {
  return *name_;
}
inline void SearchPlayerAck::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SearchPlayerAck::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SearchPlayerAck::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SearchPlayerAck::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SearchPlayerAck::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SearchPlayerAck::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 head_id = 3;
inline bool SearchPlayerAck::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchPlayerAck::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchPlayerAck::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchPlayerAck::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 SearchPlayerAck::head_id() const {
  return head_id_;
}
inline void SearchPlayerAck::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint32 level = 4;
inline bool SearchPlayerAck::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SearchPlayerAck::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SearchPlayerAck::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SearchPlayerAck::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SearchPlayerAck::level() const {
  return level_;
}
inline void SearchPlayerAck::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 err_no = 5;
inline bool SearchPlayerAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SearchPlayerAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SearchPlayerAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SearchPlayerAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SearchPlayerAck::err_no() const {
  return err_no_;
}
inline void SearchPlayerAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional int32 total_attack = 6;
inline bool SearchPlayerAck::has_total_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SearchPlayerAck::set_has_total_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SearchPlayerAck::clear_has_total_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SearchPlayerAck::clear_total_attack() {
  total_attack_ = 0;
  clear_has_total_attack();
}
inline ::google::protobuf::int32 SearchPlayerAck::total_attack() const {
  return total_attack_;
}
inline void SearchPlayerAck::set_total_attack(::google::protobuf::int32 value) {
  set_has_total_attack();
  total_attack_ = value;
}

// optional bool sex = 7;
inline bool SearchPlayerAck::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SearchPlayerAck::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SearchPlayerAck::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SearchPlayerAck::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool SearchPlayerAck::sex() const {
  return sex_;
}
inline void SearchPlayerAck::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// AskFriendReq

// optional uint64 friend_id = 1;
inline bool AskFriendReq::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskFriendReq::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskFriendReq::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskFriendReq::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AskFriendReq::friend_id() const {
  return friend_id_;
}
inline void AskFriendReq::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// -------------------------------------------------------------------

// AskFriendAck

// optional uint64 friend_id = 1;
inline bool AskFriendAck::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskFriendAck::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskFriendAck::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskFriendAck::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 AskFriendAck::friend_id() const {
  return friend_id_;
}
inline void AskFriendAck::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional int32 err_no = 2;
inline bool AskFriendAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AskFriendAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AskFriendAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AskFriendAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 AskFriendAck::err_no() const {
  return err_no_;
}
inline void AskFriendAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// AddAskFriendNtf

// optional .protoc.gameproto.AskFriendData data = 1;
inline bool AddAskFriendNtf::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddAskFriendNtf::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddAskFriendNtf::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddAskFriendNtf::clear_data() {
  if (data_ != NULL) data_->::protoc::gameproto::AskFriendData::Clear();
  clear_has_data();
}
inline const ::protoc::gameproto::AskFriendData& AddAskFriendNtf::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protoc::gameproto::AskFriendData* AddAskFriendNtf::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protoc::gameproto::AskFriendData;
  return data_;
}
inline ::protoc::gameproto::AskFriendData* AddAskFriendNtf::release_data() {
  clear_has_data();
  ::protoc::gameproto::AskFriendData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void AddAskFriendNtf::set_allocated_data(::protoc::gameproto::AskFriendData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// ReplyAskReq

// optional uint64 friend_id = 1;
inline bool ReplyAskReq::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAskReq::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAskReq::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAskReq::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 ReplyAskReq::friend_id() const {
  return friend_id_;
}
inline void ReplyAskReq::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional bool reply = 2;
inline bool ReplyAskReq::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAskReq::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAskReq::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAskReq::clear_reply() {
  reply_ = false;
  clear_has_reply();
}
inline bool ReplyAskReq::reply() const {
  return reply_;
}
inline void ReplyAskReq::set_reply(bool value) {
  set_has_reply();
  reply_ = value;
}

// -------------------------------------------------------------------

// ReplyAskAck

// optional uint64 friend_id = 1;
inline bool ReplyAskAck::has_friend_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyAskAck::set_has_friend_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyAskAck::clear_has_friend_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyAskAck::clear_friend_id() {
  friend_id_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_id();
}
inline ::google::protobuf::uint64 ReplyAskAck::friend_id() const {
  return friend_id_;
}
inline void ReplyAskAck::set_friend_id(::google::protobuf::uint64 value) {
  set_has_friend_id();
  friend_id_ = value;
}

// optional int32 err_no = 2;
inline bool ReplyAskAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyAskAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyAskAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyAskAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ReplyAskAck::err_no() const {
  return err_no_;
}
inline void ReplyAskAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// NewAskFriendNtf

// -------------------------------------------------------------------

// SetAskFriendStateReq

// optional bool bflag = 1;
inline bool SetAskFriendStateReq::has_bflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAskFriendStateReq::set_has_bflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAskFriendStateReq::clear_has_bflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAskFriendStateReq::clear_bflag() {
  bflag_ = false;
  clear_has_bflag();
}
inline bool SetAskFriendStateReq::bflag() const {
  return bflag_;
}
inline void SetAskFriendStateReq::set_bflag(bool value) {
  set_has_bflag();
  bflag_ = value;
}

// -------------------------------------------------------------------

// SetAskFriendStateAck

// optional bool bflag = 1;
inline bool SetAskFriendStateAck::has_bflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAskFriendStateAck::set_has_bflag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAskFriendStateAck::clear_has_bflag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAskFriendStateAck::clear_bflag() {
  bflag_ = false;
  clear_has_bflag();
}
inline bool SetAskFriendStateAck::bflag() const {
  return bflag_;
}
inline void SetAskFriendStateAck::set_bflag(bool value) {
  set_has_bflag();
  bflag_ = value;
}

// optional int32 err_no = 2;
inline bool SetAskFriendStateAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetAskFriendStateAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetAskFriendStateAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetAskFriendStateAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SetAskFriendStateAck::err_no() const {
  return err_no_;
}
inline void SetAskFriendStateAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// GetChapterReq

// -------------------------------------------------------------------

// OneCheckPoint

// optional int32 check_point_id = 1;
inline bool OneCheckPoint::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneCheckPoint::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneCheckPoint::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneCheckPoint::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 OneCheckPoint::check_point_id() const {
  return check_point_id_;
}
inline void OneCheckPoint::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 seconds = 2;
inline bool OneCheckPoint::has_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneCheckPoint::set_has_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneCheckPoint::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneCheckPoint::clear_seconds() {
  seconds_ = 0;
  clear_has_seconds();
}
inline ::google::protobuf::int32 OneCheckPoint::seconds() const {
  return seconds_;
}
inline void OneCheckPoint::set_seconds(::google::protobuf::int32 value) {
  set_has_seconds();
  seconds_ = value;
}

// optional int32 challenged_count = 3;
inline bool OneCheckPoint::has_challenged_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneCheckPoint::set_has_challenged_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneCheckPoint::clear_has_challenged_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneCheckPoint::clear_challenged_count() {
  challenged_count_ = 0;
  clear_has_challenged_count();
}
inline ::google::protobuf::int32 OneCheckPoint::challenged_count() const {
  return challenged_count_;
}
inline void OneCheckPoint::set_challenged_count(::google::protobuf::int32 value) {
  set_has_challenged_count();
  challenged_count_ = value;
}

// optional int32 buy_challenged_count = 4;
inline bool OneCheckPoint::has_buy_challenged_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneCheckPoint::set_has_buy_challenged_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneCheckPoint::clear_has_buy_challenged_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneCheckPoint::clear_buy_challenged_count() {
  buy_challenged_count_ = 0;
  clear_has_buy_challenged_count();
}
inline ::google::protobuf::int32 OneCheckPoint::buy_challenged_count() const {
  return buy_challenged_count_;
}
inline void OneCheckPoint::set_buy_challenged_count(::google::protobuf::int32 value) {
  set_has_buy_challenged_count();
  buy_challenged_count_ = value;
}

// -------------------------------------------------------------------

// OneChapter

// optional int32 chapter_id = 1;
inline bool OneChapter::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneChapter::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneChapter::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneChapter::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 OneChapter::chapter_id() const {
  return chapter_id_;
}
inline void OneChapter::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// repeated .protoc.gameproto.OneCheckPoint points = 2;
inline int OneChapter::points_size() const {
  return points_.size();
}
inline void OneChapter::clear_points() {
  points_.Clear();
}
inline const ::protoc::gameproto::OneCheckPoint& OneChapter::points(int index) const {
  return points_.Get(index);
}
inline ::protoc::gameproto::OneCheckPoint* OneChapter::mutable_points(int index) {
  return points_.Mutable(index);
}
inline ::protoc::gameproto::OneCheckPoint* OneChapter::add_points() {
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneCheckPoint >&
OneChapter::points() const {
  return points_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneCheckPoint >*
OneChapter::mutable_points() {
  return &points_;
}

// optional int32 chapter_kind = 3;
inline bool OneChapter::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneChapter::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneChapter::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneChapter::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 OneChapter::chapter_kind() const {
  return chapter_kind_;
}
inline void OneChapter::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// optional int32 challenged_count = 4;
inline bool OneChapter::has_challenged_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneChapter::set_has_challenged_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneChapter::clear_has_challenged_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneChapter::clear_challenged_count() {
  challenged_count_ = 0;
  clear_has_challenged_count();
}
inline ::google::protobuf::int32 OneChapter::challenged_count() const {
  return challenged_count_;
}
inline void OneChapter::set_challenged_count(::google::protobuf::int32 value) {
  set_has_challenged_count();
  challenged_count_ = value;
}

// optional int32 is_active_chapter_open = 5;
inline bool OneChapter::has_is_active_chapter_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneChapter::set_has_is_active_chapter_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneChapter::clear_has_is_active_chapter_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneChapter::clear_is_active_chapter_open() {
  is_active_chapter_open_ = 0;
  clear_has_is_active_chapter_open();
}
inline ::google::protobuf::int32 OneChapter::is_active_chapter_open() const {
  return is_active_chapter_open_;
}
inline void OneChapter::set_is_active_chapter_open(::google::protobuf::int32 value) {
  set_has_is_active_chapter_open();
  is_active_chapter_open_ = value;
}

// optional int32 max_challenge_count = 6;
inline bool OneChapter::has_max_challenge_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneChapter::set_has_max_challenge_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneChapter::clear_has_max_challenge_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneChapter::clear_max_challenge_count() {
  max_challenge_count_ = 0;
  clear_has_max_challenge_count();
}
inline ::google::protobuf::int32 OneChapter::max_challenge_count() const {
  return max_challenge_count_;
}
inline void OneChapter::set_max_challenge_count(::google::protobuf::int32 value) {
  set_has_max_challenge_count();
  max_challenge_count_ = value;
}

// optional int32 lose_type = 7;
inline bool OneChapter::has_lose_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OneChapter::set_has_lose_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OneChapter::clear_has_lose_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OneChapter::clear_lose_type() {
  lose_type_ = 0;
  clear_has_lose_type();
}
inline ::google::protobuf::int32 OneChapter::lose_type() const {
  return lose_type_;
}
inline void OneChapter::set_lose_type(::google::protobuf::int32 value) {
  set_has_lose_type();
  lose_type_ = value;
}

// optional float times = 8;
inline bool OneChapter::has_times() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OneChapter::set_has_times() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OneChapter::clear_has_times() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OneChapter::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline float OneChapter::times() const {
  return times_;
}
inline void OneChapter::set_times(float value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// GetChapterAck

// repeated .protoc.gameproto.OneChapter chapters = 1;
inline int GetChapterAck::chapters_size() const {
  return chapters_.size();
}
inline void GetChapterAck::clear_chapters() {
  chapters_.Clear();
}
inline const ::protoc::gameproto::OneChapter& GetChapterAck::chapters(int index) const {
  return chapters_.Get(index);
}
inline ::protoc::gameproto::OneChapter* GetChapterAck::mutable_chapters(int index) {
  return chapters_.Mutable(index);
}
inline ::protoc::gameproto::OneChapter* GetChapterAck::add_chapters() {
  return chapters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >&
GetChapterAck::chapters() const {
  return chapters_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >*
GetChapterAck::mutable_chapters() {
  return &chapters_;
}

// optional int32 chapter_id = 2;
inline bool GetChapterAck::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetChapterAck::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetChapterAck::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetChapterAck::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 GetChapterAck::chapter_id() const {
  return chapter_id_;
}
inline void GetChapterAck::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 3;
inline bool GetChapterAck::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetChapterAck::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetChapterAck::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetChapterAck::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 GetChapterAck::check_point_id() const {
  return check_point_id_;
}
inline void GetChapterAck::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 next_chapter_id = 4;
inline bool GetChapterAck::has_next_chapter_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetChapterAck::set_has_next_chapter_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetChapterAck::clear_has_next_chapter_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetChapterAck::clear_next_chapter_id() {
  next_chapter_id_ = 0;
  clear_has_next_chapter_id();
}
inline ::google::protobuf::int32 GetChapterAck::next_chapter_id() const {
  return next_chapter_id_;
}
inline void GetChapterAck::set_next_chapter_id(::google::protobuf::int32 value) {
  set_has_next_chapter_id();
  next_chapter_id_ = value;
}

// optional int32 next_check_point_id = 5;
inline bool GetChapterAck::has_next_check_point_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetChapterAck::set_has_next_check_point_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetChapterAck::clear_has_next_check_point_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetChapterAck::clear_next_check_point_id() {
  next_check_point_id_ = 0;
  clear_has_next_check_point_id();
}
inline ::google::protobuf::int32 GetChapterAck::next_check_point_id() const {
  return next_check_point_id_;
}
inline void GetChapterAck::set_next_check_point_id(::google::protobuf::int32 value) {
  set_has_next_check_point_id();
  next_check_point_id_ = value;
}

// optional int32 jingying_chapter_id = 6;
inline bool GetChapterAck::has_jingying_chapter_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetChapterAck::set_has_jingying_chapter_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetChapterAck::clear_has_jingying_chapter_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetChapterAck::clear_jingying_chapter_id() {
  jingying_chapter_id_ = 0;
  clear_has_jingying_chapter_id();
}
inline ::google::protobuf::int32 GetChapterAck::jingying_chapter_id() const {
  return jingying_chapter_id_;
}
inline void GetChapterAck::set_jingying_chapter_id(::google::protobuf::int32 value) {
  set_has_jingying_chapter_id();
  jingying_chapter_id_ = value;
}

// optional int32 jingying_check_point_id = 7;
inline bool GetChapterAck::has_jingying_check_point_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetChapterAck::set_has_jingying_check_point_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetChapterAck::clear_has_jingying_check_point_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetChapterAck::clear_jingying_check_point_id() {
  jingying_check_point_id_ = 0;
  clear_has_jingying_check_point_id();
}
inline ::google::protobuf::int32 GetChapterAck::jingying_check_point_id() const {
  return jingying_check_point_id_;
}
inline void GetChapterAck::set_jingying_check_point_id(::google::protobuf::int32 value) {
  set_has_jingying_check_point_id();
  jingying_check_point_id_ = value;
}

// optional int32 jingying_next_chapter_id = 8;
inline bool GetChapterAck::has_jingying_next_chapter_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetChapterAck::set_has_jingying_next_chapter_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetChapterAck::clear_has_jingying_next_chapter_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetChapterAck::clear_jingying_next_chapter_id() {
  jingying_next_chapter_id_ = 0;
  clear_has_jingying_next_chapter_id();
}
inline ::google::protobuf::int32 GetChapterAck::jingying_next_chapter_id() const {
  return jingying_next_chapter_id_;
}
inline void GetChapterAck::set_jingying_next_chapter_id(::google::protobuf::int32 value) {
  set_has_jingying_next_chapter_id();
  jingying_next_chapter_id_ = value;
}

// optional int32 jingying_next_check_point_id = 9;
inline bool GetChapterAck::has_jingying_next_check_point_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetChapterAck::set_has_jingying_next_check_point_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetChapterAck::clear_has_jingying_next_check_point_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetChapterAck::clear_jingying_next_check_point_id() {
  jingying_next_check_point_id_ = 0;
  clear_has_jingying_next_check_point_id();
}
inline ::google::protobuf::int32 GetChapterAck::jingying_next_check_point_id() const {
  return jingying_next_check_point_id_;
}
inline void GetChapterAck::set_jingying_next_check_point_id(::google::protobuf::int32 value) {
  set_has_jingying_next_check_point_id();
  jingying_next_check_point_id_ = value;
}

// -------------------------------------------------------------------

// OneChapterLoseActivity

// optional int32 chapter_kind = 1;
inline bool OneChapterLoseActivity::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneChapterLoseActivity::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneChapterLoseActivity::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneChapterLoseActivity::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 OneChapterLoseActivity::chapter_kind() const {
  return chapter_kind_;
}
inline void OneChapterLoseActivity::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// optional int32 chapter_id = 2;
inline bool OneChapterLoseActivity::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneChapterLoseActivity::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneChapterLoseActivity::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneChapterLoseActivity::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 OneChapterLoseActivity::chapter_id() const {
  return chapter_id_;
}
inline void OneChapterLoseActivity::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 lose_type = 3;
inline bool OneChapterLoseActivity::has_lose_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneChapterLoseActivity::set_has_lose_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneChapterLoseActivity::clear_has_lose_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneChapterLoseActivity::clear_lose_type() {
  lose_type_ = 0;
  clear_has_lose_type();
}
inline ::google::protobuf::int32 OneChapterLoseActivity::lose_type() const {
  return lose_type_;
}
inline void OneChapterLoseActivity::set_lose_type(::google::protobuf::int32 value) {
  set_has_lose_type();
  lose_type_ = value;
}

// optional float times = 4;
inline bool OneChapterLoseActivity::has_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneChapterLoseActivity::set_has_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneChapterLoseActivity::clear_has_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneChapterLoseActivity::clear_times() {
  times_ = 0;
  clear_has_times();
}
inline float OneChapterLoseActivity::times() const {
  return times_;
}
inline void OneChapterLoseActivity::set_times(float value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// ChaptersLoseActivityNtf

// optional int64 begin_time = 1;
inline bool ChaptersLoseActivityNtf::has_begin_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChaptersLoseActivityNtf::set_has_begin_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChaptersLoseActivityNtf::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChaptersLoseActivityNtf::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
  clear_has_begin_time();
}
inline ::google::protobuf::int64 ChaptersLoseActivityNtf::begin_time() const {
  return begin_time_;
}
inline void ChaptersLoseActivityNtf::set_begin_time(::google::protobuf::int64 value) {
  set_has_begin_time();
  begin_time_ = value;
}

// optional int64 end_time = 2;
inline bool ChaptersLoseActivityNtf::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChaptersLoseActivityNtf::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChaptersLoseActivityNtf::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChaptersLoseActivityNtf::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 ChaptersLoseActivityNtf::end_time() const {
  return end_time_;
}
inline void ChaptersLoseActivityNtf::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// repeated .protoc.gameproto.OneChapterLoseActivity chapter_lose_activities = 3;
inline int ChaptersLoseActivityNtf::chapter_lose_activities_size() const {
  return chapter_lose_activities_.size();
}
inline void ChaptersLoseActivityNtf::clear_chapter_lose_activities() {
  chapter_lose_activities_.Clear();
}
inline const ::protoc::gameproto::OneChapterLoseActivity& ChaptersLoseActivityNtf::chapter_lose_activities(int index) const {
  return chapter_lose_activities_.Get(index);
}
inline ::protoc::gameproto::OneChapterLoseActivity* ChaptersLoseActivityNtf::mutable_chapter_lose_activities(int index) {
  return chapter_lose_activities_.Mutable(index);
}
inline ::protoc::gameproto::OneChapterLoseActivity* ChaptersLoseActivityNtf::add_chapter_lose_activities() {
  return chapter_lose_activities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapterLoseActivity >&
ChaptersLoseActivityNtf::chapter_lose_activities() const {
  return chapter_lose_activities_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapterLoseActivity >*
ChaptersLoseActivityNtf::mutable_chapter_lose_activities() {
  return &chapter_lose_activities_;
}

// -------------------------------------------------------------------

// AddActiveChapterNtf

// repeated .protoc.gameproto.OneChapter chapters = 1;
inline int AddActiveChapterNtf::chapters_size() const {
  return chapters_.size();
}
inline void AddActiveChapterNtf::clear_chapters() {
  chapters_.Clear();
}
inline const ::protoc::gameproto::OneChapter& AddActiveChapterNtf::chapters(int index) const {
  return chapters_.Get(index);
}
inline ::protoc::gameproto::OneChapter* AddActiveChapterNtf::mutable_chapters(int index) {
  return chapters_.Mutable(index);
}
inline ::protoc::gameproto::OneChapter* AddActiveChapterNtf::add_chapters() {
  return chapters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >&
AddActiveChapterNtf::chapters() const {
  return chapters_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::OneChapter >*
AddActiveChapterNtf::mutable_chapters() {
  return &chapters_;
}

// -------------------------------------------------------------------

// UpdateCheckPointNtf

// optional int32 chapter_id = 1;
inline bool UpdateCheckPointNtf::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateCheckPointNtf::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateCheckPointNtf::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateCheckPointNtf::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::chapter_id() const {
  return chapter_id_;
}
inline void UpdateCheckPointNtf::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional .protoc.gameproto.OneCheckPoint one_point = 2;
inline bool UpdateCheckPointNtf::has_one_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateCheckPointNtf::set_has_one_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateCheckPointNtf::clear_has_one_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateCheckPointNtf::clear_one_point() {
  if (one_point_ != NULL) one_point_->::protoc::gameproto::OneCheckPoint::Clear();
  clear_has_one_point();
}
inline const ::protoc::gameproto::OneCheckPoint& UpdateCheckPointNtf::one_point() const {
  return one_point_ != NULL ? *one_point_ : *default_instance_->one_point_;
}
inline ::protoc::gameproto::OneCheckPoint* UpdateCheckPointNtf::mutable_one_point() {
  set_has_one_point();
  if (one_point_ == NULL) one_point_ = new ::protoc::gameproto::OneCheckPoint;
  return one_point_;
}
inline ::protoc::gameproto::OneCheckPoint* UpdateCheckPointNtf::release_one_point() {
  clear_has_one_point();
  ::protoc::gameproto::OneCheckPoint* temp = one_point_;
  one_point_ = NULL;
  return temp;
}
inline void UpdateCheckPointNtf::set_allocated_one_point(::protoc::gameproto::OneCheckPoint* one_point) {
  delete one_point_;
  one_point_ = one_point;
  if (one_point) {
    set_has_one_point();
  } else {
    clear_has_one_point();
  }
}

// optional int32 next_chapter_id = 3;
inline bool UpdateCheckPointNtf::has_next_chapter_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateCheckPointNtf::set_has_next_chapter_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateCheckPointNtf::clear_has_next_chapter_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateCheckPointNtf::clear_next_chapter_id() {
  next_chapter_id_ = 0;
  clear_has_next_chapter_id();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::next_chapter_id() const {
  return next_chapter_id_;
}
inline void UpdateCheckPointNtf::set_next_chapter_id(::google::protobuf::int32 value) {
  set_has_next_chapter_id();
  next_chapter_id_ = value;
}

// optional int32 next_check_point_id = 4;
inline bool UpdateCheckPointNtf::has_next_check_point_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateCheckPointNtf::set_has_next_check_point_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateCheckPointNtf::clear_has_next_check_point_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateCheckPointNtf::clear_next_check_point_id() {
  next_check_point_id_ = 0;
  clear_has_next_check_point_id();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::next_check_point_id() const {
  return next_check_point_id_;
}
inline void UpdateCheckPointNtf::set_next_check_point_id(::google::protobuf::int32 value) {
  set_has_next_check_point_id();
  next_check_point_id_ = value;
}

// optional int32 chapter_kind = 5;
inline bool UpdateCheckPointNtf::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateCheckPointNtf::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateCheckPointNtf::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateCheckPointNtf::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::chapter_kind() const {
  return chapter_kind_;
}
inline void UpdateCheckPointNtf::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// optional int32 jingying_chapter_open = 6;
inline bool UpdateCheckPointNtf::has_jingying_chapter_open() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateCheckPointNtf::set_has_jingying_chapter_open() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateCheckPointNtf::clear_has_jingying_chapter_open() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateCheckPointNtf::clear_jingying_chapter_open() {
  jingying_chapter_open_ = 0;
  clear_has_jingying_chapter_open();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::jingying_chapter_open() const {
  return jingying_chapter_open_;
}
inline void UpdateCheckPointNtf::set_jingying_chapter_open(::google::protobuf::int32 value) {
  set_has_jingying_chapter_open();
  jingying_chapter_open_ = value;
}

// optional int32 jingying_chapter_id = 7;
inline bool UpdateCheckPointNtf::has_jingying_chapter_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UpdateCheckPointNtf::set_has_jingying_chapter_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UpdateCheckPointNtf::clear_has_jingying_chapter_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UpdateCheckPointNtf::clear_jingying_chapter_id() {
  jingying_chapter_id_ = 0;
  clear_has_jingying_chapter_id();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::jingying_chapter_id() const {
  return jingying_chapter_id_;
}
inline void UpdateCheckPointNtf::set_jingying_chapter_id(::google::protobuf::int32 value) {
  set_has_jingying_chapter_id();
  jingying_chapter_id_ = value;
}

// optional int32 jingying_check_point_id = 8;
inline bool UpdateCheckPointNtf::has_jingying_check_point_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UpdateCheckPointNtf::set_has_jingying_check_point_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UpdateCheckPointNtf::clear_has_jingying_check_point_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UpdateCheckPointNtf::clear_jingying_check_point_id() {
  jingying_check_point_id_ = 0;
  clear_has_jingying_check_point_id();
}
inline ::google::protobuf::int32 UpdateCheckPointNtf::jingying_check_point_id() const {
  return jingying_check_point_id_;
}
inline void UpdateCheckPointNtf::set_jingying_check_point_id(::google::protobuf::int32 value) {
  set_has_jingying_check_point_id();
  jingying_check_point_id_ = value;
}

// -------------------------------------------------------------------

// SelectCheckPointReq

// optional int32 chapter_id = 1;
inline bool SelectCheckPointReq::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectCheckPointReq::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectCheckPointReq::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectCheckPointReq::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 SelectCheckPointReq::chapter_id() const {
  return chapter_id_;
}
inline void SelectCheckPointReq::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 2;
inline bool SelectCheckPointReq::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectCheckPointReq::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectCheckPointReq::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectCheckPointReq::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 SelectCheckPointReq::check_point_id() const {
  return check_point_id_;
}
inline void SelectCheckPointReq::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 chapter_kind = 3;
inline bool SelectCheckPointReq::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectCheckPointReq::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectCheckPointReq::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectCheckPointReq::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 SelectCheckPointReq::chapter_kind() const {
  return chapter_kind_;
}
inline void SelectCheckPointReq::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// -------------------------------------------------------------------

// SelectCheckPointAck

// optional int32 chapter_id = 1;
inline bool SelectCheckPointAck::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectCheckPointAck::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectCheckPointAck::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectCheckPointAck::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 SelectCheckPointAck::chapter_id() const {
  return chapter_id_;
}
inline void SelectCheckPointAck::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 2;
inline bool SelectCheckPointAck::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectCheckPointAck::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectCheckPointAck::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectCheckPointAck::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 SelectCheckPointAck::check_point_id() const {
  return check_point_id_;
}
inline void SelectCheckPointAck::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 err_no = 3;
inline bool SelectCheckPointAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectCheckPointAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectCheckPointAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectCheckPointAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SelectCheckPointAck::err_no() const {
  return err_no_;
}
inline void SelectCheckPointAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional int32 chapter_kind = 4;
inline bool SelectCheckPointAck::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SelectCheckPointAck::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SelectCheckPointAck::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SelectCheckPointAck::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 SelectCheckPointAck::chapter_kind() const {
  return chapter_kind_;
}
inline void SelectCheckPointAck::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// optional int32 challenged_count = 5;
inline bool SelectCheckPointAck::has_challenged_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SelectCheckPointAck::set_has_challenged_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SelectCheckPointAck::clear_has_challenged_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SelectCheckPointAck::clear_challenged_count() {
  challenged_count_ = 0;
  clear_has_challenged_count();
}
inline ::google::protobuf::int32 SelectCheckPointAck::challenged_count() const {
  return challenged_count_;
}
inline void SelectCheckPointAck::set_challenged_count(::google::protobuf::int32 value) {
  set_has_challenged_count();
  challenged_count_ = value;
}

// optional int32 buy_challenged_count = 6;
inline bool SelectCheckPointAck::has_buy_challenged_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SelectCheckPointAck::set_has_buy_challenged_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SelectCheckPointAck::clear_has_buy_challenged_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SelectCheckPointAck::clear_buy_challenged_count() {
  buy_challenged_count_ = 0;
  clear_has_buy_challenged_count();
}
inline ::google::protobuf::int32 SelectCheckPointAck::buy_challenged_count() const {
  return buy_challenged_count_;
}
inline void SelectCheckPointAck::set_buy_challenged_count(::google::protobuf::int32 value) {
  set_has_buy_challenged_count();
  buy_challenged_count_ = value;
}

// -------------------------------------------------------------------

// GetCheckPointRankReq

// optional int32 chapter_id = 1;
inline bool GetCheckPointRankReq::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCheckPointRankReq::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCheckPointRankReq::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCheckPointRankReq::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 GetCheckPointRankReq::chapter_id() const {
  return chapter_id_;
}
inline void GetCheckPointRankReq::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 2;
inline bool GetCheckPointRankReq::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCheckPointRankReq::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCheckPointRankReq::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCheckPointRankReq::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 GetCheckPointRankReq::check_point_id() const {
  return check_point_id_;
}
inline void GetCheckPointRankReq::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 chapter_kind = 3;
inline bool GetCheckPointRankReq::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCheckPointRankReq::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCheckPointRankReq::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCheckPointRankReq::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 GetCheckPointRankReq::chapter_kind() const {
  return chapter_kind_;
}
inline void GetCheckPointRankReq::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// -------------------------------------------------------------------

// FriendRankItem

// optional int32 rank = 1;
inline bool FriendRankItem::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendRankItem::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendRankItem::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendRankItem::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 FriendRankItem::rank() const {
  return rank_;
}
inline void FriendRankItem::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional string name = 2;
inline bool FriendRankItem::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendRankItem::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendRankItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendRankItem::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendRankItem::name() const {
  return *name_;
}
inline void FriendRankItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendRankItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendRankItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendRankItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FriendRankItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendRankItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 head_id = 3;
inline bool FriendRankItem::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendRankItem::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendRankItem::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendRankItem::clear_head_id() {
  head_id_ = 0;
  clear_has_head_id();
}
inline ::google::protobuf::int32 FriendRankItem::head_id() const {
  return head_id_;
}
inline void FriendRankItem::set_head_id(::google::protobuf::int32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional int32 pass_seconds = 4;
inline bool FriendRankItem::has_pass_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendRankItem::set_has_pass_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendRankItem::clear_has_pass_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendRankItem::clear_pass_seconds() {
  pass_seconds_ = 0;
  clear_has_pass_seconds();
}
inline ::google::protobuf::int32 FriendRankItem::pass_seconds() const {
  return pass_seconds_;
}
inline void FriendRankItem::set_pass_seconds(::google::protobuf::int32 value) {
  set_has_pass_seconds();
  pass_seconds_ = value;
}

// -------------------------------------------------------------------

// GetCheckPointRankAck

// repeated .protoc.gameproto.FriendRankItem friend_rank = 1;
inline int GetCheckPointRankAck::friend_rank_size() const {
  return friend_rank_.size();
}
inline void GetCheckPointRankAck::clear_friend_rank() {
  friend_rank_.Clear();
}
inline const ::protoc::gameproto::FriendRankItem& GetCheckPointRankAck::friend_rank(int index) const {
  return friend_rank_.Get(index);
}
inline ::protoc::gameproto::FriendRankItem* GetCheckPointRankAck::mutable_friend_rank(int index) {
  return friend_rank_.Mutable(index);
}
inline ::protoc::gameproto::FriendRankItem* GetCheckPointRankAck::add_friend_rank() {
  return friend_rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendRankItem >&
GetCheckPointRankAck::friend_rank() const {
  return friend_rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendRankItem >*
GetCheckPointRankAck::mutable_friend_rank() {
  return &friend_rank_;
}

// optional int32 err_no = 2;
inline bool GetCheckPointRankAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCheckPointRankAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCheckPointRankAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCheckPointRankAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetCheckPointRankAck::err_no() const {
  return err_no_;
}
inline void GetCheckPointRankAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// GetFriendArmsReq

// -------------------------------------------------------------------

// FriendArms

// optional uint64 digitid = 1;
inline bool FriendArms::has_digitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendArms::set_has_digitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendArms::clear_has_digitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendArms::clear_digitid() {
  digitid_ = GOOGLE_ULONGLONG(0);
  clear_has_digitid();
}
inline ::google::protobuf::uint64 FriendArms::digitid() const {
  return digitid_;
}
inline void FriendArms::set_digitid(::google::protobuf::uint64 value) {
  set_has_digitid();
  digitid_ = value;
}

// optional string name = 2;
inline bool FriendArms::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendArms::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendArms::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendArms::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FriendArms::name() const {
  return *name_;
}
inline void FriendArms::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendArms::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FriendArms::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendArms::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FriendArms::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendArms::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .protoc.gameproto.PetRecord pet = 3;
inline bool FriendArms::has_pet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendArms::set_has_pet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendArms::clear_has_pet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendArms::clear_pet() {
  if (pet_ != NULL) pet_->::protoc::gameproto::PetRecord::Clear();
  clear_has_pet();
}
inline const ::protoc::gameproto::PetRecord& FriendArms::pet() const {
  return pet_ != NULL ? *pet_ : *default_instance_->pet_;
}
inline ::protoc::gameproto::PetRecord* FriendArms::mutable_pet() {
  set_has_pet();
  if (pet_ == NULL) pet_ = new ::protoc::gameproto::PetRecord;
  return pet_;
}
inline ::protoc::gameproto::PetRecord* FriendArms::release_pet() {
  clear_has_pet();
  ::protoc::gameproto::PetRecord* temp = pet_;
  pet_ = NULL;
  return temp;
}
inline void FriendArms::set_allocated_pet(::protoc::gameproto::PetRecord* pet) {
  delete pet_;
  pet_ = pet;
  if (pet) {
    set_has_pet();
  } else {
    clear_has_pet();
  }
}

// optional int32 friendship = 4;
inline bool FriendArms::has_friendship() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendArms::set_has_friendship() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendArms::clear_has_friendship() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendArms::clear_friendship() {
  friendship_ = 0;
  clear_has_friendship();
}
inline ::google::protobuf::int32 FriendArms::friendship() const {
  return friendship_;
}
inline void FriendArms::set_friendship(::google::protobuf::int32 value) {
  set_has_friendship();
  friendship_ = value;
}

// optional int32 level = 5;
inline bool FriendArms::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendArms::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendArms::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendArms::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendArms::level() const {
  return level_;
}
inline void FriendArms::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional bool is_friend = 6;
inline bool FriendArms::has_is_friend() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendArms::set_has_is_friend() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendArms::clear_has_is_friend() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendArms::clear_is_friend() {
  is_friend_ = false;
  clear_has_is_friend();
}
inline bool FriendArms::is_friend() const {
  return is_friend_;
}
inline void FriendArms::set_is_friend(bool value) {
  set_has_is_friend();
  is_friend_ = value;
}

// -------------------------------------------------------------------

// GetFriendArmsAck

// repeated .protoc.gameproto.FriendArms pets = 1;
inline int GetFriendArmsAck::pets_size() const {
  return pets_.size();
}
inline void GetFriendArmsAck::clear_pets() {
  pets_.Clear();
}
inline const ::protoc::gameproto::FriendArms& GetFriendArmsAck::pets(int index) const {
  return pets_.Get(index);
}
inline ::protoc::gameproto::FriendArms* GetFriendArmsAck::mutable_pets(int index) {
  return pets_.Mutable(index);
}
inline ::protoc::gameproto::FriendArms* GetFriendArmsAck::add_pets() {
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendArms >&
GetFriendArmsAck::pets() const {
  return pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::FriendArms >*
GetFriendArmsAck::mutable_pets() {
  return &pets_;
}

// optional int32 err_no = 2;
inline bool GetFriendArmsAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFriendArmsAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFriendArmsAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFriendArmsAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetFriendArmsAck::err_no() const {
  return err_no_;
}
inline void GetFriendArmsAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// BeginWarReq

// optional uint64 digitid = 1;
inline bool BeginWarReq::has_digitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginWarReq::set_has_digitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginWarReq::clear_has_digitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginWarReq::clear_digitid() {
  digitid_ = GOOGLE_ULONGLONG(0);
  clear_has_digitid();
}
inline ::google::protobuf::uint64 BeginWarReq::digitid() const {
  return digitid_;
}
inline void BeginWarReq::set_digitid(::google::protobuf::uint64 value) {
  set_has_digitid();
  digitid_ = value;
}

// -------------------------------------------------------------------

// MonsterBurstItem

// optional int32 monster_id = 1;
inline bool MonsterBurstItem::has_monster_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonsterBurstItem::set_has_monster_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonsterBurstItem::clear_has_monster_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonsterBurstItem::clear_monster_id() {
  monster_id_ = 0;
  clear_has_monster_id();
}
inline ::google::protobuf::int32 MonsterBurstItem::monster_id() const {
  return monster_id_;
}
inline void MonsterBurstItem::set_monster_id(::google::protobuf::int32 value) {
  set_has_monster_id();
  monster_id_ = value;
}

// repeated .protoc.gameproto.TeXiaoItem item = 2;
inline int MonsterBurstItem::item_size() const {
  return item_.size();
}
inline void MonsterBurstItem::clear_item() {
  item_.Clear();
}
inline const ::protoc::gameproto::TeXiaoItem& MonsterBurstItem::item(int index) const {
  return item_.Get(index);
}
inline ::protoc::gameproto::TeXiaoItem* MonsterBurstItem::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::protoc::gameproto::TeXiaoItem* MonsterBurstItem::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
MonsterBurstItem::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
MonsterBurstItem::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// TreasureBurstItem

// optional int32 treasure_id = 1;
inline bool TreasureBurstItem::has_treasure_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreasureBurstItem::set_has_treasure_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TreasureBurstItem::clear_has_treasure_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TreasureBurstItem::clear_treasure_id() {
  treasure_id_ = 0;
  clear_has_treasure_id();
}
inline ::google::protobuf::int32 TreasureBurstItem::treasure_id() const {
  return treasure_id_;
}
inline void TreasureBurstItem::set_treasure_id(::google::protobuf::int32 value) {
  set_has_treasure_id();
  treasure_id_ = value;
}

// repeated .protoc.gameproto.TeXiaoItem item = 2;
inline int TreasureBurstItem::item_size() const {
  return item_.size();
}
inline void TreasureBurstItem::clear_item() {
  item_.Clear();
}
inline const ::protoc::gameproto::TeXiaoItem& TreasureBurstItem::item(int index) const {
  return item_.Get(index);
}
inline ::protoc::gameproto::TeXiaoItem* TreasureBurstItem::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::protoc::gameproto::TeXiaoItem* TreasureBurstItem::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
TreasureBurstItem::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
TreasureBurstItem::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// BufferItem

// optional .protoc.gameproto.BufferItem.BufferEffectType id = 1;
inline bool BufferItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BufferItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BufferItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BufferItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::protoc::gameproto::BufferItem_BufferEffectType BufferItem::id() const {
  return static_cast< ::protoc::gameproto::BufferItem_BufferEffectType >(id_);
}
inline void BufferItem::set_id(::protoc::gameproto::BufferItem_BufferEffectType value) {
  assert(::protoc::gameproto::BufferItem_BufferEffectType_IsValid(value));
  set_has_id();
  id_ = value;
}

// optional int32 value = 2;
inline bool BufferItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BufferItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BufferItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BufferItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 BufferItem::value() const {
  return value_;
}
inline void BufferItem::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BeginWarAck

// optional int32 err_no = 1;
inline bool BeginWarAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginWarAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginWarAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginWarAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 BeginWarAck::err_no() const {
  return err_no_;
}
inline void BeginWarAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional bytes sign_spirit = 2;
inline bool BeginWarAck::has_sign_spirit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeginWarAck::set_has_sign_spirit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeginWarAck::clear_has_sign_spirit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeginWarAck::clear_sign_spirit() {
  if (sign_spirit_ != &::google::protobuf::internal::kEmptyString) {
    sign_spirit_->clear();
  }
  clear_has_sign_spirit();
}
inline const ::std::string& BeginWarAck::sign_spirit() const {
  return *sign_spirit_;
}
inline void BeginWarAck::set_sign_spirit(const ::std::string& value) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(value);
}
inline void BeginWarAck::set_sign_spirit(const char* value) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(value);
}
inline void BeginWarAck::set_sign_spirit(const void* value, size_t size) {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  sign_spirit_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BeginWarAck::mutable_sign_spirit() {
  set_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    sign_spirit_ = new ::std::string;
  }
  return sign_spirit_;
}
inline ::std::string* BeginWarAck::release_sign_spirit() {
  clear_has_sign_spirit();
  if (sign_spirit_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_spirit_;
    sign_spirit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BeginWarAck::set_allocated_sign_spirit(::std::string* sign_spirit) {
  if (sign_spirit_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_spirit_;
  }
  if (sign_spirit) {
    set_has_sign_spirit();
    sign_spirit_ = sign_spirit;
  } else {
    clear_has_sign_spirit();
    sign_spirit_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_hp = 3;
inline bool BeginWarAck::has_sign_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeginWarAck::set_has_sign_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeginWarAck::clear_has_sign_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeginWarAck::clear_sign_hp() {
  if (sign_hp_ != &::google::protobuf::internal::kEmptyString) {
    sign_hp_->clear();
  }
  clear_has_sign_hp();
}
inline const ::std::string& BeginWarAck::sign_hp() const {
  return *sign_hp_;
}
inline void BeginWarAck::set_sign_hp(const ::std::string& value) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(value);
}
inline void BeginWarAck::set_sign_hp(const char* value) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(value);
}
inline void BeginWarAck::set_sign_hp(const void* value, size_t size) {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  sign_hp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BeginWarAck::mutable_sign_hp() {
  set_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    sign_hp_ = new ::std::string;
  }
  return sign_hp_;
}
inline ::std::string* BeginWarAck::release_sign_hp() {
  clear_has_sign_hp();
  if (sign_hp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_hp_;
    sign_hp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BeginWarAck::set_allocated_sign_hp(::std::string* sign_hp) {
  if (sign_hp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_hp_;
  }
  if (sign_hp) {
    set_has_sign_hp();
    sign_hp_ = sign_hp;
  } else {
    clear_has_sign_hp();
    sign_hp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sign_mp = 4;
inline bool BeginWarAck::has_sign_mp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeginWarAck::set_has_sign_mp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeginWarAck::clear_has_sign_mp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeginWarAck::clear_sign_mp() {
  if (sign_mp_ != &::google::protobuf::internal::kEmptyString) {
    sign_mp_->clear();
  }
  clear_has_sign_mp();
}
inline const ::std::string& BeginWarAck::sign_mp() const {
  return *sign_mp_;
}
inline void BeginWarAck::set_sign_mp(const ::std::string& value) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(value);
}
inline void BeginWarAck::set_sign_mp(const char* value) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(value);
}
inline void BeginWarAck::set_sign_mp(const void* value, size_t size) {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  sign_mp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BeginWarAck::mutable_sign_mp() {
  set_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    sign_mp_ = new ::std::string;
  }
  return sign_mp_;
}
inline ::std::string* BeginWarAck::release_sign_mp() {
  clear_has_sign_mp();
  if (sign_mp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_mp_;
    sign_mp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BeginWarAck::set_allocated_sign_mp(::std::string* sign_mp) {
  if (sign_mp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_mp_;
  }
  if (sign_mp) {
    set_has_sign_mp();
    sign_mp_ = sign_mp;
  } else {
    clear_has_sign_mp();
    sign_mp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.PetRecordSIGN sign_my_pets = 5;
inline int BeginWarAck::sign_my_pets_size() const {
  return sign_my_pets_.size();
}
inline void BeginWarAck::clear_sign_my_pets() {
  sign_my_pets_.Clear();
}
inline const ::protoc::gameproto::PetRecordSIGN& BeginWarAck::sign_my_pets(int index) const {
  return sign_my_pets_.Get(index);
}
inline ::protoc::gameproto::PetRecordSIGN* BeginWarAck::mutable_sign_my_pets(int index) {
  return sign_my_pets_.Mutable(index);
}
inline ::protoc::gameproto::PetRecordSIGN* BeginWarAck::add_sign_my_pets() {
  return sign_my_pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
BeginWarAck::sign_my_pets() const {
  return sign_my_pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
BeginWarAck::mutable_sign_my_pets() {
  return &sign_my_pets_;
}

// optional .protoc.gameproto.PetRecordSIGN sign_help_pet = 6;
inline bool BeginWarAck::has_sign_help_pet() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BeginWarAck::set_has_sign_help_pet() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BeginWarAck::clear_has_sign_help_pet() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BeginWarAck::clear_sign_help_pet() {
  if (sign_help_pet_ != NULL) sign_help_pet_->::protoc::gameproto::PetRecordSIGN::Clear();
  clear_has_sign_help_pet();
}
inline const ::protoc::gameproto::PetRecordSIGN& BeginWarAck::sign_help_pet() const {
  return sign_help_pet_ != NULL ? *sign_help_pet_ : *default_instance_->sign_help_pet_;
}
inline ::protoc::gameproto::PetRecordSIGN* BeginWarAck::mutable_sign_help_pet() {
  set_has_sign_help_pet();
  if (sign_help_pet_ == NULL) sign_help_pet_ = new ::protoc::gameproto::PetRecordSIGN;
  return sign_help_pet_;
}
inline ::protoc::gameproto::PetRecordSIGN* BeginWarAck::release_sign_help_pet() {
  clear_has_sign_help_pet();
  ::protoc::gameproto::PetRecordSIGN* temp = sign_help_pet_;
  sign_help_pet_ = NULL;
  return temp;
}
inline void BeginWarAck::set_allocated_sign_help_pet(::protoc::gameproto::PetRecordSIGN* sign_help_pet) {
  delete sign_help_pet_;
  sign_help_pet_ = sign_help_pet;
  if (sign_help_pet) {
    set_has_sign_help_pet();
  } else {
    clear_has_sign_help_pet();
  }
}

// optional .protoc.gameproto.PetRecord help_pet = 7;
inline bool BeginWarAck::has_help_pet() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BeginWarAck::set_has_help_pet() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BeginWarAck::clear_has_help_pet() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BeginWarAck::clear_help_pet() {
  if (help_pet_ != NULL) help_pet_->::protoc::gameproto::PetRecord::Clear();
  clear_has_help_pet();
}
inline const ::protoc::gameproto::PetRecord& BeginWarAck::help_pet() const {
  return help_pet_ != NULL ? *help_pet_ : *default_instance_->help_pet_;
}
inline ::protoc::gameproto::PetRecord* BeginWarAck::mutable_help_pet() {
  set_has_help_pet();
  if (help_pet_ == NULL) help_pet_ = new ::protoc::gameproto::PetRecord;
  return help_pet_;
}
inline ::protoc::gameproto::PetRecord* BeginWarAck::release_help_pet() {
  clear_has_help_pet();
  ::protoc::gameproto::PetRecord* temp = help_pet_;
  help_pet_ = NULL;
  return temp;
}
inline void BeginWarAck::set_allocated_help_pet(::protoc::gameproto::PetRecord* help_pet) {
  delete help_pet_;
  help_pet_ = help_pet;
  if (help_pet) {
    set_has_help_pet();
  } else {
    clear_has_help_pet();
  }
}

// repeated .protoc.gameproto.BufferItem buff = 8;
inline int BeginWarAck::buff_size() const {
  return buff_.size();
}
inline void BeginWarAck::clear_buff() {
  buff_.Clear();
}
inline const ::protoc::gameproto::BufferItem& BeginWarAck::buff(int index) const {
  return buff_.Get(index);
}
inline ::protoc::gameproto::BufferItem* BeginWarAck::mutable_buff(int index) {
  return buff_.Mutable(index);
}
inline ::protoc::gameproto::BufferItem* BeginWarAck::add_buff() {
  return buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >&
BeginWarAck::buff() const {
  return buff_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >*
BeginWarAck::mutable_buff() {
  return &buff_;
}

// repeated .protoc.gameproto.MonsterBurstItem burst_item = 9;
inline int BeginWarAck::burst_item_size() const {
  return burst_item_.size();
}
inline void BeginWarAck::clear_burst_item() {
  burst_item_.Clear();
}
inline const ::protoc::gameproto::MonsterBurstItem& BeginWarAck::burst_item(int index) const {
  return burst_item_.Get(index);
}
inline ::protoc::gameproto::MonsterBurstItem* BeginWarAck::mutable_burst_item(int index) {
  return burst_item_.Mutable(index);
}
inline ::protoc::gameproto::MonsterBurstItem* BeginWarAck::add_burst_item() {
  return burst_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MonsterBurstItem >&
BeginWarAck::burst_item() const {
  return burst_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::MonsterBurstItem >*
BeginWarAck::mutable_burst_item() {
  return &burst_item_;
}

// repeated .protoc.gameproto.TreasureBurstItem treasure_item = 10;
inline int BeginWarAck::treasure_item_size() const {
  return treasure_item_.size();
}
inline void BeginWarAck::clear_treasure_item() {
  treasure_item_.Clear();
}
inline const ::protoc::gameproto::TreasureBurstItem& BeginWarAck::treasure_item(int index) const {
  return treasure_item_.Get(index);
}
inline ::protoc::gameproto::TreasureBurstItem* BeginWarAck::mutable_treasure_item(int index) {
  return treasure_item_.Mutable(index);
}
inline ::protoc::gameproto::TreasureBurstItem* BeginWarAck::add_treasure_item() {
  return treasure_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TreasureBurstItem >&
BeginWarAck::treasure_item() const {
  return treasure_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TreasureBurstItem >*
BeginWarAck::mutable_treasure_item() {
  return &treasure_item_;
}

// optional int32 rnd_start_war_key = 11;
inline bool BeginWarAck::has_rnd_start_war_key() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BeginWarAck::set_has_rnd_start_war_key() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BeginWarAck::clear_has_rnd_start_war_key() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BeginWarAck::clear_rnd_start_war_key() {
  rnd_start_war_key_ = 0;
  clear_has_rnd_start_war_key();
}
inline ::google::protobuf::int32 BeginWarAck::rnd_start_war_key() const {
  return rnd_start_war_key_;
}
inline void BeginWarAck::set_rnd_start_war_key(::google::protobuf::int32 value) {
  set_has_rnd_start_war_key();
  rnd_start_war_key_ = value;
}

// -------------------------------------------------------------------

// NowStartWarRpt

// optional int32 rnd_start_war_key = 1;
inline bool NowStartWarRpt::has_rnd_start_war_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NowStartWarRpt::set_has_rnd_start_war_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NowStartWarRpt::clear_has_rnd_start_war_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NowStartWarRpt::clear_rnd_start_war_key() {
  rnd_start_war_key_ = 0;
  clear_has_rnd_start_war_key();
}
inline ::google::protobuf::int32 NowStartWarRpt::rnd_start_war_key() const {
  return rnd_start_war_key_;
}
inline void NowStartWarRpt::set_rnd_start_war_key(::google::protobuf::int32 value) {
  set_has_rnd_start_war_key();
  rnd_start_war_key_ = value;
}

// -------------------------------------------------------------------

// DeadMonster

// optional int32 class_id = 1;
inline bool DeadMonster::has_class_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeadMonster::set_has_class_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeadMonster::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeadMonster::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 DeadMonster::class_id() const {
  return class_id_;
}
inline void DeadMonster::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
}

// optional int32 count = 2;
inline bool DeadMonster::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeadMonster::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeadMonster::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeadMonster::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 DeadMonster::count() const {
  return count_;
}
inline void DeadMonster::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// WarResultReq

// optional int32 chapter_id = 1;
inline bool WarResultReq::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WarResultReq::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WarResultReq::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WarResultReq::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 WarResultReq::chapter_id() const {
  return chapter_id_;
}
inline void WarResultReq::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 2;
inline bool WarResultReq::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarResultReq::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarResultReq::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarResultReq::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 WarResultReq::check_point_id() const {
  return check_point_id_;
}
inline void WarResultReq::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 result = 3;
inline bool WarResultReq::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarResultReq::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarResultReq::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarResultReq::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WarResultReq::result() const {
  return result_;
}
inline void WarResultReq::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 pass_second = 4;
inline bool WarResultReq::has_pass_second() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarResultReq::set_has_pass_second() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarResultReq::clear_has_pass_second() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarResultReq::clear_pass_second() {
  pass_second_ = 0;
  clear_has_pass_second();
}
inline ::google::protobuf::int32 WarResultReq::pass_second() const {
  return pass_second_;
}
inline void WarResultReq::set_pass_second(::google::protobuf::int32 value) {
  set_has_pass_second();
  pass_second_ = value;
}

// optional bytes sign_ccrp = 5;
inline bool WarResultReq::has_sign_ccrp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarResultReq::set_has_sign_ccrp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarResultReq::clear_has_sign_ccrp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarResultReq::clear_sign_ccrp() {
  if (sign_ccrp_ != &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_->clear();
  }
  clear_has_sign_ccrp();
}
inline const ::std::string& WarResultReq::sign_ccrp() const {
  return *sign_ccrp_;
}
inline void WarResultReq::set_sign_ccrp(const ::std::string& value) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(value);
}
inline void WarResultReq::set_sign_ccrp(const char* value) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(value);
}
inline void WarResultReq::set_sign_ccrp(const void* value, size_t size) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WarResultReq::mutable_sign_ccrp() {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  return sign_ccrp_;
}
inline ::std::string* WarResultReq::release_sign_ccrp() {
  clear_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_ccrp_;
    sign_ccrp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WarResultReq::set_allocated_sign_ccrp(::std::string* sign_ccrp) {
  if (sign_ccrp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_ccrp_;
  }
  if (sign_ccrp) {
    set_has_sign_ccrp();
    sign_ccrp_ = sign_ccrp;
  } else {
    clear_has_sign_ccrp();
    sign_ccrp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protoc.gameproto.TeXiaoItem pick_item = 6;
inline int WarResultReq::pick_item_size() const {
  return pick_item_.size();
}
inline void WarResultReq::clear_pick_item() {
  pick_item_.Clear();
}
inline const ::protoc::gameproto::TeXiaoItem& WarResultReq::pick_item(int index) const {
  return pick_item_.Get(index);
}
inline ::protoc::gameproto::TeXiaoItem* WarResultReq::mutable_pick_item(int index) {
  return pick_item_.Mutable(index);
}
inline ::protoc::gameproto::TeXiaoItem* WarResultReq::add_pick_item() {
  return pick_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
WarResultReq::pick_item() const {
  return pick_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
WarResultReq::mutable_pick_item() {
  return &pick_item_;
}

// repeated .protoc.gameproto.DeadMonster monsters = 7;
inline int WarResultReq::monsters_size() const {
  return monsters_.size();
}
inline void WarResultReq::clear_monsters() {
  monsters_.Clear();
}
inline const ::protoc::gameproto::DeadMonster& WarResultReq::monsters(int index) const {
  return monsters_.Get(index);
}
inline ::protoc::gameproto::DeadMonster* WarResultReq::mutable_monsters(int index) {
  return monsters_.Mutable(index);
}
inline ::protoc::gameproto::DeadMonster* WarResultReq::add_monsters() {
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::DeadMonster >&
WarResultReq::monsters() const {
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::DeadMonster >*
WarResultReq::mutable_monsters() {
  return &monsters_;
}

// optional int32 chapter_kind = 8;
inline bool WarResultReq::has_chapter_kind() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WarResultReq::set_has_chapter_kind() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WarResultReq::clear_has_chapter_kind() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WarResultReq::clear_chapter_kind() {
  chapter_kind_ = 0;
  clear_has_chapter_kind();
}
inline ::google::protobuf::int32 WarResultReq::chapter_kind() const {
  return chapter_kind_;
}
inline void WarResultReq::set_chapter_kind(::google::protobuf::int32 value) {
  set_has_chapter_kind();
  chapter_kind_ = value;
}

// repeated uint32 buff_item_ids = 9;
inline int WarResultReq::buff_item_ids_size() const {
  return buff_item_ids_.size();
}
inline void WarResultReq::clear_buff_item_ids() {
  buff_item_ids_.Clear();
}
inline ::google::protobuf::uint32 WarResultReq::buff_item_ids(int index) const {
  return buff_item_ids_.Get(index);
}
inline void WarResultReq::set_buff_item_ids(int index, ::google::protobuf::uint32 value) {
  buff_item_ids_.Set(index, value);
}
inline void WarResultReq::add_buff_item_ids(::google::protobuf::uint32 value) {
  buff_item_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WarResultReq::buff_item_ids() const {
  return buff_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WarResultReq::mutable_buff_item_ids() {
  return &buff_item_ids_;
}

// -------------------------------------------------------------------

// WarResultAck

// repeated .protoc.gameproto.TeXiaoItem award_item = 1;
inline int WarResultAck::award_item_size() const {
  return award_item_.size();
}
inline void WarResultAck::clear_award_item() {
  award_item_.Clear();
}
inline const ::protoc::gameproto::TeXiaoItem& WarResultAck::award_item(int index) const {
  return award_item_.Get(index);
}
inline ::protoc::gameproto::TeXiaoItem* WarResultAck::mutable_award_item(int index) {
  return award_item_.Mutable(index);
}
inline ::protoc::gameproto::TeXiaoItem* WarResultAck::add_award_item() {
  return award_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >&
WarResultAck::award_item() const {
  return award_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TeXiaoItem >*
WarResultAck::mutable_award_item() {
  return &award_item_;
}

// optional int64 pass_second = 2;
inline bool WarResultAck::has_pass_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WarResultAck::set_has_pass_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WarResultAck::clear_has_pass_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WarResultAck::clear_pass_second() {
  pass_second_ = GOOGLE_LONGLONG(0);
  clear_has_pass_second();
}
inline ::google::protobuf::int64 WarResultAck::pass_second() const {
  return pass_second_;
}
inline void WarResultAck::set_pass_second(::google::protobuf::int64 value) {
  set_has_pass_second();
  pass_second_ = value;
}

// optional int32 err_no = 3;
inline bool WarResultAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WarResultAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WarResultAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WarResultAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 WarResultAck::err_no() const {
  return err_no_;
}
inline void WarResultAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional int32 star = 4;
inline bool WarResultAck::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WarResultAck::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WarResultAck::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WarResultAck::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 WarResultAck::star() const {
  return star_;
}
inline void WarResultAck::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 result = 5;
inline bool WarResultAck::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WarResultAck::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WarResultAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WarResultAck::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WarResultAck::result() const {
  return result_;
}
inline void WarResultAck::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 old_level = 6;
inline bool WarResultAck::has_old_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WarResultAck::set_has_old_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WarResultAck::clear_has_old_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WarResultAck::clear_old_level() {
  old_level_ = 0;
  clear_has_old_level();
}
inline ::google::protobuf::int32 WarResultAck::old_level() const {
  return old_level_;
}
inline void WarResultAck::set_old_level(::google::protobuf::int32 value) {
  set_has_old_level();
  old_level_ = value;
}

// optional int32 new_level = 7;
inline bool WarResultAck::has_new_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WarResultAck::set_has_new_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WarResultAck::clear_has_new_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WarResultAck::clear_new_level() {
  new_level_ = 0;
  clear_has_new_level();
}
inline ::google::protobuf::int32 WarResultAck::new_level() const {
  return new_level_;
}
inline void WarResultAck::set_new_level(::google::protobuf::int32 value) {
  set_has_new_level();
  new_level_ = value;
}

// -------------------------------------------------------------------

// DeadInWarNtf

// -------------------------------------------------------------------

// DeadInWarAck

// optional int32 need_gem = 1;
inline bool DeadInWarAck::has_need_gem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeadInWarAck::set_has_need_gem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeadInWarAck::clear_has_need_gem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeadInWarAck::clear_need_gem() {
  need_gem_ = 0;
  clear_has_need_gem();
}
inline ::google::protobuf::int32 DeadInWarAck::need_gem() const {
  return need_gem_;
}
inline void DeadInWarAck::set_need_gem(::google::protobuf::int32 value) {
  set_has_need_gem();
  need_gem_ = value;
}

// -------------------------------------------------------------------

// ReviveReq

// -------------------------------------------------------------------

// ReviveAck

// optional int32 err_no = 1;
inline bool ReviveAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReviveAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReviveAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReviveAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ReviveAck::err_no() const {
  return err_no_;
}
inline void ReviveAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PetUpgradeReq

// optional uint64 id = 1;
inline bool PetUpgradeReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetUpgradeReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetUpgradeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetUpgradeReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PetUpgradeReq::id() const {
  return id_;
}
inline void PetUpgradeReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated uint64 tunshi_pet = 2;
inline int PetUpgradeReq::tunshi_pet_size() const {
  return tunshi_pet_.size();
}
inline void PetUpgradeReq::clear_tunshi_pet() {
  tunshi_pet_.Clear();
}
inline ::google::protobuf::uint64 PetUpgradeReq::tunshi_pet(int index) const {
  return tunshi_pet_.Get(index);
}
inline void PetUpgradeReq::set_tunshi_pet(int index, ::google::protobuf::uint64 value) {
  tunshi_pet_.Set(index, value);
}
inline void PetUpgradeReq::add_tunshi_pet(::google::protobuf::uint64 value) {
  tunshi_pet_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PetUpgradeReq::tunshi_pet() const {
  return tunshi_pet_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PetUpgradeReq::mutable_tunshi_pet() {
  return &tunshi_pet_;
}

// -------------------------------------------------------------------

// PetUpgradeAck

// optional uint64 id = 1;
inline bool PetUpgradeAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetUpgradeAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetUpgradeAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetUpgradeAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PetUpgradeAck::id() const {
  return id_;
}
inline void PetUpgradeAck::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// repeated uint64 tunshi_pet = 2;
inline int PetUpgradeAck::tunshi_pet_size() const {
  return tunshi_pet_.size();
}
inline void PetUpgradeAck::clear_tunshi_pet() {
  tunshi_pet_.Clear();
}
inline ::google::protobuf::uint64 PetUpgradeAck::tunshi_pet(int index) const {
  return tunshi_pet_.Get(index);
}
inline void PetUpgradeAck::set_tunshi_pet(int index, ::google::protobuf::uint64 value) {
  tunshi_pet_.Set(index, value);
}
inline void PetUpgradeAck::add_tunshi_pet(::google::protobuf::uint64 value) {
  tunshi_pet_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PetUpgradeAck::tunshi_pet() const {
  return tunshi_pet_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PetUpgradeAck::mutable_tunshi_pet() {
  return &tunshi_pet_;
}

// optional int32 err_no = 3;
inline bool PetUpgradeAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetUpgradeAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetUpgradeAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetUpgradeAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PetUpgradeAck::err_no() const {
  return err_no_;
}
inline void PetUpgradeAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PetEvolveReq

// optional uint64 id = 1;
inline bool PetEvolveReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetEvolveReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetEvolveReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetEvolveReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PetEvolveReq::id() const {
  return id_;
}
inline void PetEvolveReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// PetEvolveAck

// optional uint64 id = 1;
inline bool PetEvolveAck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetEvolveAck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetEvolveAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetEvolveAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PetEvolveAck::id() const {
  return id_;
}
inline void PetEvolveAck::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 err_no = 2;
inline bool PetEvolveAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetEvolveAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetEvolveAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetEvolveAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PetEvolveAck::err_no() const {
  return err_no_;
}
inline void PetEvolveAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// OwnedPetIDListReq

// -------------------------------------------------------------------

// OwnedPetIDListAck

// repeated uint32 id = 1;
inline int OwnedPetIDListAck::id_size() const {
  return id_.size();
}
inline void OwnedPetIDListAck::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 OwnedPetIDListAck::id(int index) const {
  return id_.Get(index);
}
inline void OwnedPetIDListAck::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
}
inline void OwnedPetIDListAck::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OwnedPetIDListAck::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OwnedPetIDListAck::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// NewPetOpenedNtf

// optional uint32 id = 1;
inline bool NewPetOpenedNtf::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewPetOpenedNtf::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewPetOpenedNtf::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewPetOpenedNtf::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 NewPetOpenedNtf::id() const {
  return id_;
}
inline void NewPetOpenedNtf::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ChenJiuData

// optional uint32 id = 1;
inline bool ChenJiuData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChenJiuData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChenJiuData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChenJiuData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ChenJiuData::id() const {
  return id_;
}
inline void ChenJiuData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 value = 2;
inline bool ChenJiuData::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChenJiuData::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChenJiuData::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChenJiuData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ChenJiuData::value() const {
  return value_;
}
inline void ChenJiuData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// optional uint32 type = 3;
inline bool ChenJiuData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChenJiuData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChenJiuData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChenJiuData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ChenJiuData::type() const {
  return type_;
}
inline void ChenJiuData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ChenJiuKind

// optional uint32 kind = 1;
inline bool ChenJiuKind::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChenJiuKind::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChenJiuKind::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChenJiuKind::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ChenJiuKind::kind() const {
  return kind_;
}
inline void ChenJiuKind::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// repeated .protoc.gameproto.ChenJiuData data = 2;
inline int ChenJiuKind::data_size() const {
  return data_.size();
}
inline void ChenJiuKind::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::ChenJiuData& ChenJiuKind::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::ChenJiuData* ChenJiuKind::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::ChenJiuData* ChenJiuKind::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuData >&
ChenJiuKind::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuData >*
ChenJiuKind::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GetChenJiuReq

// -------------------------------------------------------------------

// GetChenJiuAck

// repeated .protoc.gameproto.ChenJiuKind kind = 1;
inline int GetChenJiuAck::kind_size() const {
  return kind_.size();
}
inline void GetChenJiuAck::clear_kind() {
  kind_.Clear();
}
inline const ::protoc::gameproto::ChenJiuKind& GetChenJiuAck::kind(int index) const {
  return kind_.Get(index);
}
inline ::protoc::gameproto::ChenJiuKind* GetChenJiuAck::mutable_kind(int index) {
  return kind_.Mutable(index);
}
inline ::protoc::gameproto::ChenJiuKind* GetChenJiuAck::add_kind() {
  return kind_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuKind >&
GetChenJiuAck::kind() const {
  return kind_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::ChenJiuKind >*
GetChenJiuAck::mutable_kind() {
  return &kind_;
}

// -------------------------------------------------------------------

// UpdateChenJiu

// optional uint32 kind = 1;
inline bool UpdateChenJiu::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateChenJiu::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateChenJiu::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateChenJiu::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 UpdateChenJiu::kind() const {
  return kind_;
}
inline void UpdateChenJiu::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// optional .protoc.gameproto.ChenJiuData data = 2;
inline bool UpdateChenJiu::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateChenJiu::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateChenJiu::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateChenJiu::clear_data() {
  if (data_ != NULL) data_->::protoc::gameproto::ChenJiuData::Clear();
  clear_has_data();
}
inline const ::protoc::gameproto::ChenJiuData& UpdateChenJiu::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protoc::gameproto::ChenJiuData* UpdateChenJiu::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protoc::gameproto::ChenJiuData;
  return data_;
}
inline ::protoc::gameproto::ChenJiuData* UpdateChenJiu::release_data() {
  clear_has_data();
  ::protoc::gameproto::ChenJiuData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UpdateChenJiu::set_allocated_data(::protoc::gameproto::ChenJiuData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// GetChenJiuAwardReq

// optional uint32 id = 1;
inline bool GetChenJiuAwardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetChenJiuAwardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetChenJiuAwardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetChenJiuAwardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetChenJiuAwardReq::id() const {
  return id_;
}
inline void GetChenJiuAwardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GetChenJiuAwardAck

// optional int32 err_no = 1;
inline bool GetChenJiuAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetChenJiuAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetChenJiuAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetChenJiuAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetChenJiuAwardAck::err_no() const {
  return err_no_;
}
inline void GetChenJiuAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 id = 2;
inline bool GetChenJiuAwardAck::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetChenJiuAwardAck::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetChenJiuAwardAck::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetChenJiuAwardAck::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetChenJiuAwardAck::id() const {
  return id_;
}
inline void GetChenJiuAwardAck::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// OneKeyGetChenJiuAwardReq

// repeated uint32 id = 1;
inline int OneKeyGetChenJiuAwardReq::id_size() const {
  return id_.size();
}
inline void OneKeyGetChenJiuAwardReq::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 OneKeyGetChenJiuAwardReq::id(int index) const {
  return id_.Get(index);
}
inline void OneKeyGetChenJiuAwardReq::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
}
inline void OneKeyGetChenJiuAwardReq::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OneKeyGetChenJiuAwardReq::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OneKeyGetChenJiuAwardReq::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// QuestData

// optional uint32 id = 1;
inline bool QuestData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 QuestData::id() const {
  return id_;
}
inline void QuestData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 count = 3;
inline bool QuestData::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestData::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestData::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestData::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 QuestData::count() const {
  return count_;
}
inline void QuestData::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 current_count = 4;
inline bool QuestData::has_current_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestData::set_has_current_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestData::clear_has_current_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestData::clear_current_count() {
  current_count_ = 0u;
  clear_has_current_count();
}
inline ::google::protobuf::uint32 QuestData::current_count() const {
  return current_count_;
}
inline void QuestData::set_current_count(::google::protobuf::uint32 value) {
  set_has_current_count();
  current_count_ = value;
}

// optional bool is_finished = 5;
inline bool QuestData::has_is_finished() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestData::set_has_is_finished() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestData::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestData::clear_is_finished() {
  is_finished_ = false;
  clear_has_is_finished();
}
inline bool QuestData::is_finished() const {
  return is_finished_;
}
inline void QuestData::set_is_finished(bool value) {
  set_has_is_finished();
  is_finished_ = value;
}

// optional bool is_awarded = 6;
inline bool QuestData::has_is_awarded() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestData::set_has_is_awarded() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestData::clear_has_is_awarded() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestData::clear_is_awarded() {
  is_awarded_ = false;
  clear_has_is_awarded();
}
inline bool QuestData::is_awarded() const {
  return is_awarded_;
}
inline void QuestData::set_is_awarded(bool value) {
  set_has_is_awarded();
  is_awarded_ = value;
}

// optional string name = 7;
inline bool QuestData::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QuestData::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QuestData::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QuestData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& QuestData::name() const {
  return *name_;
}
inline void QuestData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QuestData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void QuestData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QuestData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* QuestData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QuestData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string desc = 8;
inline bool QuestData::has_desc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QuestData::set_has_desc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QuestData::clear_has_desc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QuestData::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& QuestData::desc() const {
  return *desc_;
}
inline void QuestData::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void QuestData::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void QuestData::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QuestData::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* QuestData::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QuestData::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string award = 9;
inline bool QuestData::has_award() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QuestData::set_has_award() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QuestData::clear_has_award() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QuestData::clear_award() {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    award_->clear();
  }
  clear_has_award();
}
inline const ::std::string& QuestData::award() const {
  return *award_;
}
inline void QuestData::set_award(const ::std::string& value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void QuestData::set_award(const char* value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void QuestData::set_award(const char* value, size_t size) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QuestData::mutable_award() {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  return award_;
}
inline ::std::string* QuestData::release_award() {
  clear_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award_;
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QuestData::set_allocated_award(::std::string* award) {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    delete award_;
  }
  if (award) {
    set_has_award();
    award_ = award;
  } else {
    clear_has_award();
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string category_name = 10;
inline bool QuestData::has_category_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QuestData::set_has_category_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QuestData::clear_has_category_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QuestData::clear_category_name() {
  if (category_name_ != &::google::protobuf::internal::kEmptyString) {
    category_name_->clear();
  }
  clear_has_category_name();
}
inline const ::std::string& QuestData::category_name() const {
  return *category_name_;
}
inline void QuestData::set_category_name(const ::std::string& value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::kEmptyString) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
}
inline void QuestData::set_category_name(const char* value) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::kEmptyString) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(value);
}
inline void QuestData::set_category_name(const char* value, size_t size) {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::kEmptyString) {
    category_name_ = new ::std::string;
  }
  category_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QuestData::mutable_category_name() {
  set_has_category_name();
  if (category_name_ == &::google::protobuf::internal::kEmptyString) {
    category_name_ = new ::std::string;
  }
  return category_name_;
}
inline ::std::string* QuestData::release_category_name() {
  clear_has_category_name();
  if (category_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = category_name_;
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QuestData::set_allocated_category_name(::std::string* category_name) {
  if (category_name_ != &::google::protobuf::internal::kEmptyString) {
    delete category_name_;
  }
  if (category_name) {
    set_has_category_name();
    category_name_ = category_name;
  } else {
    clear_has_category_name();
    category_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetQuestListReq

// optional .protoc.gameproto.Period period = 1;
inline bool GetQuestListReq::has_period() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQuestListReq::set_has_period() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQuestListReq::clear_has_period() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQuestListReq::clear_period() {
  period_ = 0;
  clear_has_period();
}
inline ::protoc::gameproto::Period GetQuestListReq::period() const {
  return static_cast< ::protoc::gameproto::Period >(period_);
}
inline void GetQuestListReq::set_period(::protoc::gameproto::Period value) {
  assert(::protoc::gameproto::Period_IsValid(value));
  set_has_period();
  period_ = value;
}

// -------------------------------------------------------------------

// GetQuestListAck

// repeated .protoc.gameproto.QuestData data = 1;
inline int GetQuestListAck::data_size() const {
  return data_.size();
}
inline void GetQuestListAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::QuestData& GetQuestListAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::QuestData* GetQuestListAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::QuestData* GetQuestListAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >&
GetQuestListAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >*
GetQuestListAck::mutable_data() {
  return &data_;
}

// optional uint32 time = 2;
inline bool GetQuestListAck::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetQuestListAck::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetQuestListAck::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetQuestListAck::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 GetQuestListAck::time() const {
  return time_;
}
inline void GetQuestListAck::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// optional uint32 day = 3;
inline bool GetQuestListAck::has_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetQuestListAck::set_has_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetQuestListAck::clear_has_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetQuestListAck::clear_day() {
  day_ = 0u;
  clear_has_day();
}
inline ::google::protobuf::uint32 GetQuestListAck::day() const {
  return day_;
}
inline void GetQuestListAck::set_day(::google::protobuf::uint32 value) {
  set_has_day();
  day_ = value;
}

// -------------------------------------------------------------------

// QuestUpdateData

// optional uint32 id = 1;
inline bool QuestUpdateData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestUpdateData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestUpdateData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestUpdateData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 QuestUpdateData::id() const {
  return id_;
}
inline void QuestUpdateData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 current_count = 2;
inline bool QuestUpdateData::has_current_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestUpdateData::set_has_current_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestUpdateData::clear_has_current_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestUpdateData::clear_current_count() {
  current_count_ = 0u;
  clear_has_current_count();
}
inline ::google::protobuf::uint32 QuestUpdateData::current_count() const {
  return current_count_;
}
inline void QuestUpdateData::set_current_count(::google::protobuf::uint32 value) {
  set_has_current_count();
  current_count_ = value;
}

// optional bool is_finished = 3;
inline bool QuestUpdateData::has_is_finished() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestUpdateData::set_has_is_finished() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestUpdateData::clear_has_is_finished() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestUpdateData::clear_is_finished() {
  is_finished_ = false;
  clear_has_is_finished();
}
inline bool QuestUpdateData::is_finished() const {
  return is_finished_;
}
inline void QuestUpdateData::set_is_finished(bool value) {
  set_has_is_finished();
  is_finished_ = value;
}

// optional bool is_awarded = 4;
inline bool QuestUpdateData::has_is_awarded() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestUpdateData::set_has_is_awarded() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestUpdateData::clear_has_is_awarded() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestUpdateData::clear_is_awarded() {
  is_awarded_ = false;
  clear_has_is_awarded();
}
inline bool QuestUpdateData::is_awarded() const {
  return is_awarded_;
}
inline void QuestUpdateData::set_is_awarded(bool value) {
  set_has_is_awarded();
  is_awarded_ = value;
}

// optional .protoc.gameproto.Period period = 5;
inline bool QuestUpdateData::has_period() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestUpdateData::set_has_period() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestUpdateData::clear_has_period() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestUpdateData::clear_period() {
  period_ = 0;
  clear_has_period();
}
inline ::protoc::gameproto::Period QuestUpdateData::period() const {
  return static_cast< ::protoc::gameproto::Period >(period_);
}
inline void QuestUpdateData::set_period(::protoc::gameproto::Period value) {
  assert(::protoc::gameproto::Period_IsValid(value));
  set_has_period();
  period_ = value;
}

// -------------------------------------------------------------------

// UpdateQuestNtf

// repeated .protoc.gameproto.QuestUpdateData data = 1;
inline int UpdateQuestNtf::data_size() const {
  return data_.size();
}
inline void UpdateQuestNtf::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::QuestUpdateData& UpdateQuestNtf::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::QuestUpdateData* UpdateQuestNtf::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::QuestUpdateData* UpdateQuestNtf::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestUpdateData >&
UpdateQuestNtf::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestUpdateData >*
UpdateQuestNtf::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GetQuestAwardReq

// optional uint32 id = 1;
inline bool GetQuestAwardReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQuestAwardReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQuestAwardReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQuestAwardReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetQuestAwardReq::id() const {
  return id_;
}
inline void GetQuestAwardReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GetQuestAwardAck

// optional int32 err_no = 1;
inline bool GetQuestAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetQuestAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetQuestAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetQuestAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetQuestAwardAck::err_no() const {
  return err_no_;
}
inline void GetQuestAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// OneKeyGetQuestAwardReq

// repeated uint32 id = 1;
inline int OneKeyGetQuestAwardReq::id_size() const {
  return id_.size();
}
inline void OneKeyGetQuestAwardReq::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 OneKeyGetQuestAwardReq::id(int index) const {
  return id_.Get(index);
}
inline void OneKeyGetQuestAwardReq::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
}
inline void OneKeyGetQuestAwardReq::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OneKeyGetQuestAwardReq::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OneKeyGetQuestAwardReq::mutable_id() {
  return &id_;
}

// -------------------------------------------------------------------

// RefreshQuestNtf

// optional .protoc.gameproto.Period period = 1;
inline bool RefreshQuestNtf::has_period() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshQuestNtf::set_has_period() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshQuestNtf::clear_has_period() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshQuestNtf::clear_period() {
  period_ = 0;
  clear_has_period();
}
inline ::protoc::gameproto::Period RefreshQuestNtf::period() const {
  return static_cast< ::protoc::gameproto::Period >(period_);
}
inline void RefreshQuestNtf::set_period(::protoc::gameproto::Period value) {
  assert(::protoc::gameproto::Period_IsValid(value));
  set_has_period();
  period_ = value;
}

// repeated .protoc.gameproto.QuestData data = 2;
inline int RefreshQuestNtf::data_size() const {
  return data_.size();
}
inline void RefreshQuestNtf::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::QuestData& RefreshQuestNtf::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::QuestData* RefreshQuestNtf::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::QuestData* RefreshQuestNtf::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >&
RefreshQuestNtf::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::QuestData >*
RefreshQuestNtf::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GetCurPvpDataReq

// -------------------------------------------------------------------

// GetCurPvpDataAck

// optional uint32 group_id = 1;
inline bool GetCurPvpDataAck::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCurPvpDataAck::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCurPvpDataAck::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCurPvpDataAck::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::group_id() const {
  return group_id_;
}
inline void GetCurPvpDataAck::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional uint32 score = 2;
inline bool GetCurPvpDataAck::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCurPvpDataAck::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCurPvpDataAck::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCurPvpDataAck::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::score() const {
  return score_;
}
inline void GetCurPvpDataAck::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 sum_count = 3;
inline bool GetCurPvpDataAck::has_sum_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCurPvpDataAck::set_has_sum_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCurPvpDataAck::clear_has_sum_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCurPvpDataAck::clear_sum_count() {
  sum_count_ = 0u;
  clear_has_sum_count();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::sum_count() const {
  return sum_count_;
}
inline void GetCurPvpDataAck::set_sum_count(::google::protobuf::uint32 value) {
  set_has_sum_count();
  sum_count_ = value;
}

// optional uint32 win_count = 4;
inline bool GetCurPvpDataAck::has_win_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCurPvpDataAck::set_has_win_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCurPvpDataAck::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCurPvpDataAck::clear_win_count() {
  win_count_ = 0u;
  clear_has_win_count();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::win_count() const {
  return win_count_;
}
inline void GetCurPvpDataAck::set_win_count(::google::protobuf::uint32 value) {
  set_has_win_count();
  win_count_ = value;
}

// optional uint32 today_count = 5;
inline bool GetCurPvpDataAck::has_today_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCurPvpDataAck::set_has_today_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCurPvpDataAck::clear_has_today_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCurPvpDataAck::clear_today_count() {
  today_count_ = 0u;
  clear_has_today_count();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::today_count() const {
  return today_count_;
}
inline void GetCurPvpDataAck::set_today_count(::google::protobuf::uint32 value) {
  set_has_today_count();
  today_count_ = value;
}

// optional bool has_award = 6;
inline bool GetCurPvpDataAck::has_has_award() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetCurPvpDataAck::set_has_has_award() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetCurPvpDataAck::clear_has_has_award() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetCurPvpDataAck::clear_has_award() {
  has_award_ = false;
  clear_has_has_award();
}
inline bool GetCurPvpDataAck::has_award() const {
  return has_award_;
}
inline void GetCurPvpDataAck::set_has_award(bool value) {
  set_has_has_award();
  has_award_ = value;
}

// optional int64 cd_time = 7;
inline bool GetCurPvpDataAck::has_cd_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetCurPvpDataAck::set_has_cd_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetCurPvpDataAck::clear_has_cd_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetCurPvpDataAck::clear_cd_time() {
  cd_time_ = GOOGLE_LONGLONG(0);
  clear_has_cd_time();
}
inline ::google::protobuf::int64 GetCurPvpDataAck::cd_time() const {
  return cd_time_;
}
inline void GetCurPvpDataAck::set_cd_time(::google::protobuf::int64 value) {
  set_has_cd_time();
  cd_time_ = value;
}

// optional uint32 rank = 8;
inline bool GetCurPvpDataAck::has_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetCurPvpDataAck::set_has_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetCurPvpDataAck::clear_has_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetCurPvpDataAck::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::rank() const {
  return rank_;
}
inline void GetCurPvpDataAck::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 today_buy_count = 9;
inline bool GetCurPvpDataAck::has_today_buy_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetCurPvpDataAck::set_has_today_buy_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetCurPvpDataAck::clear_has_today_buy_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetCurPvpDataAck::clear_today_buy_count() {
  today_buy_count_ = 0u;
  clear_has_today_buy_count();
}
inline ::google::protobuf::uint32 GetCurPvpDataAck::today_buy_count() const {
  return today_buy_count_;
}
inline void GetCurPvpDataAck::set_today_buy_count(::google::protobuf::uint32 value) {
  set_has_today_buy_count();
  today_buy_count_ = value;
}

// -------------------------------------------------------------------

// PvpData

// optional uint64 player_id = 1;
inline bool PvpData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpData::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PvpData::player_id() const {
  return player_id_;
}
inline void PvpData::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional string name = 2;
inline bool PvpData::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpData::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpData::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PvpData::name() const {
  return *name_;
}
inline void PvpData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PvpData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PvpData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PvpData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PvpData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PvpData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 head_id = 3;
inline bool PvpData::has_head_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PvpData::set_has_head_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PvpData::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PvpData::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 PvpData::head_id() const {
  return head_id_;
}
inline void PvpData::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// optional uint32 level = 4;
inline bool PvpData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PvpData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PvpData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PvpData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PvpData::level() const {
  return level_;
}
inline void PvpData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 score = 5;
inline bool PvpData::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PvpData::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PvpData::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PvpData::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PvpData::score() const {
  return score_;
}
inline void PvpData::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 rank = 6;
inline bool PvpData::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PvpData::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PvpData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PvpData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 PvpData::rank() const {
  return rank_;
}
inline void PvpData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional bool sex = 7;
inline bool PvpData::has_sex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PvpData::set_has_sex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PvpData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PvpData::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool PvpData::sex() const {
  return sex_;
}
inline void PvpData::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// -------------------------------------------------------------------

// GetAllRankReq

// -------------------------------------------------------------------

// GetAllRankAck

// repeated .protoc.gameproto.PvpData data = 1;
inline int GetAllRankAck::data_size() const {
  return data_.size();
}
inline void GetAllRankAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::PvpData& GetAllRankAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::PvpData* GetAllRankAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::PvpData* GetAllRankAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >&
GetAllRankAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >*
GetAllRankAck::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// PvpFriendData

// optional uint64 player_id = 1;
inline bool PvpFriendData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpFriendData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpFriendData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpFriendData::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PvpFriendData::player_id() const {
  return player_id_;
}
inline void PvpFriendData::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional uint32 score = 2;
inline bool PvpFriendData::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpFriendData::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpFriendData::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpFriendData::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PvpFriendData::score() const {
  return score_;
}
inline void PvpFriendData::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// GetFriendRankReq

// -------------------------------------------------------------------

// GetFriendRankAck

// repeated .protoc.gameproto.PvpFriendData data = 1;
inline int GetFriendRankAck::data_size() const {
  return data_.size();
}
inline void GetFriendRankAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::PvpFriendData& GetFriendRankAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::PvpFriendData* GetFriendRankAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::PvpFriendData* GetFriendRankAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpFriendData >&
GetFriendRankAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpFriendData >*
GetFriendRankAck::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// GetSumRankReq

// -------------------------------------------------------------------

// GetSumRankAck

// repeated .protoc.gameproto.PvpData data = 1;
inline int GetSumRankAck::data_size() const {
  return data_.size();
}
inline void GetSumRankAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::PvpData& GetSumRankAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::PvpData* GetSumRankAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::PvpData* GetSumRankAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >&
GetSumRankAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PvpData >*
GetSumRankAck::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// ClearPvpCDReq

// -------------------------------------------------------------------

// ClearPvpCDAck

// optional int32 err_no = 1;
inline bool ClearPvpCDAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClearPvpCDAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClearPvpCDAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClearPvpCDAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 ClearPvpCDAck::err_no() const {
  return err_no_;
}
inline void ClearPvpCDAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 today_count = 2;
inline bool ClearPvpCDAck::has_today_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClearPvpCDAck::set_has_today_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClearPvpCDAck::clear_has_today_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClearPvpCDAck::clear_today_count() {
  today_count_ = 0u;
  clear_has_today_count();
}
inline ::google::protobuf::uint32 ClearPvpCDAck::today_count() const {
  return today_count_;
}
inline void ClearPvpCDAck::set_today_count(::google::protobuf::uint32 value) {
  set_has_today_count();
  today_count_ = value;
}

// -------------------------------------------------------------------

// GetPvpAwardReq

// -------------------------------------------------------------------

// GetPvpAwardAck

// optional int32 err_no = 1;
inline bool GetPvpAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPvpAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPvpAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPvpAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 GetPvpAwardAck::err_no() const {
  return err_no_;
}
inline void GetPvpAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PvpWarBeginReq

// -------------------------------------------------------------------

// PvpWarBeginAck

// optional int32 err_no = 1;
inline bool PvpWarBeginAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpWarBeginAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpWarBeginAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpWarBeginAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PvpWarBeginAck::err_no() const {
  return err_no_;
}
inline void PvpWarBeginAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 digitid = 2;
inline bool PvpWarBeginAck::has_digitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpWarBeginAck::set_has_digitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpWarBeginAck::clear_has_digitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpWarBeginAck::clear_digitid() {
  digitid_ = GOOGLE_ULONGLONG(0);
  clear_has_digitid();
}
inline ::google::protobuf::uint64 PvpWarBeginAck::digitid() const {
  return digitid_;
}
inline void PvpWarBeginAck::set_digitid(::google::protobuf::uint64 value) {
  set_has_digitid();
  digitid_ = value;
}

// optional string name = 3;
inline bool PvpWarBeginAck::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PvpWarBeginAck::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PvpWarBeginAck::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PvpWarBeginAck::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PvpWarBeginAck::name() const {
  return *name_;
}
inline void PvpWarBeginAck::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PvpWarBeginAck::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PvpWarBeginAck::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PvpWarBeginAck::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PvpWarBeginAck::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PvpWarBeginAck::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 4;
inline bool PvpWarBeginAck::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PvpWarBeginAck::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PvpWarBeginAck::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PvpWarBeginAck::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PvpWarBeginAck::level() const {
  return level_;
}
inline void PvpWarBeginAck::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 head_id = 5;
inline bool PvpWarBeginAck::has_head_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PvpWarBeginAck::set_has_head_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PvpWarBeginAck::clear_has_head_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PvpWarBeginAck::clear_head_id() {
  head_id_ = 0u;
  clear_has_head_id();
}
inline ::google::protobuf::uint32 PvpWarBeginAck::head_id() const {
  return head_id_;
}
inline void PvpWarBeginAck::set_head_id(::google::protobuf::uint32 value) {
  set_has_head_id();
  head_id_ = value;
}

// repeated .protoc.gameproto.PetRecord target_pet = 6;
inline int PvpWarBeginAck::target_pet_size() const {
  return target_pet_.size();
}
inline void PvpWarBeginAck::clear_target_pet() {
  target_pet_.Clear();
}
inline const ::protoc::gameproto::PetRecord& PvpWarBeginAck::target_pet(int index) const {
  return target_pet_.Get(index);
}
inline ::protoc::gameproto::PetRecord* PvpWarBeginAck::mutable_target_pet(int index) {
  return target_pet_.Mutable(index);
}
inline ::protoc::gameproto::PetRecord* PvpWarBeginAck::add_target_pet() {
  return target_pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >&
PvpWarBeginAck::target_pet() const {
  return target_pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecord >*
PvpWarBeginAck::mutable_target_pet() {
  return &target_pet_;
}

// repeated .protoc.gameproto.PetRecordSIGN sign_my_pets = 7;
inline int PvpWarBeginAck::sign_my_pets_size() const {
  return sign_my_pets_.size();
}
inline void PvpWarBeginAck::clear_sign_my_pets() {
  sign_my_pets_.Clear();
}
inline const ::protoc::gameproto::PetRecordSIGN& PvpWarBeginAck::sign_my_pets(int index) const {
  return sign_my_pets_.Get(index);
}
inline ::protoc::gameproto::PetRecordSIGN* PvpWarBeginAck::mutable_sign_my_pets(int index) {
  return sign_my_pets_.Mutable(index);
}
inline ::protoc::gameproto::PetRecordSIGN* PvpWarBeginAck::add_sign_my_pets() {
  return sign_my_pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
PvpWarBeginAck::sign_my_pets() const {
  return sign_my_pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
PvpWarBeginAck::mutable_sign_my_pets() {
  return &sign_my_pets_;
}

// repeated .protoc.gameproto.PetRecordSIGN sign_target_pet = 8;
inline int PvpWarBeginAck::sign_target_pet_size() const {
  return sign_target_pet_.size();
}
inline void PvpWarBeginAck::clear_sign_target_pet() {
  sign_target_pet_.Clear();
}
inline const ::protoc::gameproto::PetRecordSIGN& PvpWarBeginAck::sign_target_pet(int index) const {
  return sign_target_pet_.Get(index);
}
inline ::protoc::gameproto::PetRecordSIGN* PvpWarBeginAck::mutable_sign_target_pet(int index) {
  return sign_target_pet_.Mutable(index);
}
inline ::protoc::gameproto::PetRecordSIGN* PvpWarBeginAck::add_sign_target_pet() {
  return sign_target_pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >&
PvpWarBeginAck::sign_target_pet() const {
  return sign_target_pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PetRecordSIGN >*
PvpWarBeginAck::mutable_sign_target_pet() {
  return &sign_target_pet_;
}

// repeated .protoc.gameproto.BufferItem buff = 9;
inline int PvpWarBeginAck::buff_size() const {
  return buff_.size();
}
inline void PvpWarBeginAck::clear_buff() {
  buff_.Clear();
}
inline const ::protoc::gameproto::BufferItem& PvpWarBeginAck::buff(int index) const {
  return buff_.Get(index);
}
inline ::protoc::gameproto::BufferItem* PvpWarBeginAck::mutable_buff(int index) {
  return buff_.Mutable(index);
}
inline ::protoc::gameproto::BufferItem* PvpWarBeginAck::add_buff() {
  return buff_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >&
PvpWarBeginAck::buff() const {
  return buff_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::BufferItem >*
PvpWarBeginAck::mutable_buff() {
  return &buff_;
}

// optional int32 rnd_start_war_key = 10;
inline bool PvpWarBeginAck::has_rnd_start_war_key() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PvpWarBeginAck::set_has_rnd_start_war_key() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PvpWarBeginAck::clear_has_rnd_start_war_key() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PvpWarBeginAck::clear_rnd_start_war_key() {
  rnd_start_war_key_ = 0;
  clear_has_rnd_start_war_key();
}
inline ::google::protobuf::int32 PvpWarBeginAck::rnd_start_war_key() const {
  return rnd_start_war_key_;
}
inline void PvpWarBeginAck::set_rnd_start_war_key(::google::protobuf::int32 value) {
  set_has_rnd_start_war_key();
  rnd_start_war_key_ = value;
}

// optional int32 total_attack = 11;
inline bool PvpWarBeginAck::has_total_attack() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PvpWarBeginAck::set_has_total_attack() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PvpWarBeginAck::clear_has_total_attack() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PvpWarBeginAck::clear_total_attack() {
  total_attack_ = 0;
  clear_has_total_attack();
}
inline ::google::protobuf::int32 PvpWarBeginAck::total_attack() const {
  return total_attack_;
}
inline void PvpWarBeginAck::set_total_attack(::google::protobuf::int32 value) {
  set_has_total_attack();
  total_attack_ = value;
}

// optional bool sex = 12;
inline bool PvpWarBeginAck::has_sex() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PvpWarBeginAck::set_has_sex() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PvpWarBeginAck::clear_has_sex() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PvpWarBeginAck::clear_sex() {
  sex_ = false;
  clear_has_sex();
}
inline bool PvpWarBeginAck::sex() const {
  return sex_;
}
inline void PvpWarBeginAck::set_sex(bool value) {
  set_has_sex();
  sex_ = value;
}

// repeated .protoc.gameproto.EquipData equip = 13;
inline int PvpWarBeginAck::equip_size() const {
  return equip_.size();
}
inline void PvpWarBeginAck::clear_equip() {
  equip_.Clear();
}
inline const ::protoc::gameproto::EquipData& PvpWarBeginAck::equip(int index) const {
  return equip_.Get(index);
}
inline ::protoc::gameproto::EquipData* PvpWarBeginAck::mutable_equip(int index) {
  return equip_.Mutable(index);
}
inline ::protoc::gameproto::EquipData* PvpWarBeginAck::add_equip() {
  return equip_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >&
PvpWarBeginAck::equip() const {
  return equip_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >*
PvpWarBeginAck::mutable_equip() {
  return &equip_;
}

// -------------------------------------------------------------------

// PvpWarResultReq

// optional uint32 result = 1;
inline bool PvpWarResultReq::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpWarResultReq::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpWarResultReq::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpWarResultReq::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 PvpWarResultReq::result() const {
  return result_;
}
inline void PvpWarResultReq::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint64 match_id = 2;
inline bool PvpWarResultReq::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpWarResultReq::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpWarResultReq::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpWarResultReq::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 PvpWarResultReq::match_id() const {
  return match_id_;
}
inline void PvpWarResultReq::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
}

// optional int32 rnd_start_war_key = 3;
inline bool PvpWarResultReq::has_rnd_start_war_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PvpWarResultReq::set_has_rnd_start_war_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PvpWarResultReq::clear_has_rnd_start_war_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PvpWarResultReq::clear_rnd_start_war_key() {
  rnd_start_war_key_ = 0;
  clear_has_rnd_start_war_key();
}
inline ::google::protobuf::int32 PvpWarResultReq::rnd_start_war_key() const {
  return rnd_start_war_key_;
}
inline void PvpWarResultReq::set_rnd_start_war_key(::google::protobuf::int32 value) {
  set_has_rnd_start_war_key();
  rnd_start_war_key_ = value;
}

// optional bytes sign_ccrp = 4;
inline bool PvpWarResultReq::has_sign_ccrp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PvpWarResultReq::set_has_sign_ccrp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PvpWarResultReq::clear_has_sign_ccrp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PvpWarResultReq::clear_sign_ccrp() {
  if (sign_ccrp_ != &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_->clear();
  }
  clear_has_sign_ccrp();
}
inline const ::std::string& PvpWarResultReq::sign_ccrp() const {
  return *sign_ccrp_;
}
inline void PvpWarResultReq::set_sign_ccrp(const ::std::string& value) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(value);
}
inline void PvpWarResultReq::set_sign_ccrp(const char* value) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(value);
}
inline void PvpWarResultReq::set_sign_ccrp(const void* value, size_t size) {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  sign_ccrp_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PvpWarResultReq::mutable_sign_ccrp() {
  set_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    sign_ccrp_ = new ::std::string;
  }
  return sign_ccrp_;
}
inline ::std::string* PvpWarResultReq::release_sign_ccrp() {
  clear_has_sign_ccrp();
  if (sign_ccrp_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sign_ccrp_;
    sign_ccrp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PvpWarResultReq::set_allocated_sign_ccrp(::std::string* sign_ccrp) {
  if (sign_ccrp_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_ccrp_;
  }
  if (sign_ccrp) {
    set_has_sign_ccrp();
    sign_ccrp_ = sign_ccrp;
  } else {
    clear_has_sign_ccrp();
    sign_ccrp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PvpWarResultAck

// optional int32 err_no = 1;
inline bool PvpWarResultAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpWarResultAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpWarResultAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpWarResultAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PvpWarResultAck::err_no() const {
  return err_no_;
}
inline void PvpWarResultAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint32 result = 2;
inline bool PvpWarResultAck::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpWarResultAck::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpWarResultAck::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpWarResultAck::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 PvpWarResultAck::result() const {
  return result_;
}
inline void PvpWarResultAck::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional uint32 score = 3;
inline bool PvpWarResultAck::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PvpWarResultAck::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PvpWarResultAck::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PvpWarResultAck::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 PvpWarResultAck::score() const {
  return score_;
}
inline void PvpWarResultAck::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// optional uint32 sum_count = 4;
inline bool PvpWarResultAck::has_sum_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PvpWarResultAck::set_has_sum_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PvpWarResultAck::clear_has_sum_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PvpWarResultAck::clear_sum_count() {
  sum_count_ = 0u;
  clear_has_sum_count();
}
inline ::google::protobuf::uint32 PvpWarResultAck::sum_count() const {
  return sum_count_;
}
inline void PvpWarResultAck::set_sum_count(::google::protobuf::uint32 value) {
  set_has_sum_count();
  sum_count_ = value;
}

// optional uint32 win_count = 5;
inline bool PvpWarResultAck::has_win_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PvpWarResultAck::set_has_win_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PvpWarResultAck::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PvpWarResultAck::clear_win_count() {
  win_count_ = 0u;
  clear_has_win_count();
}
inline ::google::protobuf::uint32 PvpWarResultAck::win_count() const {
  return win_count_;
}
inline void PvpWarResultAck::set_win_count(::google::protobuf::uint32 value) {
  set_has_win_count();
  win_count_ = value;
}

// optional uint32 today_count = 6;
inline bool PvpWarResultAck::has_today_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PvpWarResultAck::set_has_today_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PvpWarResultAck::clear_has_today_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PvpWarResultAck::clear_today_count() {
  today_count_ = 0u;
  clear_has_today_count();
}
inline ::google::protobuf::uint32 PvpWarResultAck::today_count() const {
  return today_count_;
}
inline void PvpWarResultAck::set_today_count(::google::protobuf::uint32 value) {
  set_has_today_count();
  today_count_ = value;
}

// optional uint32 rank = 7;
inline bool PvpWarResultAck::has_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PvpWarResultAck::set_has_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PvpWarResultAck::clear_has_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PvpWarResultAck::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 PvpWarResultAck::rank() const {
  return rank_;
}
inline void PvpWarResultAck::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// optional uint32 cur_score = 8;
inline bool PvpWarResultAck::has_cur_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PvpWarResultAck::set_has_cur_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PvpWarResultAck::clear_has_cur_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PvpWarResultAck::clear_cur_score() {
  cur_score_ = 0u;
  clear_has_cur_score();
}
inline ::google::protobuf::uint32 PvpWarResultAck::cur_score() const {
  return cur_score_;
}
inline void PvpWarResultAck::set_cur_score(::google::protobuf::uint32 value) {
  set_has_cur_score();
  cur_score_ = value;
}

// optional int64 cd_time = 9;
inline bool PvpWarResultAck::has_cd_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PvpWarResultAck::set_has_cd_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PvpWarResultAck::clear_has_cd_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PvpWarResultAck::clear_cd_time() {
  cd_time_ = GOOGLE_LONGLONG(0);
  clear_has_cd_time();
}
inline ::google::protobuf::int64 PvpWarResultAck::cd_time() const {
  return cd_time_;
}
inline void PvpWarResultAck::set_cd_time(::google::protobuf::int64 value) {
  set_has_cd_time();
  cd_time_ = value;
}

// optional uint32 group_id = 10;
inline bool PvpWarResultAck::has_group_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PvpWarResultAck::set_has_group_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PvpWarResultAck::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PvpWarResultAck::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 PvpWarResultAck::group_id() const {
  return group_id_;
}
inline void PvpWarResultAck::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
}

// -------------------------------------------------------------------

// ActionCountTickNtf

// optional int64 last_time = 1;
inline bool ActionCountTickNtf::has_last_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionCountTickNtf::set_has_last_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionCountTickNtf::clear_has_last_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionCountTickNtf::clear_last_time() {
  last_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_time();
}
inline ::google::protobuf::int64 ActionCountTickNtf::last_time() const {
  return last_time_;
}
inline void ActionCountTickNtf::set_last_time(::google::protobuf::int64 value) {
  set_has_last_time();
  last_time_ = value;
}

// -------------------------------------------------------------------

// CustomerServiceUrlNtf

// optional string url = 1;
inline bool CustomerServiceUrlNtf::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CustomerServiceUrlNtf::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CustomerServiceUrlNtf::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CustomerServiceUrlNtf::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& CustomerServiceUrlNtf::url() const {
  return *url_;
}
inline void CustomerServiceUrlNtf::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void CustomerServiceUrlNtf::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void CustomerServiceUrlNtf::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CustomerServiceUrlNtf::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* CustomerServiceUrlNtf::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CustomerServiceUrlNtf::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string key = 2;
inline bool CustomerServiceUrlNtf::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CustomerServiceUrlNtf::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CustomerServiceUrlNtf::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CustomerServiceUrlNtf::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& CustomerServiceUrlNtf::key() const {
  return *key_;
}
inline void CustomerServiceUrlNtf::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CustomerServiceUrlNtf::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CustomerServiceUrlNtf::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CustomerServiceUrlNtf::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* CustomerServiceUrlNtf::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CustomerServiceUrlNtf::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SkillPage

// optional uint32 page = 1;
inline bool SkillPage::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillPage::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillPage::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillPage::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 SkillPage::page() const {
  return page_;
}
inline void SkillPage::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
}

// optional uint32 active_skill_id_first = 2;
inline bool SkillPage::has_active_skill_id_first() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillPage::set_has_active_skill_id_first() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillPage::clear_has_active_skill_id_first() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillPage::clear_active_skill_id_first() {
  active_skill_id_first_ = 0u;
  clear_has_active_skill_id_first();
}
inline ::google::protobuf::uint32 SkillPage::active_skill_id_first() const {
  return active_skill_id_first_;
}
inline void SkillPage::set_active_skill_id_first(::google::protobuf::uint32 value) {
  set_has_active_skill_id_first();
  active_skill_id_first_ = value;
}

// optional uint32 active_skill_id_second = 3;
inline bool SkillPage::has_active_skill_id_second() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SkillPage::set_has_active_skill_id_second() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SkillPage::clear_has_active_skill_id_second() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SkillPage::clear_active_skill_id_second() {
  active_skill_id_second_ = 0u;
  clear_has_active_skill_id_second();
}
inline ::google::protobuf::uint32 SkillPage::active_skill_id_second() const {
  return active_skill_id_second_;
}
inline void SkillPage::set_active_skill_id_second(::google::protobuf::uint32 value) {
  set_has_active_skill_id_second();
  active_skill_id_second_ = value;
}

// repeated .protoc.gameproto.Skill skill = 4;
inline int SkillPage::skill_size() const {
  return skill_.size();
}
inline void SkillPage::clear_skill() {
  skill_.Clear();
}
inline const ::protoc::gameproto::Skill& SkillPage::skill(int index) const {
  return skill_.Get(index);
}
inline ::protoc::gameproto::Skill* SkillPage::mutable_skill(int index) {
  return skill_.Mutable(index);
}
inline ::protoc::gameproto::Skill* SkillPage::add_skill() {
  return skill_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::Skill >&
SkillPage::skill() const {
  return skill_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::Skill >*
SkillPage::mutable_skill() {
  return &skill_;
}

// -------------------------------------------------------------------

// Skill

// optional uint32 id = 1;
inline bool Skill::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Skill::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Skill::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Skill::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Skill::id() const {
  return id_;
}
inline void Skill::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 level = 2;
inline bool Skill::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Skill::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Skill::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Skill::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Skill::level() const {
  return level_;
}
inline void Skill::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// GetSkillListReq

// -------------------------------------------------------------------

// GetSkillListAck

// repeated .protoc.gameproto.SkillPage skill_page = 1;
inline int GetSkillListAck::skill_page_size() const {
  return skill_page_.size();
}
inline void GetSkillListAck::clear_skill_page() {
  skill_page_.Clear();
}
inline const ::protoc::gameproto::SkillPage& GetSkillListAck::skill_page(int index) const {
  return skill_page_.Get(index);
}
inline ::protoc::gameproto::SkillPage* GetSkillListAck::mutable_skill_page(int index) {
  return skill_page_.Mutable(index);
}
inline ::protoc::gameproto::SkillPage* GetSkillListAck::add_skill_page() {
  return skill_page_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SkillPage >&
GetSkillListAck::skill_page() const {
  return skill_page_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::SkillPage >*
GetSkillListAck::mutable_skill_page() {
  return &skill_page_;
}

// -------------------------------------------------------------------

// SaveSkillPageReq

// optional uint32 page = 1;
inline bool SaveSkillPageReq::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveSkillPageReq::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveSkillPageReq::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveSkillPageReq::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 SaveSkillPageReq::page() const {
  return page_;
}
inline void SaveSkillPageReq::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
}

// optional .protoc.gameproto.SkillPage skill_page = 2;
inline bool SaveSkillPageReq::has_skill_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveSkillPageReq::set_has_skill_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveSkillPageReq::clear_has_skill_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveSkillPageReq::clear_skill_page() {
  if (skill_page_ != NULL) skill_page_->::protoc::gameproto::SkillPage::Clear();
  clear_has_skill_page();
}
inline const ::protoc::gameproto::SkillPage& SaveSkillPageReq::skill_page() const {
  return skill_page_ != NULL ? *skill_page_ : *default_instance_->skill_page_;
}
inline ::protoc::gameproto::SkillPage* SaveSkillPageReq::mutable_skill_page() {
  set_has_skill_page();
  if (skill_page_ == NULL) skill_page_ = new ::protoc::gameproto::SkillPage;
  return skill_page_;
}
inline ::protoc::gameproto::SkillPage* SaveSkillPageReq::release_skill_page() {
  clear_has_skill_page();
  ::protoc::gameproto::SkillPage* temp = skill_page_;
  skill_page_ = NULL;
  return temp;
}
inline void SaveSkillPageReq::set_allocated_skill_page(::protoc::gameproto::SkillPage* skill_page) {
  delete skill_page_;
  skill_page_ = skill_page;
  if (skill_page) {
    set_has_skill_page();
  } else {
    clear_has_skill_page();
  }
}

// -------------------------------------------------------------------

// SaveSkillPageAck

// optional int32 err_no = 1;
inline bool SaveSkillPageAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveSkillPageAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveSkillPageAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveSkillPageAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SaveSkillPageAck::err_no() const {
  return err_no_;
}
inline void SaveSkillPageAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// SaveActiveSkillReq

// optional uint32 page = 1;
inline bool SaveActiveSkillReq::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveActiveSkillReq::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveActiveSkillReq::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveActiveSkillReq::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 SaveActiveSkillReq::page() const {
  return page_;
}
inline void SaveActiveSkillReq::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
}

// optional uint32 active_skill_id_first = 2;
inline bool SaveActiveSkillReq::has_active_skill_id_first() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveActiveSkillReq::set_has_active_skill_id_first() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveActiveSkillReq::clear_has_active_skill_id_first() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveActiveSkillReq::clear_active_skill_id_first() {
  active_skill_id_first_ = 0u;
  clear_has_active_skill_id_first();
}
inline ::google::protobuf::uint32 SaveActiveSkillReq::active_skill_id_first() const {
  return active_skill_id_first_;
}
inline void SaveActiveSkillReq::set_active_skill_id_first(::google::protobuf::uint32 value) {
  set_has_active_skill_id_first();
  active_skill_id_first_ = value;
}

// optional uint32 active_skill_id_second = 3;
inline bool SaveActiveSkillReq::has_active_skill_id_second() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SaveActiveSkillReq::set_has_active_skill_id_second() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SaveActiveSkillReq::clear_has_active_skill_id_second() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SaveActiveSkillReq::clear_active_skill_id_second() {
  active_skill_id_second_ = 0u;
  clear_has_active_skill_id_second();
}
inline ::google::protobuf::uint32 SaveActiveSkillReq::active_skill_id_second() const {
  return active_skill_id_second_;
}
inline void SaveActiveSkillReq::set_active_skill_id_second(::google::protobuf::uint32 value) {
  set_has_active_skill_id_second();
  active_skill_id_second_ = value;
}

// -------------------------------------------------------------------

// SaveActiveSkillAck

// optional int32 err_no = 1;
inline bool SaveActiveSkillAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveActiveSkillAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveActiveSkillAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveActiveSkillAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SaveActiveSkillAck::err_no() const {
  return err_no_;
}
inline void SaveActiveSkillAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// GoodsItem

// optional uint64 qwID = 1;
inline bool GoodsItem::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsItem::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsItem::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsItem::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 GoodsItem::qwid() const {
  return qwid_;
}
inline void GoodsItem::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// optional uint32 goods_id = 2;
inline bool GoodsItem::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsItem::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsItem::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsItem::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 GoodsItem::goods_id() const {
  return goods_id_;
}
inline void GoodsItem::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// optional uint32 number = 3;
inline bool GoodsItem::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsItem::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsItem::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsItem::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 GoodsItem::number() const {
  return number_;
}
inline void GoodsItem::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// GoodsList

// repeated .protoc.gameproto.GoodsItem data = 1;
inline int GoodsList::data_size() const {
  return data_.size();
}
inline void GoodsList::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::GoodsItem& GoodsList::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::GoodsItem* GoodsList::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::GoodsItem* GoodsList::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsItem >&
GoodsList::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::GoodsItem >*
GoodsList::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// AddGoodsItem

// optional .protoc.gameproto.GoodsItem item = 1;
inline bool AddGoodsItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddGoodsItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddGoodsItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddGoodsItem::clear_item() {
  if (item_ != NULL) item_->::protoc::gameproto::GoodsItem::Clear();
  clear_has_item();
}
inline const ::protoc::gameproto::GoodsItem& AddGoodsItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::protoc::gameproto::GoodsItem* AddGoodsItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::protoc::gameproto::GoodsItem;
  return item_;
}
inline ::protoc::gameproto::GoodsItem* AddGoodsItem::release_item() {
  clear_has_item();
  ::protoc::gameproto::GoodsItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void AddGoodsItem::set_allocated_item(::protoc::gameproto::GoodsItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// UpdateGoodsNumber

// optional uint64 qwid = 1;
inline bool UpdateGoodsNumber::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateGoodsNumber::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateGoodsNumber::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateGoodsNumber::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 UpdateGoodsNumber::qwid() const {
  return qwid_;
}
inline void UpdateGoodsNumber::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// optional uint32 number = 2;
inline bool UpdateGoodsNumber::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateGoodsNumber::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateGoodsNumber::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateGoodsNumber::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 UpdateGoodsNumber::number() const {
  return number_;
}
inline void UpdateGoodsNumber::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// EquipData

// optional uint64 qwID = 1;
inline bool EquipData::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipData::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipData::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipData::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 EquipData::qwid() const {
  return qwid_;
}
inline void EquipData::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// optional uint32 goods_id = 2;
inline bool EquipData::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipData::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipData::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipData::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
inline ::google::protobuf::uint32 EquipData::goods_id() const {
  return goods_id_;
}
inline void EquipData::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// optional uint32 exp = 3;
inline bool EquipData::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipData::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipData::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipData::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 EquipData::exp() const {
  return exp_;
}
inline void EquipData::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// optional uint32 level = 4;
inline bool EquipData::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipData::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipData::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 EquipData::level() const {
  return level_;
}
inline void EquipData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated uint32 hole_id = 5;
inline int EquipData::hole_id_size() const {
  return hole_id_.size();
}
inline void EquipData::clear_hole_id() {
  hole_id_.Clear();
}
inline ::google::protobuf::uint32 EquipData::hole_id(int index) const {
  return hole_id_.Get(index);
}
inline void EquipData::set_hole_id(int index, ::google::protobuf::uint32 value) {
  hole_id_.Set(index, value);
}
inline void EquipData::add_hole_id(::google::protobuf::uint32 value) {
  hole_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EquipData::hole_id() const {
  return hole_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EquipData::mutable_hole_id() {
  return &hole_id_;
}

// optional uint64 qwpet_id = 6;
inline bool EquipData::has_qwpet_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipData::set_has_qwpet_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipData::clear_has_qwpet_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipData::clear_qwpet_id() {
  qwpet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_qwpet_id();
}
inline ::google::protobuf::uint64 EquipData::qwpet_id() const {
  return qwpet_id_;
}
inline void EquipData::set_qwpet_id(::google::protobuf::uint64 value) {
  set_has_qwpet_id();
  qwpet_id_ = value;
}

// -------------------------------------------------------------------

// EquipList

// repeated .protoc.gameproto.EquipData data = 1;
inline int EquipList::data_size() const {
  return data_.size();
}
inline void EquipList::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::EquipData& EquipList::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::EquipData* EquipList::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::EquipData* EquipList::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >&
EquipList::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::EquipData >*
EquipList::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// AddEquip

// optional .protoc.gameproto.EquipData data = 1;
inline bool AddEquip::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddEquip::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddEquip::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddEquip::clear_data() {
  if (data_ != NULL) data_->::protoc::gameproto::EquipData::Clear();
  clear_has_data();
}
inline const ::protoc::gameproto::EquipData& AddEquip::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protoc::gameproto::EquipData* AddEquip::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protoc::gameproto::EquipData;
  return data_;
}
inline ::protoc::gameproto::EquipData* AddEquip::release_data() {
  clear_has_data();
  ::protoc::gameproto::EquipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void AddEquip::set_allocated_data(::protoc::gameproto::EquipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// DelEquip

// optional uint64 qwid = 1;
inline bool DelEquip::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelEquip::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelEquip::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelEquip::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 DelEquip::qwid() const {
  return qwid_;
}
inline void DelEquip::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// -------------------------------------------------------------------

// UpdateEquip

// optional .protoc.gameproto.EquipData data = 1;
inline bool UpdateEquip::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateEquip::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateEquip::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateEquip::clear_data() {
  if (data_ != NULL) data_->::protoc::gameproto::EquipData::Clear();
  clear_has_data();
}
inline const ::protoc::gameproto::EquipData& UpdateEquip::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protoc::gameproto::EquipData* UpdateEquip::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protoc::gameproto::EquipData;
  return data_;
}
inline ::protoc::gameproto::EquipData* UpdateEquip::release_data() {
  clear_has_data();
  ::protoc::gameproto::EquipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UpdateEquip::set_allocated_data(::protoc::gameproto::EquipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// PutOnEquipReq

// optional uint64 pet_id = 1;
inline bool PutOnEquipReq::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutOnEquipReq::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutOnEquipReq::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutOnEquipReq::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 PutOnEquipReq::pet_id() const {
  return pet_id_;
}
inline void PutOnEquipReq::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional uint64 equip_id = 2;
inline bool PutOnEquipReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutOnEquipReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutOnEquipReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutOnEquipReq::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 PutOnEquipReq::equip_id() const {
  return equip_id_;
}
inline void PutOnEquipReq::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// -------------------------------------------------------------------

// PutOnEquipAck

// optional int32 err_no = 1;
inline bool PutOnEquipAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutOnEquipAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutOnEquipAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutOnEquipAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PutOnEquipAck::err_no() const {
  return err_no_;
}
inline void PutOnEquipAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 pet_id = 2;
inline bool PutOnEquipAck::has_pet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutOnEquipAck::set_has_pet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutOnEquipAck::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutOnEquipAck::clear_pet_id() {
  pet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::uint64 PutOnEquipAck::pet_id() const {
  return pet_id_;
}
inline void PutOnEquipAck::set_pet_id(::google::protobuf::uint64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional uint64 equip_id = 3;
inline bool PutOnEquipAck::has_equip_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutOnEquipAck::set_has_equip_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutOnEquipAck::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutOnEquipAck::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 PutOnEquipAck::equip_id() const {
  return equip_id_;
}
inline void PutOnEquipAck::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// -------------------------------------------------------------------

// TongShiEquip

// optional uint64 equip_id = 1;
inline bool TongShiEquip::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TongShiEquip::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TongShiEquip::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TongShiEquip::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 TongShiEquip::equip_id() const {
  return equip_id_;
}
inline void TongShiEquip::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// optional uint32 number = 2;
inline bool TongShiEquip::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TongShiEquip::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TongShiEquip::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TongShiEquip::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 TongShiEquip::number() const {
  return number_;
}
inline void TongShiEquip::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// StrengEquipReq

// optional uint64 equip_id = 1;
inline bool StrengEquipReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrengEquipReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrengEquipReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrengEquipReq::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 StrengEquipReq::equip_id() const {
  return equip_id_;
}
inline void StrengEquipReq::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// repeated .protoc.gameproto.TongShiEquip tonshi = 2;
inline int StrengEquipReq::tonshi_size() const {
  return tonshi_.size();
}
inline void StrengEquipReq::clear_tonshi() {
  tonshi_.Clear();
}
inline const ::protoc::gameproto::TongShiEquip& StrengEquipReq::tonshi(int index) const {
  return tonshi_.Get(index);
}
inline ::protoc::gameproto::TongShiEquip* StrengEquipReq::mutable_tonshi(int index) {
  return tonshi_.Mutable(index);
}
inline ::protoc::gameproto::TongShiEquip* StrengEquipReq::add_tonshi() {
  return tonshi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TongShiEquip >&
StrengEquipReq::tonshi() const {
  return tonshi_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::TongShiEquip >*
StrengEquipReq::mutable_tonshi() {
  return &tonshi_;
}

// -------------------------------------------------------------------

// StrengEquipAck

// optional int32 err_no = 1;
inline bool StrengEquipAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrengEquipAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrengEquipAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrengEquipAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 StrengEquipAck::err_no() const {
  return err_no_;
}
inline void StrengEquipAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 equip_id = 2;
inline bool StrengEquipAck::has_equip_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StrengEquipAck::set_has_equip_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StrengEquipAck::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StrengEquipAck::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 StrengEquipAck::equip_id() const {
  return equip_id_;
}
inline void StrengEquipAck::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// -------------------------------------------------------------------

// JinJieEquipReq

// optional uint64 equip_id = 1;
inline bool JinJieEquipReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JinJieEquipReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JinJieEquipReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JinJieEquipReq::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 JinJieEquipReq::equip_id() const {
  return equip_id_;
}
inline void JinJieEquipReq::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// -------------------------------------------------------------------

// JinJieEquipAck

// optional int32 err_no = 1;
inline bool JinJieEquipAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JinJieEquipAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JinJieEquipAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JinJieEquipAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 JinJieEquipAck::err_no() const {
  return err_no_;
}
inline void JinJieEquipAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 equip_id = 2;
inline bool JinJieEquipAck::has_equip_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JinJieEquipAck::set_has_equip_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JinJieEquipAck::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JinJieEquipAck::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 JinJieEquipAck::equip_id() const {
  return equip_id_;
}
inline void JinJieEquipAck::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// -------------------------------------------------------------------

// HeChengEquipReq

// optional uint64 goods_id = 1;
inline bool HeChengEquipReq::has_goods_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeChengEquipReq::set_has_goods_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeChengEquipReq::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeChengEquipReq::clear_goods_id() {
  goods_id_ = GOOGLE_ULONGLONG(0);
  clear_has_goods_id();
}
inline ::google::protobuf::uint64 HeChengEquipReq::goods_id() const {
  return goods_id_;
}
inline void HeChengEquipReq::set_goods_id(::google::protobuf::uint64 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// -------------------------------------------------------------------

// HeChengEquipAck

// optional int32 err_no = 1;
inline bool HeChengEquipAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeChengEquipAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeChengEquipAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeChengEquipAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 HeChengEquipAck::err_no() const {
  return err_no_;
}
inline void HeChengEquipAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 goods_id = 2;
inline bool HeChengEquipAck::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeChengEquipAck::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeChengEquipAck::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeChengEquipAck::clear_goods_id() {
  goods_id_ = GOOGLE_ULONGLONG(0);
  clear_has_goods_id();
}
inline ::google::protobuf::uint64 HeChengEquipAck::goods_id() const {
  return goods_id_;
}
inline void HeChengEquipAck::set_goods_id(::google::protobuf::uint64 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// -------------------------------------------------------------------

// SellGoodsReq

// optional uint64 goods_id = 1;
inline bool SellGoodsReq::has_goods_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellGoodsReq::set_has_goods_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellGoodsReq::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellGoodsReq::clear_goods_id() {
  goods_id_ = GOOGLE_ULONGLONG(0);
  clear_has_goods_id();
}
inline ::google::protobuf::uint64 SellGoodsReq::goods_id() const {
  return goods_id_;
}
inline void SellGoodsReq::set_goods_id(::google::protobuf::uint64 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// optional uint32 number = 2;
inline bool SellGoodsReq::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellGoodsReq::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellGoodsReq::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellGoodsReq::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 SellGoodsReq::number() const {
  return number_;
}
inline void SellGoodsReq::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// SellGoodsAck

// optional int32 err_no = 1;
inline bool SellGoodsAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SellGoodsAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SellGoodsAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SellGoodsAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SellGoodsAck::err_no() const {
  return err_no_;
}
inline void SellGoodsAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 goods_id = 2;
inline bool SellGoodsAck::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SellGoodsAck::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SellGoodsAck::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SellGoodsAck::clear_goods_id() {
  goods_id_ = GOOGLE_ULONGLONG(0);
  clear_has_goods_id();
}
inline ::google::protobuf::uint64 SellGoodsAck::goods_id() const {
  return goods_id_;
}
inline void SellGoodsAck::set_goods_id(::google::protobuf::uint64 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// optional uint32 number = 3;
inline bool SellGoodsAck::has_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SellGoodsAck::set_has_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SellGoodsAck::clear_has_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SellGoodsAck::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 SellGoodsAck::number() const {
  return number_;
}
inline void SellGoodsAck::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// EquipSetStoreReq

// optional uint64 equip_id = 1;
inline bool EquipSetStoreReq::has_equip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSetStoreReq::set_has_equip_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSetStoreReq::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSetStoreReq::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 EquipSetStoreReq::equip_id() const {
  return equip_id_;
}
inline void EquipSetStoreReq::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// optional uint64 store_id = 2;
inline bool EquipSetStoreReq::has_store_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSetStoreReq::set_has_store_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSetStoreReq::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSetStoreReq::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
inline ::google::protobuf::uint64 EquipSetStoreReq::store_id() const {
  return store_id_;
}
inline void EquipSetStoreReq::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
}

// optional uint32 idx = 3;
inline bool EquipSetStoreReq::has_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSetStoreReq::set_has_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSetStoreReq::clear_has_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSetStoreReq::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 EquipSetStoreReq::idx() const {
  return idx_;
}
inline void EquipSetStoreReq::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// EquipSetStoreAck

// optional int32 err_no = 1;
inline bool EquipSetStoreAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSetStoreAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSetStoreAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSetStoreAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 EquipSetStoreAck::err_no() const {
  return err_no_;
}
inline void EquipSetStoreAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 equip_id = 2;
inline bool EquipSetStoreAck::has_equip_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSetStoreAck::set_has_equip_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSetStoreAck::clear_has_equip_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSetStoreAck::clear_equip_id() {
  equip_id_ = GOOGLE_ULONGLONG(0);
  clear_has_equip_id();
}
inline ::google::protobuf::uint64 EquipSetStoreAck::equip_id() const {
  return equip_id_;
}
inline void EquipSetStoreAck::set_equip_id(::google::protobuf::uint64 value) {
  set_has_equip_id();
  equip_id_ = value;
}

// optional uint64 store_id = 3;
inline bool EquipSetStoreAck::has_store_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSetStoreAck::set_has_store_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSetStoreAck::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSetStoreAck::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
inline ::google::protobuf::uint64 EquipSetStoreAck::store_id() const {
  return store_id_;
}
inline void EquipSetStoreAck::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
}

// optional uint32 idx = 4;
inline bool EquipSetStoreAck::has_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipSetStoreAck::set_has_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipSetStoreAck::clear_has_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipSetStoreAck::clear_idx() {
  idx_ = 0u;
  clear_has_idx();
}
inline ::google::protobuf::uint32 EquipSetStoreAck::idx() const {
  return idx_;
}
inline void EquipSetStoreAck::set_idx(::google::protobuf::uint32 value) {
  set_has_idx();
  idx_ = value;
}

// -------------------------------------------------------------------

// ShareDataNtf

// optional uint32 kind = 1;
inline bool ShareDataNtf::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareDataNtf::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareDataNtf::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareDataNtf::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ShareDataNtf::kind() const {
  return kind_;
}
inline void ShareDataNtf::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
}

// optional uint32 id = 2;
inline bool ShareDataNtf::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareDataNtf::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareDataNtf::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareDataNtf::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 ShareDataNtf::id() const {
  return id_;
}
inline void ShareDataNtf::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CompleteLoadDataNtf

// -------------------------------------------------------------------

// SetPetNewStateReq

// optional uint64 qwid = 1;
inline bool SetPetNewStateReq::has_qwid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPetNewStateReq::set_has_qwid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPetNewStateReq::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPetNewStateReq::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 SetPetNewStateReq::qwid() const {
  return qwid_;
}
inline void SetPetNewStateReq::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// -------------------------------------------------------------------

// SetPetNewStateAck

// optional int32 err_no = 1;
inline bool SetPetNewStateAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPetNewStateAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPetNewStateAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPetNewStateAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 SetPetNewStateAck::err_no() const {
  return err_no_;
}
inline void SetPetNewStateAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional uint64 qwid = 2;
inline bool SetPetNewStateAck::has_qwid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetPetNewStateAck::set_has_qwid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetPetNewStateAck::clear_has_qwid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetPetNewStateAck::clear_qwid() {
  qwid_ = GOOGLE_ULONGLONG(0);
  clear_has_qwid();
}
inline ::google::protobuf::uint64 SetPetNewStateAck::qwid() const {
  return qwid_;
}
inline void SetPetNewStateAck::set_qwid(::google::protobuf::uint64 value) {
  set_has_qwid();
  qwid_ = value;
}

// -------------------------------------------------------------------

// UpdateBuyActionCounts

// optional uint32 cur_counts = 1;
inline bool UpdateBuyActionCounts::has_cur_counts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateBuyActionCounts::set_has_cur_counts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateBuyActionCounts::clear_has_cur_counts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateBuyActionCounts::clear_cur_counts() {
  cur_counts_ = 0u;
  clear_has_cur_counts();
}
inline ::google::protobuf::uint32 UpdateBuyActionCounts::cur_counts() const {
  return cur_counts_;
}
inline void UpdateBuyActionCounts::set_cur_counts(::google::protobuf::uint32 value) {
  set_has_cur_counts();
  cur_counts_ = value;
}

// optional uint32 max_counts = 2;
inline bool UpdateBuyActionCounts::has_max_counts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateBuyActionCounts::set_has_max_counts() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateBuyActionCounts::clear_has_max_counts() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateBuyActionCounts::clear_max_counts() {
  max_counts_ = 0u;
  clear_has_max_counts();
}
inline ::google::protobuf::uint32 UpdateBuyActionCounts::max_counts() const {
  return max_counts_;
}
inline void UpdateBuyActionCounts::set_max_counts(::google::protobuf::uint32 value) {
  set_has_max_counts();
  max_counts_ = value;
}

// -------------------------------------------------------------------

// PythonMsg_example

// optional double t_double = 1;
inline bool PythonMsg_example::has_t_double() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PythonMsg_example::set_has_t_double() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PythonMsg_example::clear_has_t_double() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PythonMsg_example::clear_t_double() {
  t_double_ = 0;
  clear_has_t_double();
}
inline double PythonMsg_example::t_double() const {
  return t_double_;
}
inline void PythonMsg_example::set_t_double(double value) {
  set_has_t_double();
  t_double_ = value;
}

// optional float t_float = 2;
inline bool PythonMsg_example::has_t_float() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PythonMsg_example::set_has_t_float() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PythonMsg_example::clear_has_t_float() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PythonMsg_example::clear_t_float() {
  t_float_ = 0;
  clear_has_t_float();
}
inline float PythonMsg_example::t_float() const {
  return t_float_;
}
inline void PythonMsg_example::set_t_float(float value) {
  set_has_t_float();
  t_float_ = value;
}

// optional int32 t_int32 = 3;
inline bool PythonMsg_example::has_t_int32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PythonMsg_example::set_has_t_int32() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PythonMsg_example::clear_has_t_int32() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PythonMsg_example::clear_t_int32() {
  t_int32_ = 0;
  clear_has_t_int32();
}
inline ::google::protobuf::int32 PythonMsg_example::t_int32() const {
  return t_int32_;
}
inline void PythonMsg_example::set_t_int32(::google::protobuf::int32 value) {
  set_has_t_int32();
  t_int32_ = value;
}

// optional int64 t_int64 = 4;
inline bool PythonMsg_example::has_t_int64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PythonMsg_example::set_has_t_int64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PythonMsg_example::clear_has_t_int64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PythonMsg_example::clear_t_int64() {
  t_int64_ = GOOGLE_LONGLONG(0);
  clear_has_t_int64();
}
inline ::google::protobuf::int64 PythonMsg_example::t_int64() const {
  return t_int64_;
}
inline void PythonMsg_example::set_t_int64(::google::protobuf::int64 value) {
  set_has_t_int64();
  t_int64_ = value;
}

// optional uint32 t_uint32 = 5;
inline bool PythonMsg_example::has_t_uint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PythonMsg_example::set_has_t_uint32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PythonMsg_example::clear_has_t_uint32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PythonMsg_example::clear_t_uint32() {
  t_uint32_ = 0u;
  clear_has_t_uint32();
}
inline ::google::protobuf::uint32 PythonMsg_example::t_uint32() const {
  return t_uint32_;
}
inline void PythonMsg_example::set_t_uint32(::google::protobuf::uint32 value) {
  set_has_t_uint32();
  t_uint32_ = value;
}

// optional uint64 t_uint64 = 6;
inline bool PythonMsg_example::has_t_uint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PythonMsg_example::set_has_t_uint64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PythonMsg_example::clear_has_t_uint64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PythonMsg_example::clear_t_uint64() {
  t_uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_t_uint64();
}
inline ::google::protobuf::uint64 PythonMsg_example::t_uint64() const {
  return t_uint64_;
}
inline void PythonMsg_example::set_t_uint64(::google::protobuf::uint64 value) {
  set_has_t_uint64();
  t_uint64_ = value;
}

// optional sint32 t_sint32 = 7;
inline bool PythonMsg_example::has_t_sint32() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PythonMsg_example::set_has_t_sint32() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PythonMsg_example::clear_has_t_sint32() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PythonMsg_example::clear_t_sint32() {
  t_sint32_ = 0;
  clear_has_t_sint32();
}
inline ::google::protobuf::int32 PythonMsg_example::t_sint32() const {
  return t_sint32_;
}
inline void PythonMsg_example::set_t_sint32(::google::protobuf::int32 value) {
  set_has_t_sint32();
  t_sint32_ = value;
}

// optional sint64 t_sint64 = 8;
inline bool PythonMsg_example::has_t_sint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PythonMsg_example::set_has_t_sint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PythonMsg_example::clear_has_t_sint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PythonMsg_example::clear_t_sint64() {
  t_sint64_ = GOOGLE_LONGLONG(0);
  clear_has_t_sint64();
}
inline ::google::protobuf::int64 PythonMsg_example::t_sint64() const {
  return t_sint64_;
}
inline void PythonMsg_example::set_t_sint64(::google::protobuf::int64 value) {
  set_has_t_sint64();
  t_sint64_ = value;
}

// optional bool t_bool = 9;
inline bool PythonMsg_example::has_t_bool() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PythonMsg_example::set_has_t_bool() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PythonMsg_example::clear_has_t_bool() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PythonMsg_example::clear_t_bool() {
  t_bool_ = false;
  clear_has_t_bool();
}
inline bool PythonMsg_example::t_bool() const {
  return t_bool_;
}
inline void PythonMsg_example::set_t_bool(bool value) {
  set_has_t_bool();
  t_bool_ = value;
}

// optional string t_string = 10;
inline bool PythonMsg_example::has_t_string() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PythonMsg_example::set_has_t_string() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PythonMsg_example::clear_has_t_string() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PythonMsg_example::clear_t_string() {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    t_string_->clear();
  }
  clear_has_t_string();
}
inline const ::std::string& PythonMsg_example::t_string() const {
  return *t_string_;
}
inline void PythonMsg_example::set_t_string(const ::std::string& value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void PythonMsg_example::set_t_string(const char* value) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(value);
}
inline void PythonMsg_example::set_t_string(const char* value, size_t size) {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  t_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PythonMsg_example::mutable_t_string() {
  set_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    t_string_ = new ::std::string;
  }
  return t_string_;
}
inline ::std::string* PythonMsg_example::release_t_string() {
  clear_has_t_string();
  if (t_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_string_;
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PythonMsg_example::set_allocated_t_string(::std::string* t_string) {
  if (t_string_ != &::google::protobuf::internal::kEmptyString) {
    delete t_string_;
  }
  if (t_string) {
    set_has_t_string();
    t_string_ = t_string;
  } else {
    clear_has_t_string();
    t_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes t_bytes = 11;
inline bool PythonMsg_example::has_t_bytes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PythonMsg_example::set_has_t_bytes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PythonMsg_example::clear_has_t_bytes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PythonMsg_example::clear_t_bytes() {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    t_bytes_->clear();
  }
  clear_has_t_bytes();
}
inline const ::std::string& PythonMsg_example::t_bytes() const {
  return *t_bytes_;
}
inline void PythonMsg_example::set_t_bytes(const ::std::string& value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void PythonMsg_example::set_t_bytes(const char* value) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(value);
}
inline void PythonMsg_example::set_t_bytes(const void* value, size_t size) {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  t_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PythonMsg_example::mutable_t_bytes() {
  set_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    t_bytes_ = new ::std::string;
  }
  return t_bytes_;
}
inline ::std::string* PythonMsg_example::release_t_bytes() {
  clear_has_t_bytes();
  if (t_bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = t_bytes_;
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PythonMsg_example::set_allocated_t_bytes(::std::string* t_bytes) {
  if (t_bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete t_bytes_;
  }
  if (t_bytes) {
    set_has_t_bytes();
    t_bytes_ = t_bytes;
  } else {
    clear_has_t_bytes();
    t_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PythonMessage

// optional int32 id = 1;
inline bool PythonMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PythonMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PythonMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PythonMessage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PythonMessage::id() const {
  return id_;
}
inline void PythonMessage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional bytes msg = 2;
inline bool PythonMessage::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PythonMessage::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PythonMessage::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PythonMessage::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& PythonMessage::msg() const {
  return *msg_;
}
inline void PythonMessage::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PythonMessage::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void PythonMessage::set_msg(const void* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PythonMessage::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* PythonMessage::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PythonMessage::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PyChouKaReq

// optional int32 id = 1;
inline bool PyChouKaReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyChouKaReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyChouKaReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyChouKaReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PyChouKaReq::id() const {
  return id_;
}
inline void PyChouKaReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional bool is_one = 2 [default = true];
inline bool PyChouKaReq::has_is_one() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyChouKaReq::set_has_is_one() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyChouKaReq::clear_has_is_one() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyChouKaReq::clear_is_one() {
  is_one_ = true;
  clear_has_is_one();
}
inline bool PyChouKaReq::is_one() const {
  return is_one_;
}
inline void PyChouKaReq::set_is_one(bool value) {
  set_has_is_one();
  is_one_ = value;
}

// -------------------------------------------------------------------

// PyPetInfo

// optional uint32 pet_id = 1;
inline bool PyPetInfo::has_pet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyPetInfo::set_has_pet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyPetInfo::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyPetInfo::clear_pet_id() {
  pet_id_ = 0u;
  clear_has_pet_id();
}
inline ::google::protobuf::uint32 PyPetInfo::pet_id() const {
  return pet_id_;
}
inline void PyPetInfo::set_pet_id(::google::protobuf::uint32 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// optional int32 level = 2;
inline bool PyPetInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyPetInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyPetInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyPetInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PyPetInfo::level() const {
  return level_;
}
inline void PyPetInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PyChouKaAck

// optional int32 err_no = 1;
inline bool PyChouKaAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyChouKaAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyChouKaAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyChouKaAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PyChouKaAck::err_no() const {
  return err_no_;
}
inline void PyChouKaAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// repeated .protoc.gameproto.PyPetInfo info = 2;
inline int PyChouKaAck::info_size() const {
  return info_.size();
}
inline void PyChouKaAck::clear_info() {
  info_.Clear();
}
inline const ::protoc::gameproto::PyPetInfo& PyChouKaAck::info(int index) const {
  return info_.Get(index);
}
inline ::protoc::gameproto::PyPetInfo* PyChouKaAck::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::protoc::gameproto::PyPetInfo* PyChouKaAck::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyPetInfo >&
PyChouKaAck::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyPetInfo >*
PyChouKaAck::mutable_info() {
  return &info_;
}

// repeated uint32 item_id = 3;
inline int PyChouKaAck::item_id_size() const {
  return item_id_.size();
}
inline void PyChouKaAck::clear_item_id() {
  item_id_.Clear();
}
inline ::google::protobuf::uint32 PyChouKaAck::item_id(int index) const {
  return item_id_.Get(index);
}
inline void PyChouKaAck::set_item_id(int index, ::google::protobuf::uint32 value) {
  item_id_.Set(index, value);
}
inline void PyChouKaAck::add_item_id(::google::protobuf::uint32 value) {
  item_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PyChouKaAck::item_id() const {
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PyChouKaAck::mutable_item_id() {
  return &item_id_;
}

// -------------------------------------------------------------------

// PyGenGaoData

// optional string theme = 1;
inline bool PyGenGaoData::has_theme() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyGenGaoData::set_has_theme() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyGenGaoData::clear_has_theme() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyGenGaoData::clear_theme() {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    theme_->clear();
  }
  clear_has_theme();
}
inline const ::std::string& PyGenGaoData::theme() const {
  return *theme_;
}
inline void PyGenGaoData::set_theme(const ::std::string& value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void PyGenGaoData::set_theme(const char* value) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(value);
}
inline void PyGenGaoData::set_theme(const char* value, size_t size) {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  theme_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyGenGaoData::mutable_theme() {
  set_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    theme_ = new ::std::string;
  }
  return theme_;
}
inline ::std::string* PyGenGaoData::release_theme() {
  clear_has_theme();
  if (theme_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = theme_;
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyGenGaoData::set_allocated_theme(::std::string* theme) {
  if (theme_ != &::google::protobuf::internal::kEmptyString) {
    delete theme_;
  }
  if (theme) {
    set_has_theme();
    theme_ = theme;
  } else {
    clear_has_theme();
    theme_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 2;
inline bool PyGenGaoData::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyGenGaoData::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyGenGaoData::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyGenGaoData::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& PyGenGaoData::content() const {
  return *content_;
}
inline void PyGenGaoData::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PyGenGaoData::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void PyGenGaoData::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyGenGaoData::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* PyGenGaoData::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyGenGaoData::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PyGetGenGaoReq

// -------------------------------------------------------------------

// PyGetGenGaoAck

// repeated .protoc.gameproto.PyGenGaoData data = 1;
inline int PyGetGenGaoAck::data_size() const {
  return data_.size();
}
inline void PyGetGenGaoAck::clear_data() {
  data_.Clear();
}
inline const ::protoc::gameproto::PyGenGaoData& PyGetGenGaoAck::data(int index) const {
  return data_.Get(index);
}
inline ::protoc::gameproto::PyGenGaoData* PyGetGenGaoAck::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protoc::gameproto::PyGenGaoData* PyGetGenGaoAck::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGenGaoData >&
PyGetGenGaoAck::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGenGaoData >*
PyGetGenGaoAck::mutable_data() {
  return &data_;
}

// -------------------------------------------------------------------

// PyGetGoodActivePanelReq

// -------------------------------------------------------------------

// PyGoodActiveInfo

// optional uint32 active_id = 1;
inline bool PyGoodActiveInfo::has_active_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyGoodActiveInfo::set_has_active_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyGoodActiveInfo::clear_has_active_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyGoodActiveInfo::clear_active_id() {
  active_id_ = 0u;
  clear_has_active_id();
}
inline ::google::protobuf::uint32 PyGoodActiveInfo::active_id() const {
  return active_id_;
}
inline void PyGoodActiveInfo::set_active_id(::google::protobuf::uint32 value) {
  set_has_active_id();
  active_id_ = value;
}

// optional uint32 type = 2;
inline bool PyGoodActiveInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyGoodActiveInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyGoodActiveInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyGoodActiveInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PyGoodActiveInfo::type() const {
  return type_;
}
inline void PyGoodActiveInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional string title = 3;
inline bool PyGoodActiveInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyGoodActiveInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyGoodActiveInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyGoodActiveInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& PyGoodActiveInfo::title() const {
  return *title_;
}
inline void PyGoodActiveInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PyGoodActiveInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void PyGoodActiveInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyGoodActiveInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* PyGoodActiveInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyGoodActiveInfo::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string desction = 4;
inline bool PyGoodActiveInfo::has_desction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PyGoodActiveInfo::set_has_desction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PyGoodActiveInfo::clear_has_desction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PyGoodActiveInfo::clear_desction() {
  if (desction_ != &::google::protobuf::internal::kEmptyString) {
    desction_->clear();
  }
  clear_has_desction();
}
inline const ::std::string& PyGoodActiveInfo::desction() const {
  return *desction_;
}
inline void PyGoodActiveInfo::set_desction(const ::std::string& value) {
  set_has_desction();
  if (desction_ == &::google::protobuf::internal::kEmptyString) {
    desction_ = new ::std::string;
  }
  desction_->assign(value);
}
inline void PyGoodActiveInfo::set_desction(const char* value) {
  set_has_desction();
  if (desction_ == &::google::protobuf::internal::kEmptyString) {
    desction_ = new ::std::string;
  }
  desction_->assign(value);
}
inline void PyGoodActiveInfo::set_desction(const char* value, size_t size) {
  set_has_desction();
  if (desction_ == &::google::protobuf::internal::kEmptyString) {
    desction_ = new ::std::string;
  }
  desction_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyGoodActiveInfo::mutable_desction() {
  set_has_desction();
  if (desction_ == &::google::protobuf::internal::kEmptyString) {
    desction_ = new ::std::string;
  }
  return desction_;
}
inline ::std::string* PyGoodActiveInfo::release_desction() {
  clear_has_desction();
  if (desction_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desction_;
    desction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyGoodActiveInfo::set_allocated_desction(::std::string* desction) {
  if (desction_ != &::google::protobuf::internal::kEmptyString) {
    delete desction_;
  }
  if (desction) {
    set_has_desction();
    desction_ = desction;
  } else {
    clear_has_desction();
    desction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 param1 = 5;
inline bool PyGoodActiveInfo::has_param1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PyGoodActiveInfo::set_has_param1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PyGoodActiveInfo::clear_has_param1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PyGoodActiveInfo::clear_param1() {
  param1_ = GOOGLE_LONGLONG(0);
  clear_has_param1();
}
inline ::google::protobuf::int64 PyGoodActiveInfo::param1() const {
  return param1_;
}
inline void PyGoodActiveInfo::set_param1(::google::protobuf::int64 value) {
  set_has_param1();
  param1_ = value;
}

// optional string award = 6;
inline bool PyGoodActiveInfo::has_award() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PyGoodActiveInfo::set_has_award() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PyGoodActiveInfo::clear_has_award() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PyGoodActiveInfo::clear_award() {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    award_->clear();
  }
  clear_has_award();
}
inline const ::std::string& PyGoodActiveInfo::award() const {
  return *award_;
}
inline void PyGoodActiveInfo::set_award(const ::std::string& value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void PyGoodActiveInfo::set_award(const char* value) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(value);
}
inline void PyGoodActiveInfo::set_award(const char* value, size_t size) {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  award_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyGoodActiveInfo::mutable_award() {
  set_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    award_ = new ::std::string;
  }
  return award_;
}
inline ::std::string* PyGoodActiveInfo::release_award() {
  clear_has_award();
  if (award_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = award_;
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyGoodActiveInfo::set_allocated_award(::std::string* award) {
  if (award_ != &::google::protobuf::internal::kEmptyString) {
    delete award_;
  }
  if (award) {
    set_has_award();
    award_ = award;
  } else {
    clear_has_award();
    award_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PyGetGoodActivePanelAck

// repeated .protoc.gameproto.PyGoodActiveInfo actives = 1;
inline int PyGetGoodActivePanelAck::actives_size() const {
  return actives_.size();
}
inline void PyGetGoodActivePanelAck::clear_actives() {
  actives_.Clear();
}
inline const ::protoc::gameproto::PyGoodActiveInfo& PyGetGoodActivePanelAck::actives(int index) const {
  return actives_.Get(index);
}
inline ::protoc::gameproto::PyGoodActiveInfo* PyGetGoodActivePanelAck::mutable_actives(int index) {
  return actives_.Mutable(index);
}
inline ::protoc::gameproto::PyGoodActiveInfo* PyGetGoodActivePanelAck::add_actives() {
  return actives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGoodActiveInfo >&
PyGetGoodActivePanelAck::actives() const {
  return actives_;
}
inline ::google::protobuf::RepeatedPtrField< ::protoc::gameproto::PyGoodActiveInfo >*
PyGetGoodActivePanelAck::mutable_actives() {
  return &actives_;
}

// -------------------------------------------------------------------

// PyGetActiveAwardReq

// optional uint32 active_id = 1;
inline bool PyGetActiveAwardReq::has_active_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyGetActiveAwardReq::set_has_active_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyGetActiveAwardReq::clear_has_active_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyGetActiveAwardReq::clear_active_id() {
  active_id_ = 0u;
  clear_has_active_id();
}
inline ::google::protobuf::uint32 PyGetActiveAwardReq::active_id() const {
  return active_id_;
}
inline void PyGetActiveAwardReq::set_active_id(::google::protobuf::uint32 value) {
  set_has_active_id();
  active_id_ = value;
}

// -------------------------------------------------------------------

// PyGetActiveAwardAck

// optional uint32 active_id = 1;
inline bool PyGetActiveAwardAck::has_active_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyGetActiveAwardAck::set_has_active_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyGetActiveAwardAck::clear_has_active_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyGetActiveAwardAck::clear_active_id() {
  active_id_ = 0u;
  clear_has_active_id();
}
inline ::google::protobuf::uint32 PyGetActiveAwardAck::active_id() const {
  return active_id_;
}
inline void PyGetActiveAwardAck::set_active_id(::google::protobuf::uint32 value) {
  set_has_active_id();
  active_id_ = value;
}

// optional int32 err_no = 2;
inline bool PyGetActiveAwardAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyGetActiveAwardAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyGetActiveAwardAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyGetActiveAwardAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PyGetActiveAwardAck::err_no() const {
  return err_no_;
}
inline void PyGetActiveAwardAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PyEveryDataActiveNtf

// optional string str_awards = 1;
inline bool PyEveryDataActiveNtf::has_str_awards() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyEveryDataActiveNtf::set_has_str_awards() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyEveryDataActiveNtf::clear_has_str_awards() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyEveryDataActiveNtf::clear_str_awards() {
  if (str_awards_ != &::google::protobuf::internal::kEmptyString) {
    str_awards_->clear();
  }
  clear_has_str_awards();
}
inline const ::std::string& PyEveryDataActiveNtf::str_awards() const {
  return *str_awards_;
}
inline void PyEveryDataActiveNtf::set_str_awards(const ::std::string& value) {
  set_has_str_awards();
  if (str_awards_ == &::google::protobuf::internal::kEmptyString) {
    str_awards_ = new ::std::string;
  }
  str_awards_->assign(value);
}
inline void PyEveryDataActiveNtf::set_str_awards(const char* value) {
  set_has_str_awards();
  if (str_awards_ == &::google::protobuf::internal::kEmptyString) {
    str_awards_ = new ::std::string;
  }
  str_awards_->assign(value);
}
inline void PyEveryDataActiveNtf::set_str_awards(const char* value, size_t size) {
  set_has_str_awards();
  if (str_awards_ == &::google::protobuf::internal::kEmptyString) {
    str_awards_ = new ::std::string;
  }
  str_awards_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PyEveryDataActiveNtf::mutable_str_awards() {
  set_has_str_awards();
  if (str_awards_ == &::google::protobuf::internal::kEmptyString) {
    str_awards_ = new ::std::string;
  }
  return str_awards_;
}
inline ::std::string* PyEveryDataActiveNtf::release_str_awards() {
  clear_has_str_awards();
  if (str_awards_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_awards_;
    str_awards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PyEveryDataActiveNtf::set_allocated_str_awards(::std::string* str_awards) {
  if (str_awards_ != &::google::protobuf::internal::kEmptyString) {
    delete str_awards_;
  }
  if (str_awards) {
    set_has_str_awards();
    str_awards_ = str_awards;
  } else {
    clear_has_str_awards();
    str_awards_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 days = 2;
inline bool PyEveryDataActiveNtf::has_days() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyEveryDataActiveNtf::set_has_days() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyEveryDataActiveNtf::clear_has_days() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyEveryDataActiveNtf::clear_days() {
  days_ = 0u;
  clear_has_days();
}
inline ::google::protobuf::uint32 PyEveryDataActiveNtf::days() const {
  return days_;
}
inline void PyEveryDataActiveNtf::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
}

// optional uint32 type = 3;
inline bool PyEveryDataActiveNtf::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyEveryDataActiveNtf::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyEveryDataActiveNtf::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyEveryDataActiveNtf::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PyEveryDataActiveNtf::type() const {
  return type_;
}
inline void PyEveryDataActiveNtf::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// PySaveGuideStepReq

// optional string guide_step = 1;
inline bool PySaveGuideStepReq::has_guide_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PySaveGuideStepReq::set_has_guide_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PySaveGuideStepReq::clear_has_guide_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PySaveGuideStepReq::clear_guide_step() {
  if (guide_step_ != &::google::protobuf::internal::kEmptyString) {
    guide_step_->clear();
  }
  clear_has_guide_step();
}
inline const ::std::string& PySaveGuideStepReq::guide_step() const {
  return *guide_step_;
}
inline void PySaveGuideStepReq::set_guide_step(const ::std::string& value) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(value);
}
inline void PySaveGuideStepReq::set_guide_step(const char* value) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(value);
}
inline void PySaveGuideStepReq::set_guide_step(const char* value, size_t size) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PySaveGuideStepReq::mutable_guide_step() {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  return guide_step_;
}
inline ::std::string* PySaveGuideStepReq::release_guide_step() {
  clear_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guide_step_;
    guide_step_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PySaveGuideStepReq::set_allocated_guide_step(::std::string* guide_step) {
  if (guide_step_ != &::google::protobuf::internal::kEmptyString) {
    delete guide_step_;
  }
  if (guide_step) {
    set_has_guide_step();
    guide_step_ = guide_step;
  } else {
    clear_has_guide_step();
    guide_step_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PySaveGuideStepAck

// optional string guide_step = 1;
inline bool PySaveGuideStepAck::has_guide_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PySaveGuideStepAck::set_has_guide_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PySaveGuideStepAck::clear_has_guide_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PySaveGuideStepAck::clear_guide_step() {
  if (guide_step_ != &::google::protobuf::internal::kEmptyString) {
    guide_step_->clear();
  }
  clear_has_guide_step();
}
inline const ::std::string& PySaveGuideStepAck::guide_step() const {
  return *guide_step_;
}
inline void PySaveGuideStepAck::set_guide_step(const ::std::string& value) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(value);
}
inline void PySaveGuideStepAck::set_guide_step(const char* value) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(value);
}
inline void PySaveGuideStepAck::set_guide_step(const char* value, size_t size) {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  guide_step_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PySaveGuideStepAck::mutable_guide_step() {
  set_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    guide_step_ = new ::std::string;
  }
  return guide_step_;
}
inline ::std::string* PySaveGuideStepAck::release_guide_step() {
  clear_has_guide_step();
  if (guide_step_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guide_step_;
    guide_step_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PySaveGuideStepAck::set_allocated_guide_step(::std::string* guide_step) {
  if (guide_step_ != &::google::protobuf::internal::kEmptyString) {
    delete guide_step_;
  }
  if (guide_step) {
    set_has_guide_step();
    guide_step_ = guide_step;
  } else {
    clear_has_guide_step();
    guide_step_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 err_no = 2;
inline bool PySaveGuideStepAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PySaveGuideStepAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PySaveGuideStepAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PySaveGuideStepAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PySaveGuideStepAck::err_no() const {
  return err_no_;
}
inline void PySaveGuideStepAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// -------------------------------------------------------------------

// PyBuyCheckPointChallengeCountReq

// optional int32 chpater_kind = 1;
inline bool PyBuyCheckPointChallengeCountReq::has_chpater_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyBuyCheckPointChallengeCountReq::set_has_chpater_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_has_chpater_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_chpater_kind() {
  chpater_kind_ = 0;
  clear_has_chpater_kind();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountReq::chpater_kind() const {
  return chpater_kind_;
}
inline void PyBuyCheckPointChallengeCountReq::set_chpater_kind(::google::protobuf::int32 value) {
  set_has_chpater_kind();
  chpater_kind_ = value;
}

// optional int32 chapter_id = 2;
inline bool PyBuyCheckPointChallengeCountReq::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyBuyCheckPointChallengeCountReq::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountReq::chapter_id() const {
  return chapter_id_;
}
inline void PyBuyCheckPointChallengeCountReq::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 3;
inline bool PyBuyCheckPointChallengeCountReq::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyBuyCheckPointChallengeCountReq::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyBuyCheckPointChallengeCountReq::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountReq::check_point_id() const {
  return check_point_id_;
}
inline void PyBuyCheckPointChallengeCountReq::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// -------------------------------------------------------------------

// PyBuyCheckPointChallengeCountAck

// optional int32 chpater_kind = 1;
inline bool PyBuyCheckPointChallengeCountAck::has_chpater_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_chpater_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_chpater_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_chpater_kind() {
  chpater_kind_ = 0;
  clear_has_chpater_kind();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::chpater_kind() const {
  return chpater_kind_;
}
inline void PyBuyCheckPointChallengeCountAck::set_chpater_kind(::google::protobuf::int32 value) {
  set_has_chpater_kind();
  chpater_kind_ = value;
}

// optional int32 chapter_id = 2;
inline bool PyBuyCheckPointChallengeCountAck::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_chapter_id() {
  chapter_id_ = 0;
  clear_has_chapter_id();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::chapter_id() const {
  return chapter_id_;
}
inline void PyBuyCheckPointChallengeCountAck::set_chapter_id(::google::protobuf::int32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional int32 check_point_id = 3;
inline bool PyBuyCheckPointChallengeCountAck::has_check_point_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_check_point_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_check_point_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_check_point_id() {
  check_point_id_ = 0;
  clear_has_check_point_id();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::check_point_id() const {
  return check_point_id_;
}
inline void PyBuyCheckPointChallengeCountAck::set_check_point_id(::google::protobuf::int32 value) {
  set_has_check_point_id();
  check_point_id_ = value;
}

// optional int32 challenged_counts = 4;
inline bool PyBuyCheckPointChallengeCountAck::has_challenged_counts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_challenged_counts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_challenged_counts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_challenged_counts() {
  challenged_counts_ = 0;
  clear_has_challenged_counts();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::challenged_counts() const {
  return challenged_counts_;
}
inline void PyBuyCheckPointChallengeCountAck::set_challenged_counts(::google::protobuf::int32 value) {
  set_has_challenged_counts();
  challenged_counts_ = value;
}

// optional int32 buy_counts = 5;
inline bool PyBuyCheckPointChallengeCountAck::has_buy_counts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_buy_counts() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_buy_counts() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_buy_counts() {
  buy_counts_ = 0;
  clear_has_buy_counts();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::buy_counts() const {
  return buy_counts_;
}
inline void PyBuyCheckPointChallengeCountAck::set_buy_counts(::google::protobuf::int32 value) {
  set_has_buy_counts();
  buy_counts_ = value;
}

// optional int32 err_no = 6;
inline bool PyBuyCheckPointChallengeCountAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PyBuyCheckPointChallengeCountAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PyBuyCheckPointChallengeCountAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PyBuyCheckPointChallengeCountAck::err_no() const {
  return err_no_;
}
inline void PyBuyCheckPointChallengeCountAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gameproto
}  // namespace protoc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::TeXiaoItem_ITEM_TYPE>() {
  return ::protoc::gameproto::TeXiaoItem_ITEM_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::BufferItem_BufferEffectType>() {
  return ::protoc::gameproto::BufferItem_BufferEffectType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::CHAT_MSG_TYPE>() {
  return ::protoc::gameproto::CHAT_MSG_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::CHAT_MSG_NODE_TYPE>() {
  return ::protoc::gameproto::CHAT_MSG_NODE_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::SYSTEM_MSG_TYPE>() {
  return ::protoc::gameproto::SYSTEM_MSG_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::TEXIAO_TYPE>() {
  return ::protoc::gameproto::TEXIAO_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::CommonDialogType>() {
  return ::protoc::gameproto::CommonDialogType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::PET_POSITION>() {
  return ::protoc::gameproto::PET_POSITION_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::BUFF_TYPE>() {
  return ::protoc::gameproto::BUFF_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::SELL_TYPE>() {
  return ::protoc::gameproto::SELL_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::gameproto::Period>() {
  return ::protoc::gameproto::Period_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gameserver_5fgate_5fclient_2eproto__INCLUDED
