// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocType.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtocType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protoc {

namespace {

const ::google::protobuf::EnumDescriptor* ProtocType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GSMsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PythonMsgType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtocType_2eproto() {
  protobuf_AddDesc_ProtocType_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtocType.proto");
  GOOGLE_CHECK(file != NULL);
  ProtocType_descriptor_ = file->enum_type(0);
  GSMsgType_descriptor_ = file->enum_type(1);
  PythonMsgType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtocType_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_ProtocType_2eproto() {
}

void protobuf_AddDesc_ProtocType_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ProtocType.proto\022\006protoc*\224%\n\nProtocTyp"
    "e\022\022\n\016ClientLoginReq\020\001\022\022\n\016ClientLoginAck\020"
    "\002\022\032\n\026ClientCreateAccountReq\020\003\022\032\n\026ClientC"
    "reateAccountAck\020\004\022\025\n\021ClientWebLoginReq\020\005"
    "\022\033\n\027AccountAllPlayerInfoRpt\020\006\022\026\n\022SelectA"
    "ctivePlayer\020\007\022\022\n\016WaitingLoinNtf\020\010\022\035\n\031Sel"
    "fModeCreatekAccountReq\020\t\022\035\n\031SelfModeCrea"
    "tekAccountAck\020\n\022\034\n\030SelfModeActiveAccount"
    "Req\020\013\022\034\n\030SelfModeActiveAccountAck\020\014\022\027\n\022C"
    "lientLoginGateReq\020\351\007\022\027\n\022ClientLoginGateA"
    "ck\020\352\007\022\034\n\027ClientLoginAgainGateReq\020\353\007\022\034\n\027C"
    "lientLoginAgainGateAck\020\354\007\022\014\n\007TestReq\020\211\'\022"
    "\014\n\007TestAck\020\212\'\022\027\n\022ClientLeaveGameReq\020\213\'\022\027"
    "\n\022ClientLeaveGameAck\020\214\'\022\023\n\016PlayerBaseDat"
    "a\020\215\'\022\022\n\rPlayerPackage\020\216\'\022\014\n\007ChatRpt\020\217\'\022\024"
    "\n\017GMExecuteResult\020\220\'\022\022\n\rSystemMessage\020\221\'"
    "\022\022\n\rPythonMessage\020\222\'\022\031\n\024NeedCreatePlayer"
    "Name\020\223\'\022\030\n\023CreatePlayerNameReq\020\224\'\022\030\n\023Cre"
    "atePlayerNameAck\020\225\'\022\021\n\014CommonDialog\020\226\'\022\017"
    "\n\nGetGMAward\020\227\'\022\014\n\007ChatNtf\020\230\'\022\023\n\016GetKeyA"
    "wardReq\020\231\'\022\023\n\016GetKeyAwardAck\020\232\'\022\022\n\rTeXia"
    "oTypeNtf\020\233\'\022\034\n\027GetServerCurrentTimeReq\020\234"
    "\'\022\034\n\027GetServerCurrentTimeAck\020\235\'\022\025\n\020PostT"
    "rasnFileReq\020\236\'\022\025\n\020PostTrasnFileAck\020\237\'\022\021\n"
    "\014TrasnFileRpt\020\240\'\022\031\n\024TransFileCompleteRpt"
    "\020\241\'\022\017\n\nUpdateGold\020\242\'\022\016\n\tUpdateExp\020\243\'\022\020\n\013"
    "UpdateLevel\020\244\'\022\022\n\rUpdateYuanBao\020\245\'\022\013\n\006Ad"
    "dPet\020\246\'\022\013\n\006DelPet\020\247\'\022\016\n\tUpdatePet\020\250\'\022\014\n\007"
    "PetList\020\251\'\022\024\n\017GetAllSysMsgReq\020\252\'\022\024\n\017GetA"
    "llSysMsgAck\020\253\'\022\024\n\017DeleteSysMsgReq\020\254\'\022\024\n\017"
    "DeleteSysMsgAck\020\255\'\022\022\n\rSendSysMsgReq\020\256\'\022\022"
    "\n\rSendSysMsgAck\020\257\'\022\022\n\rReadSysMsgReq\020\260\'\022\022"
    "\n\rReadSysMsgAck\020\261\'\022\025\n\020GetEmailAwardReq\020\262"
    "\'\022\025\n\020GetEmailAwardAck\020\263\'\022\024\n\017EmailMessage"
    "Ntf\020\264\'\022\027\n\022KeepClientAliveAck\020\265\'\022\024\n\017KeepC"
    "lientAlive\020\266\'\022\022\n\rProtectPetReq\020\267\'\022\022\n\rPro"
    "tectPetAck\020\270\'\022\024\n\017SellPetToSysReq\020\271\'\022\024\n\017S"
    "ellPetToSysAck\020\272\'\022\020\n\013BianDuiList\020\273\'\022\025\n\020S"
    "etCurBianDuiReq\020\274\'\022\025\n\020SetCurBianDuiAck\020\275"
    "\'\022\027\n\022AddPetToBianDuiReq\020\276\'\022\027\n\022AddPetToBi"
    "anDuiAck\020\277\'\022\027\n\022DelPetToBianDuiReq\020\300\'\022\027\n\022"
    "DelPetToBianDuiAck\020\301\'\022\031\n\024ModifyBianDuiNa"
    "meReq\020\302\'\022\031\n\024ModifyBianDuiNameAck\020\303\'\022\031\n\024M"
    "odifyBIanDuiDataReq\020\304\'\022\031\n\024ModifyBIanDuiD"
    "ataAck\020\305\'\022\017\n\nBianDuiNtf\020\307\'\022\017\n\nAddBianDui"
    "\020\310\'\022\030\n\023UpdateCurBianDuiIdx\020\311\'\022\027\n\022AddPetM"
    "axNumberReq\020\312\'\022\027\n\022AddPetMaxNumberAck\020\313\'\022"
    "\031\n\024AddQueueMaxNumberReq\020\314\'\022\031\n\024AddQueueMa"
    "xNumberAck\020\315\'\022\024\n\017PetMaxNumberNtf\020\316\'\022\032\n\025R"
    "ecoverActiveCountReq\020\317\'\022\032\n\025RecoverActive"
    "CountAck\020\320\'\022\023\n\016ActiveCountNtf\020\321\'\022\016\n\tSpir"
    "itNtf\020\322\'\022\r\n\010UpdateHp\020\323\'\022\r\n\010UpdateMp\020\324\'\022\023"
    "\n\016GetShopListReq\020\325\'\022\023\n\016GetShopListAck\020\326\'"
    "\022\020\n\013ShoppingReq\020\327\'\022\020\n\013ShoppingAck\020\330\'\022\023\n\016"
    "UpdateVIPLevel\020\331\'\022\025\n\020UpdateFriendShip\020\332\'"
    "\022\025\n\020ChongZhiOrderNtf\020\333\'\022\022\n\rGetChapterReq"
    "\020\334\'\022\022\n\rGetChapterAck\020\335\'\022\030\n\023UpdateCheckPo"
    "intNtf\020\336\'\022\031\n\024GetCheckPointRankReq\020\337\'\022\031\n\024"
    "GetCheckPointRankAck\020\340\'\022\025\n\020GetFriendArms"
    "Req\020\341\'\022\025\n\020GetFriendArmsAck\020\342\'\022\020\n\013BeginWa"
    "rReq\020\343\'\022\020\n\013BeginWarAck\020\344\'\022\021\n\014WarResultRe"
    "q\020\345\'\022\021\n\014WarResultAck\020\346\'\022\017\n\nFriendList\020\347\'"
    "\022\021\n\014UpdateFriend\020\350\'\022\021\n\014DelFriendReq\020\351\'\022\021"
    "\n\014DelFriendAck\020\352\'\022\021\n\014DelFriendNtf\020\353\'\022\023\n\016"
    "VisitFriendReq\020\354\'\022\023\n\016VisitFriendAck\020\355\'\022\024"
    "\n\017GetAskFriendReq\020\356\'\022\024\n\017GetAskFriendAck\020"
    "\357\'\022\024\n\017SearchPlayerReq\020\360\'\022\024\n\017SearchPlayer"
    "Ack\020\361\'\022\021\n\014AskFriendReq\020\362\'\022\021\n\014AskFriendAc"
    "k\020\363\'\022\024\n\017AddAskFriendNtf\020\364\'\022\020\n\013ReplyAskRe"
    "q\020\365\'\022\020\n\013ReplyAskAck\020\366\'\022\024\n\017NewAskFriendNt"
    "f\020\367\'\022\031\n\024SetAskFriendStateReq\020\370\'\022\031\n\024SetAs"
    "kFriendStateAck\020\371\'\022\024\n\017BuffItemListReq\020\372\'"
    "\022\024\n\017BuffItemListAck\020\373\'\022\023\n\016BuffItemBuyReq"
    "\020\374\'\022\026\n\021RandomItemListReq\020\375\'\022\026\n\021RandomIte"
    "mListAck\020\376\'\022\025\n\020RandomItemBuyReq\020\377\'\022\022\n\rPe"
    "tUpgradeReq\020\200(\022\022\n\rPetUpgradeAck\020\201(\022\021\n\014Pe"
    "tEvolveReq\020\202(\022\021\n\014PetEvolveAck\020\203(\022\026\n\021Owne"
    "dPetIDListReq\020\204(\022\026\n\021OwnedPetIDListAck\020\205("
    "\022\030\n\023SelectCheckPointReq\020\206(\022\030\n\023SelectChec"
    "kPointAck\020\207(\022\024\n\017NewPetOpenedNtf\020\210(\022\022\n\rGe"
    "tChenJiuReq\020\211(\022\022\n\rGetChenJiuAck\020\212(\022\022\n\rUp"
    "dateChenJiu\020\213(\022\027\n\022GetChenJiuAwardReq\020\217(\022"
    "\027\n\022GetChenJiuAwardAck\020\220(\022\021\n\014DeadInWarNtf"
    "\020\221(\022\016\n\tReviveReq\020\222(\022\016\n\tReviveAck\020\223(\022\024\n\017G"
    "etQuestListReq\020\224(\022\024\n\017GetQuestListAck\020\225(\022"
    "\023\n\016UpdateQuestNtf\020\226(\022\025\n\020GetQuestAwardReq"
    "\020\227(\022\025\n\020GetQuestAwardAck\020\230(\022\024\n\017RefreshQue"
    "stNtf\020\231(\022\021\n\014DeadInWarAck\020\232(\022\025\n\020GetCurPvp"
    "DataReq\020\233(\022\025\n\020GetCurPvpDataAck\020\234(\022\022\n\rGet"
    "AllRankReq\020\235(\022\022\n\rGetAllRankAck\020\236(\022\025\n\020Get"
    "FriendRankReq\020\237(\022\025\n\020GetFriendRankAck\020\240(\022"
    "\022\n\rGetSumRankReq\020\241(\022\022\n\rGetSumRankAck\020\242(\022"
    "\022\n\rClearPvpCDReq\020\243(\022\022\n\rClearPvpCDAck\020\244(\022"
    "\023\n\016GetPvpAwardReq\020\245(\022\023\n\016GetPvpAwardAck\020\246"
    "(\022\023\n\016PvpWarBeginReq\020\247(\022\023\n\016PvpWarBeginAck"
    "\020\250(\022\024\n\017PvpWarResultReq\020\251(\022\024\n\017PvpWarResul"
    "tAck\020\252(\022\027\n\022ActionCountTickNtf\020\253(\022\023\n\016NowS"
    "tartWarRpt\020\254(\022\032\n\025CustomerServiceUrlNtf\020\255"
    "(\022\027\n\022NewQuestMessageNtf\020\256(\022\024\n\017GetSkillLi"
    "stReq\020\257(\022\024\n\017GetSkillListAck\020\260(\022\025\n\020SaveSk"
    "illPageReq\020\263(\022\025\n\020SaveSkillPageAck\020\264(\022\027\n\022"
    "SaveActiveSkillReq\020\265(\022\027\n\022SaveActiveSkill"
    "Ack\020\266(\022\020\n\013SysErrorNtf\020\267(\022\016\n\tEquipList\020\270("
    "\022\r\n\010AddEquip\020\271(\022\r\n\010DelEquip\020\272(\022\020\n\013Update"
    "Equip\020\273(\022\016\n\tGoodsList\020\274(\022\021\n\014AddGoodsItem"
    "\020\275(\022\026\n\021UpdateGoodsNumber\020\276(\022\022\n\rPutOnEqui"
    "pReq\020\277(\022\022\n\rPutOnEquipAck\020\300(\022\023\n\016StrengEqu"
    "ipReq\020\301(\022\023\n\016StrengEquipAck\020\302(\022\023\n\016JinJieE"
    "quipReq\020\303(\022\023\n\016JinJieEquipAck\020\304(\022\024\n\017HeChe"
    "ngEquipReq\020\305(\022\024\n\017HeChengEquipAck\020\306(\022\021\n\014S"
    "ellGoodsReq\020\307(\022\021\n\014SellGoodsAck\020\310(\022\025\n\020Equ"
    "ipSetStoreReq\020\311(\022\025\n\020EquipSetStoreAck\020\312(\022"
    "\021\n\014ShareDataNtf\020\313(\022\030\n\023CompleteLoadDataNt"
    "f\020\314(\022\026\n\021SetPetNewStateReq\020\315(\022\026\n\021SetPetNe"
    "wStateAck\020\316(\022\032\n\025UpdateBuyActionCounts\020\317("
    "\022\033\n\026OneKeyGetEmailAwardReq\020\320(\022\033\n\026OneKeyG"
    "etQuestAwardReq\020\321(\022\035\n\030OneKeyGetChenJiuAw"
    "ardReq\020\322(\022\022\n\rSubBianDuiReq\020\323(\022\022\n\rSubBian"
    "DuiAck\020\324(\022\030\n\023AddActiveChapterNtf\020\325(\022\034\n\027C"
    "haptersLoseActivityNtf\020\326(*2\n\tGSMsgType\022\r"
    "\n\tGSChatNtf\020\001\022\026\n\022GSSystemMessageNtf\020\002*\204\003"
    "\n\rPythonMsgType\022\025\n\021PythonMsg_example\020\001\022\020"
    "\n\014PyTalkDialog\020\002\022\017\n\013PyChouKaReq\020\003\022\017\n\013PyC"
    "houKaAck\020\004\022\022\n\016PyGetGenGaoReq\020\005\022\022\n\016PyGetG"
    "enGaoAck\020\006\022\033\n\027PyGetGoodActivePanelReq\020\007\022"
    "\033\n\027PyGetGoodActivePanelAck\020\010\022\027\n\023PyGetAct"
    "iveAwardReq\020\t\022\027\n\023PyGetActiveAwardAck\020\n\022\030"
    "\n\024PyEveryDataActiveNtf\020\013\022\026\n\022PySaveGuideS"
    "tepReq\020\014\022\026\n\022PySaveGuideStepAck\020\r\022$\n PyBu"
    "yCheckPointChallengeCountReq\020\016\022$\n PyBuyC"
    "heckPointChallengeCountAck\020\017", 5228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtocType.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtocType_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtocType_2eproto {
  StaticDescriptorInitializer_ProtocType_2eproto() {
    protobuf_AddDesc_ProtocType_2eproto();
  }
} static_descriptor_initializer_ProtocType_2eproto_;
const ::google::protobuf::EnumDescriptor* ProtocType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtocType_descriptor_;
}
bool ProtocType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 5001:
    case 5002:
    case 5003:
    case 5004:
    case 5005:
    case 5006:
    case 5007:
    case 5008:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5013:
    case 5014:
    case 5015:
    case 5016:
    case 5017:
    case 5018:
    case 5019:
    case 5020:
    case 5021:
    case 5022:
    case 5023:
    case 5024:
    case 5025:
    case 5026:
    case 5027:
    case 5028:
    case 5029:
    case 5030:
    case 5031:
    case 5032:
    case 5033:
    case 5034:
    case 5035:
    case 5036:
    case 5037:
    case 5038:
    case 5039:
    case 5040:
    case 5041:
    case 5042:
    case 5043:
    case 5044:
    case 5045:
    case 5046:
    case 5047:
    case 5048:
    case 5049:
    case 5050:
    case 5051:
    case 5052:
    case 5053:
    case 5054:
    case 5055:
    case 5056:
    case 5057:
    case 5058:
    case 5059:
    case 5060:
    case 5061:
    case 5063:
    case 5064:
    case 5065:
    case 5066:
    case 5067:
    case 5068:
    case 5069:
    case 5070:
    case 5071:
    case 5072:
    case 5073:
    case 5074:
    case 5075:
    case 5076:
    case 5077:
    case 5078:
    case 5079:
    case 5080:
    case 5081:
    case 5082:
    case 5083:
    case 5084:
    case 5085:
    case 5086:
    case 5087:
    case 5088:
    case 5089:
    case 5090:
    case 5091:
    case 5092:
    case 5093:
    case 5094:
    case 5095:
    case 5096:
    case 5097:
    case 5098:
    case 5099:
    case 5100:
    case 5101:
    case 5102:
    case 5103:
    case 5104:
    case 5105:
    case 5106:
    case 5107:
    case 5108:
    case 5109:
    case 5110:
    case 5111:
    case 5112:
    case 5113:
    case 5114:
    case 5115:
    case 5116:
    case 5117:
    case 5118:
    case 5119:
    case 5120:
    case 5121:
    case 5122:
    case 5123:
    case 5124:
    case 5125:
    case 5126:
    case 5127:
    case 5128:
    case 5129:
    case 5130:
    case 5131:
    case 5135:
    case 5136:
    case 5137:
    case 5138:
    case 5139:
    case 5140:
    case 5141:
    case 5142:
    case 5143:
    case 5144:
    case 5145:
    case 5146:
    case 5147:
    case 5148:
    case 5149:
    case 5150:
    case 5151:
    case 5152:
    case 5153:
    case 5154:
    case 5155:
    case 5156:
    case 5157:
    case 5158:
    case 5159:
    case 5160:
    case 5161:
    case 5162:
    case 5163:
    case 5164:
    case 5165:
    case 5166:
    case 5167:
    case 5168:
    case 5171:
    case 5172:
    case 5173:
    case 5174:
    case 5175:
    case 5176:
    case 5177:
    case 5178:
    case 5179:
    case 5180:
    case 5181:
    case 5182:
    case 5183:
    case 5184:
    case 5185:
    case 5186:
    case 5187:
    case 5188:
    case 5189:
    case 5190:
    case 5191:
    case 5192:
    case 5193:
    case 5194:
    case 5195:
    case 5196:
    case 5197:
    case 5198:
    case 5199:
    case 5200:
    case 5201:
    case 5202:
    case 5203:
    case 5204:
    case 5205:
    case 5206:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GSMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GSMsgType_descriptor_;
}
bool GSMsgType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PythonMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PythonMsgType_descriptor_;
}
bool PythonMsgType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protoc

// @@protoc_insertion_point(global_scope)
