// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameserver_gate_client_1.proto

#ifndef PROTOBUF_gameserver_5fgate_5fclient_5f1_2eproto__INCLUDED
#define PROTOBUF_gameserver_5fgate_5fclient_5f1_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
#include "gameserver_gate_client.pb.h"
// @@protoc_insertion_point(includes)

namespace protoc {
namespace gameproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

class GetServerCurrentTimeReq;
class GetServerCurrentTimeAck;
class GetStrengFailTimesReq;
class PostTrasnFileReq;
class PostTrasnFileAck;
class TrasnFileRpt;
class TransFileCompleteRpt;

// ===================================================================

class GetServerCurrentTimeReq : public ::google::protobuf::Message {
 public:
  GetServerCurrentTimeReq();
  virtual ~GetServerCurrentTimeReq();

  GetServerCurrentTimeReq(const GetServerCurrentTimeReq& from);

  inline GetServerCurrentTimeReq& operator=(const GetServerCurrentTimeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServerCurrentTimeReq& default_instance();

  void Swap(GetServerCurrentTimeReq* other);

  // implements Message ----------------------------------------------

  GetServerCurrentTimeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServerCurrentTimeReq& from);
  void MergeFrom(const GetServerCurrentTimeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetServerCurrentTimeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static GetServerCurrentTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class GetServerCurrentTimeAck : public ::google::protobuf::Message {
 public:
  GetServerCurrentTimeAck();
  virtual ~GetServerCurrentTimeAck();

  GetServerCurrentTimeAck(const GetServerCurrentTimeAck& from);

  inline GetServerCurrentTimeAck& operator=(const GetServerCurrentTimeAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServerCurrentTimeAck& default_instance();

  void Swap(GetServerCurrentTimeAck* other);

  // implements Message ----------------------------------------------

  GetServerCurrentTimeAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServerCurrentTimeAck& from);
  void MergeFrom(const GetServerCurrentTimeAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 cur_time = 1;
  inline bool has_cur_time() const;
  inline void clear_cur_time();
  static const int kCurTimeFieldNumber = 1;
  inline ::google::protobuf::int64 cur_time() const;
  inline void set_cur_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetServerCurrentTimeAck)
 private:
  inline void set_has_cur_time();
  inline void clear_has_cur_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 cur_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static GetServerCurrentTimeAck* default_instance_;
};
// -------------------------------------------------------------------

class GetStrengFailTimesReq : public ::google::protobuf::Message {
 public:
  GetStrengFailTimesReq();
  virtual ~GetStrengFailTimesReq();

  GetStrengFailTimesReq(const GetStrengFailTimesReq& from);

  inline GetStrengFailTimesReq& operator=(const GetStrengFailTimesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStrengFailTimesReq& default_instance();

  void Swap(GetStrengFailTimesReq* other);

  // implements Message ----------------------------------------------

  GetStrengFailTimesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStrengFailTimesReq& from);
  void MergeFrom(const GetStrengFailTimesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protoc.gameproto.GetStrengFailTimesReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static GetStrengFailTimesReq* default_instance_;
};
// -------------------------------------------------------------------

class PostTrasnFileReq : public ::google::protobuf::Message {
 public:
  PostTrasnFileReq();
  virtual ~PostTrasnFileReq();

  PostTrasnFileReq(const PostTrasnFileReq& from);

  inline PostTrasnFileReq& operator=(const PostTrasnFileReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostTrasnFileReq& default_instance();

  void Swap(PostTrasnFileReq* other);

  // implements Message ----------------------------------------------

  PostTrasnFileReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostTrasnFileReq& from);
  void MergeFrom(const PostTrasnFileReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 file_length = 1;
  inline bool has_file_length() const;
  inline void clear_file_length();
  static const int kFileLengthFieldNumber = 1;
  inline ::google::protobuf::int32 file_length() const;
  inline void set_file_length(::google::protobuf::int32 value);

  // optional string file_name = 2;
  inline bool has_file_name() const;
  inline void clear_file_name();
  static const int kFileNameFieldNumber = 2;
  inline const ::std::string& file_name() const;
  inline void set_file_name(const ::std::string& value);
  inline void set_file_name(const char* value);
  inline void set_file_name(const char* value, size_t size);
  inline ::std::string* mutable_file_name();
  inline ::std::string* release_file_name();
  inline void set_allocated_file_name(::std::string* file_name);

  // optional string file_md5 = 3;
  inline bool has_file_md5() const;
  inline void clear_file_md5();
  static const int kFileMd5FieldNumber = 3;
  inline const ::std::string& file_md5() const;
  inline void set_file_md5(const ::std::string& value);
  inline void set_file_md5(const char* value);
  inline void set_file_md5(const char* value, size_t size);
  inline ::std::string* mutable_file_md5();
  inline ::std::string* release_file_md5();
  inline void set_allocated_file_md5(::std::string* file_md5);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PostTrasnFileReq)
 private:
  inline void set_has_file_length();
  inline void clear_has_file_length();
  inline void set_has_file_name();
  inline void clear_has_file_name();
  inline void set_has_file_md5();
  inline void clear_has_file_md5();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* file_name_;
  ::std::string* file_md5_;
  ::google::protobuf::int32 file_length_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static PostTrasnFileReq* default_instance_;
};
// -------------------------------------------------------------------

class PostTrasnFileAck : public ::google::protobuf::Message {
 public:
  PostTrasnFileAck();
  virtual ~PostTrasnFileAck();

  PostTrasnFileAck(const PostTrasnFileAck& from);

  inline PostTrasnFileAck& operator=(const PostTrasnFileAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostTrasnFileAck& default_instance();

  void Swap(PostTrasnFileAck* other);

  // implements Message ----------------------------------------------

  PostTrasnFileAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostTrasnFileAck& from);
  void MergeFrom(const PostTrasnFileAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // optional bytes randkeys = 2;
  inline bool has_randkeys() const;
  inline void clear_randkeys();
  static const int kRandkeysFieldNumber = 2;
  inline const ::std::string& randkeys() const;
  inline void set_randkeys(const ::std::string& value);
  inline void set_randkeys(const char* value);
  inline void set_randkeys(const void* value, size_t size);
  inline ::std::string* mutable_randkeys();
  inline ::std::string* release_randkeys();
  inline void set_allocated_randkeys(::std::string* randkeys);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.PostTrasnFileAck)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_randkeys();
  inline void clear_has_randkeys();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* randkeys_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static PostTrasnFileAck* default_instance_;
};
// -------------------------------------------------------------------

class TrasnFileRpt : public ::google::protobuf::Message {
 public:
  TrasnFileRpt();
  virtual ~TrasnFileRpt();

  TrasnFileRpt(const TrasnFileRpt& from);

  inline TrasnFileRpt& operator=(const TrasnFileRpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrasnFileRpt& default_instance();

  void Swap(TrasnFileRpt* other);

  // implements Message ----------------------------------------------

  TrasnFileRpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrasnFileRpt& from);
  void MergeFrom(const TrasnFileRpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes keys = 1;
  inline bool has_keys() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::std::string& keys() const;
  inline void set_keys(const ::std::string& value);
  inline void set_keys(const char* value);
  inline void set_keys(const void* value, size_t size);
  inline ::std::string* mutable_keys();
  inline ::std::string* release_keys();
  inline void set_allocated_keys(::std::string* keys);

  // optional bytes file_data = 2;
  inline bool has_file_data() const;
  inline void clear_file_data();
  static const int kFileDataFieldNumber = 2;
  inline const ::std::string& file_data() const;
  inline void set_file_data(const ::std::string& value);
  inline void set_file_data(const char* value);
  inline void set_file_data(const void* value, size_t size);
  inline ::std::string* mutable_file_data();
  inline ::std::string* release_file_data();
  inline void set_allocated_file_data(::std::string* file_data);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TrasnFileRpt)
 private:
  inline void set_has_keys();
  inline void clear_has_keys();
  inline void set_has_file_data();
  inline void clear_has_file_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* keys_;
  ::std::string* file_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static TrasnFileRpt* default_instance_;
};
// -------------------------------------------------------------------

class TransFileCompleteRpt : public ::google::protobuf::Message {
 public:
  TransFileCompleteRpt();
  virtual ~TransFileCompleteRpt();

  TransFileCompleteRpt(const TransFileCompleteRpt& from);

  inline TransFileCompleteRpt& operator=(const TransFileCompleteRpt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransFileCompleteRpt& default_instance();

  void Swap(TransFileCompleteRpt* other);

  // implements Message ----------------------------------------------

  TransFileCompleteRpt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransFileCompleteRpt& from);
  void MergeFrom(const TransFileCompleteRpt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);

  // optional int32 err_no = 2;
  inline bool has_err_no() const;
  inline void clear_err_no();
  static const int kErrNoFieldNumber = 2;
  inline ::google::protobuf::int32 err_no() const;
  inline void set_err_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protoc.gameproto.TransFileCompleteRpt)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_err_no();
  inline void clear_has_err_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 err_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_AssignDesc_gameserver_5fgate_5fclient_5f1_2eproto();
  friend void protobuf_ShutdownFile_gameserver_5fgate_5fclient_5f1_2eproto();

  void InitAsDefaultInstance();
  static TransFileCompleteRpt* default_instance_;
};
// ===================================================================


// ===================================================================

// GetServerCurrentTimeReq

// -------------------------------------------------------------------

// GetServerCurrentTimeAck

// optional int64 cur_time = 1;
inline bool GetServerCurrentTimeAck::has_cur_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetServerCurrentTimeAck::set_has_cur_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetServerCurrentTimeAck::clear_has_cur_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetServerCurrentTimeAck::clear_cur_time() {
  cur_time_ = GOOGLE_LONGLONG(0);
  clear_has_cur_time();
}
inline ::google::protobuf::int64 GetServerCurrentTimeAck::cur_time() const {
  return cur_time_;
}
inline void GetServerCurrentTimeAck::set_cur_time(::google::protobuf::int64 value) {
  set_has_cur_time();
  cur_time_ = value;
}

// -------------------------------------------------------------------

// GetStrengFailTimesReq

// -------------------------------------------------------------------

// PostTrasnFileReq

// optional int32 file_length = 1;
inline bool PostTrasnFileReq::has_file_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostTrasnFileReq::set_has_file_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostTrasnFileReq::clear_has_file_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostTrasnFileReq::clear_file_length() {
  file_length_ = 0;
  clear_has_file_length();
}
inline ::google::protobuf::int32 PostTrasnFileReq::file_length() const {
  return file_length_;
}
inline void PostTrasnFileReq::set_file_length(::google::protobuf::int32 value) {
  set_has_file_length();
  file_length_ = value;
}

// optional string file_name = 2;
inline bool PostTrasnFileReq::has_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostTrasnFileReq::set_has_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostTrasnFileReq::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostTrasnFileReq::clear_file_name() {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    file_name_->clear();
  }
  clear_has_file_name();
}
inline const ::std::string& PostTrasnFileReq::file_name() const {
  return *file_name_;
}
inline void PostTrasnFileReq::set_file_name(const ::std::string& value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void PostTrasnFileReq::set_file_name(const char* value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void PostTrasnFileReq::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PostTrasnFileReq::mutable_file_name() {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  return file_name_;
}
inline ::std::string* PostTrasnFileReq::release_file_name() {
  clear_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_name_;
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PostTrasnFileReq::set_allocated_file_name(::std::string* file_name) {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete file_name_;
  }
  if (file_name) {
    set_has_file_name();
    file_name_ = file_name;
  } else {
    clear_has_file_name();
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string file_md5 = 3;
inline bool PostTrasnFileReq::has_file_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PostTrasnFileReq::set_has_file_md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PostTrasnFileReq::clear_has_file_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PostTrasnFileReq::clear_file_md5() {
  if (file_md5_ != &::google::protobuf::internal::kEmptyString) {
    file_md5_->clear();
  }
  clear_has_file_md5();
}
inline const ::std::string& PostTrasnFileReq::file_md5() const {
  return *file_md5_;
}
inline void PostTrasnFileReq::set_file_md5(const ::std::string& value) {
  set_has_file_md5();
  if (file_md5_ == &::google::protobuf::internal::kEmptyString) {
    file_md5_ = new ::std::string;
  }
  file_md5_->assign(value);
}
inline void PostTrasnFileReq::set_file_md5(const char* value) {
  set_has_file_md5();
  if (file_md5_ == &::google::protobuf::internal::kEmptyString) {
    file_md5_ = new ::std::string;
  }
  file_md5_->assign(value);
}
inline void PostTrasnFileReq::set_file_md5(const char* value, size_t size) {
  set_has_file_md5();
  if (file_md5_ == &::google::protobuf::internal::kEmptyString) {
    file_md5_ = new ::std::string;
  }
  file_md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PostTrasnFileReq::mutable_file_md5() {
  set_has_file_md5();
  if (file_md5_ == &::google::protobuf::internal::kEmptyString) {
    file_md5_ = new ::std::string;
  }
  return file_md5_;
}
inline ::std::string* PostTrasnFileReq::release_file_md5() {
  clear_has_file_md5();
  if (file_md5_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_md5_;
    file_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PostTrasnFileReq::set_allocated_file_md5(::std::string* file_md5) {
  if (file_md5_ != &::google::protobuf::internal::kEmptyString) {
    delete file_md5_;
  }
  if (file_md5) {
    set_has_file_md5();
    file_md5_ = file_md5;
  } else {
    clear_has_file_md5();
    file_md5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PostTrasnFileAck

// optional int32 err_no = 1;
inline bool PostTrasnFileAck::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostTrasnFileAck::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostTrasnFileAck::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostTrasnFileAck::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 PostTrasnFileAck::err_no() const {
  return err_no_;
}
inline void PostTrasnFileAck::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}

// optional bytes randkeys = 2;
inline bool PostTrasnFileAck::has_randkeys() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostTrasnFileAck::set_has_randkeys() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostTrasnFileAck::clear_has_randkeys() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostTrasnFileAck::clear_randkeys() {
  if (randkeys_ != &::google::protobuf::internal::kEmptyString) {
    randkeys_->clear();
  }
  clear_has_randkeys();
}
inline const ::std::string& PostTrasnFileAck::randkeys() const {
  return *randkeys_;
}
inline void PostTrasnFileAck::set_randkeys(const ::std::string& value) {
  set_has_randkeys();
  if (randkeys_ == &::google::protobuf::internal::kEmptyString) {
    randkeys_ = new ::std::string;
  }
  randkeys_->assign(value);
}
inline void PostTrasnFileAck::set_randkeys(const char* value) {
  set_has_randkeys();
  if (randkeys_ == &::google::protobuf::internal::kEmptyString) {
    randkeys_ = new ::std::string;
  }
  randkeys_->assign(value);
}
inline void PostTrasnFileAck::set_randkeys(const void* value, size_t size) {
  set_has_randkeys();
  if (randkeys_ == &::google::protobuf::internal::kEmptyString) {
    randkeys_ = new ::std::string;
  }
  randkeys_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PostTrasnFileAck::mutable_randkeys() {
  set_has_randkeys();
  if (randkeys_ == &::google::protobuf::internal::kEmptyString) {
    randkeys_ = new ::std::string;
  }
  return randkeys_;
}
inline ::std::string* PostTrasnFileAck::release_randkeys() {
  clear_has_randkeys();
  if (randkeys_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = randkeys_;
    randkeys_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PostTrasnFileAck::set_allocated_randkeys(::std::string* randkeys) {
  if (randkeys_ != &::google::protobuf::internal::kEmptyString) {
    delete randkeys_;
  }
  if (randkeys) {
    set_has_randkeys();
    randkeys_ = randkeys;
  } else {
    clear_has_randkeys();
    randkeys_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TrasnFileRpt

// optional bytes keys = 1;
inline bool TrasnFileRpt::has_keys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrasnFileRpt::set_has_keys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrasnFileRpt::clear_has_keys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrasnFileRpt::clear_keys() {
  if (keys_ != &::google::protobuf::internal::kEmptyString) {
    keys_->clear();
  }
  clear_has_keys();
}
inline const ::std::string& TrasnFileRpt::keys() const {
  return *keys_;
}
inline void TrasnFileRpt::set_keys(const ::std::string& value) {
  set_has_keys();
  if (keys_ == &::google::protobuf::internal::kEmptyString) {
    keys_ = new ::std::string;
  }
  keys_->assign(value);
}
inline void TrasnFileRpt::set_keys(const char* value) {
  set_has_keys();
  if (keys_ == &::google::protobuf::internal::kEmptyString) {
    keys_ = new ::std::string;
  }
  keys_->assign(value);
}
inline void TrasnFileRpt::set_keys(const void* value, size_t size) {
  set_has_keys();
  if (keys_ == &::google::protobuf::internal::kEmptyString) {
    keys_ = new ::std::string;
  }
  keys_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TrasnFileRpt::mutable_keys() {
  set_has_keys();
  if (keys_ == &::google::protobuf::internal::kEmptyString) {
    keys_ = new ::std::string;
  }
  return keys_;
}
inline ::std::string* TrasnFileRpt::release_keys() {
  clear_has_keys();
  if (keys_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = keys_;
    keys_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TrasnFileRpt::set_allocated_keys(::std::string* keys) {
  if (keys_ != &::google::protobuf::internal::kEmptyString) {
    delete keys_;
  }
  if (keys) {
    set_has_keys();
    keys_ = keys;
  } else {
    clear_has_keys();
    keys_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes file_data = 2;
inline bool TrasnFileRpt::has_file_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrasnFileRpt::set_has_file_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrasnFileRpt::clear_has_file_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrasnFileRpt::clear_file_data() {
  if (file_data_ != &::google::protobuf::internal::kEmptyString) {
    file_data_->clear();
  }
  clear_has_file_data();
}
inline const ::std::string& TrasnFileRpt::file_data() const {
  return *file_data_;
}
inline void TrasnFileRpt::set_file_data(const ::std::string& value) {
  set_has_file_data();
  if (file_data_ == &::google::protobuf::internal::kEmptyString) {
    file_data_ = new ::std::string;
  }
  file_data_->assign(value);
}
inline void TrasnFileRpt::set_file_data(const char* value) {
  set_has_file_data();
  if (file_data_ == &::google::protobuf::internal::kEmptyString) {
    file_data_ = new ::std::string;
  }
  file_data_->assign(value);
}
inline void TrasnFileRpt::set_file_data(const void* value, size_t size) {
  set_has_file_data();
  if (file_data_ == &::google::protobuf::internal::kEmptyString) {
    file_data_ = new ::std::string;
  }
  file_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TrasnFileRpt::mutable_file_data() {
  set_has_file_data();
  if (file_data_ == &::google::protobuf::internal::kEmptyString) {
    file_data_ = new ::std::string;
  }
  return file_data_;
}
inline ::std::string* TrasnFileRpt::release_file_data() {
  clear_has_file_data();
  if (file_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_data_;
    file_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TrasnFileRpt::set_allocated_file_data(::std::string* file_data) {
  if (file_data_ != &::google::protobuf::internal::kEmptyString) {
    delete file_data_;
  }
  if (file_data) {
    set_has_file_data();
    file_data_ = file_data;
  } else {
    clear_has_file_data();
    file_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// TransFileCompleteRpt

// optional int32 length = 1;
inline bool TransFileCompleteRpt::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransFileCompleteRpt::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransFileCompleteRpt::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransFileCompleteRpt::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline ::google::protobuf::int32 TransFileCompleteRpt::length() const {
  return length_;
}
inline void TransFileCompleteRpt::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
}

// optional int32 err_no = 2;
inline bool TransFileCompleteRpt::has_err_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransFileCompleteRpt::set_has_err_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransFileCompleteRpt::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransFileCompleteRpt::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 TransFileCompleteRpt::err_no() const {
  return err_no_;
}
inline void TransFileCompleteRpt::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gameproto
}  // namespace protoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gameserver_5fgate_5fclient_5f1_2eproto__INCLUDED
