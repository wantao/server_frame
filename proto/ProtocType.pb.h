// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocType.proto

#ifndef PROTOBUF_ProtocType_2eproto__INCLUDED
#define PROTOBUF_ProtocType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protoc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtocType_2eproto();
void protobuf_AssignDesc_ProtocType_2eproto();
void protobuf_ShutdownFile_ProtocType_2eproto();


enum ProtocType {
  ClientLoginReq = 1,
  ClientLoginAck = 2,
  ClientCreateAccountReq = 3,
  ClientCreateAccountAck = 4,
  ClientWebLoginReq = 5,
  AccountAllPlayerInfoRpt = 6,
  SelectActivePlayer = 7,
  WaitingLoinNtf = 8,
  SelfModeCreatekAccountReq = 9,
  SelfModeCreatekAccountAck = 10,
  SelfModeActiveAccountReq = 11,
  SelfModeActiveAccountAck = 12,
  ClientLoginGateReq = 1001,
  ClientLoginGateAck = 1002,
  ClientLoginAgainGateReq = 1003,
  ClientLoginAgainGateAck = 1004,
  TestReq = 5001,
  TestAck = 5002,
  ClientLeaveGameReq = 5003,
  ClientLeaveGameAck = 5004,
  PlayerBaseData = 5005,
  PlayerPackage = 5006,
  ChatRpt = 5007,
  GMExecuteResult = 5008,
  SystemMessage = 5009,
  PythonMessage = 5010,
  NeedCreatePlayerName = 5011,
  CreatePlayerNameReq = 5012,
  CreatePlayerNameAck = 5013,
  CommonDialog = 5014,
  GetGMAward = 5015,
  ChatNtf = 5016,
  GetKeyAwardReq = 5017,
  GetKeyAwardAck = 5018,
  TeXiaoTypeNtf = 5019,
  GetServerCurrentTimeReq = 5020,
  GetServerCurrentTimeAck = 5021,
  PostTrasnFileReq = 5022,
  PostTrasnFileAck = 5023,
  TrasnFileRpt = 5024,
  TransFileCompleteRpt = 5025,
  UpdateGold = 5026,
  UpdateExp = 5027,
  UpdateLevel = 5028,
  UpdateYuanBao = 5029,
  AddPet = 5030,
  DelPet = 5031,
  UpdatePet = 5032,
  PetList = 5033,
  GetAllSysMsgReq = 5034,
  GetAllSysMsgAck = 5035,
  DeleteSysMsgReq = 5036,
  DeleteSysMsgAck = 5037,
  SendSysMsgReq = 5038,
  SendSysMsgAck = 5039,
  ReadSysMsgReq = 5040,
  ReadSysMsgAck = 5041,
  GetEmailAwardReq = 5042,
  GetEmailAwardAck = 5043,
  EmailMessageNtf = 5044,
  KeepClientAliveAck = 5045,
  KeepClientAlive = 5046,
  ProtectPetReq = 5047,
  ProtectPetAck = 5048,
  SellPetToSysReq = 5049,
  SellPetToSysAck = 5050,
  BianDuiList = 5051,
  SetCurBianDuiReq = 5052,
  SetCurBianDuiAck = 5053,
  AddPetToBianDuiReq = 5054,
  AddPetToBianDuiAck = 5055,
  DelPetToBianDuiReq = 5056,
  DelPetToBianDuiAck = 5057,
  ModifyBianDuiNameReq = 5058,
  ModifyBianDuiNameAck = 5059,
  ModifyBIanDuiDataReq = 5060,
  ModifyBIanDuiDataAck = 5061,
  BianDuiNtf = 5063,
  AddBianDui = 5064,
  UpdateCurBianDuiIdx = 5065,
  AddPetMaxNumberReq = 5066,
  AddPetMaxNumberAck = 5067,
  AddQueueMaxNumberReq = 5068,
  AddQueueMaxNumberAck = 5069,
  PetMaxNumberNtf = 5070,
  RecoverActiveCountReq = 5071,
  RecoverActiveCountAck = 5072,
  ActiveCountNtf = 5073,
  SpiritNtf = 5074,
  UpdateHp = 5075,
  UpdateMp = 5076,
  GetShopListReq = 5077,
  GetShopListAck = 5078,
  ShoppingReq = 5079,
  ShoppingAck = 5080,
  UpdateVIPLevel = 5081,
  UpdateFriendShip = 5082,
  ChongZhiOrderNtf = 5083,
  GetChapterReq = 5084,
  GetChapterAck = 5085,
  UpdateCheckPointNtf = 5086,
  GetCheckPointRankReq = 5087,
  GetCheckPointRankAck = 5088,
  GetFriendArmsReq = 5089,
  GetFriendArmsAck = 5090,
  BeginWarReq = 5091,
  BeginWarAck = 5092,
  WarResultReq = 5093,
  WarResultAck = 5094,
  FriendList = 5095,
  UpdateFriend = 5096,
  DelFriendReq = 5097,
  DelFriendAck = 5098,
  DelFriendNtf = 5099,
  VisitFriendReq = 5100,
  VisitFriendAck = 5101,
  GetAskFriendReq = 5102,
  GetAskFriendAck = 5103,
  SearchPlayerReq = 5104,
  SearchPlayerAck = 5105,
  AskFriendReq = 5106,
  AskFriendAck = 5107,
  AddAskFriendNtf = 5108,
  ReplyAskReq = 5109,
  ReplyAskAck = 5110,
  NewAskFriendNtf = 5111,
  SetAskFriendStateReq = 5112,
  SetAskFriendStateAck = 5113,
  BuffItemListReq = 5114,
  BuffItemListAck = 5115,
  BuffItemBuyReq = 5116,
  RandomItemListReq = 5117,
  RandomItemListAck = 5118,
  RandomItemBuyReq = 5119,
  PetUpgradeReq = 5120,
  PetUpgradeAck = 5121,
  PetEvolveReq = 5122,
  PetEvolveAck = 5123,
  OwnedPetIDListReq = 5124,
  OwnedPetIDListAck = 5125,
  SelectCheckPointReq = 5126,
  SelectCheckPointAck = 5127,
  NewPetOpenedNtf = 5128,
  GetChenJiuReq = 5129,
  GetChenJiuAck = 5130,
  UpdateChenJiu = 5131,
  GetChenJiuAwardReq = 5135,
  GetChenJiuAwardAck = 5136,
  DeadInWarNtf = 5137,
  ReviveReq = 5138,
  ReviveAck = 5139,
  GetQuestListReq = 5140,
  GetQuestListAck = 5141,
  UpdateQuestNtf = 5142,
  GetQuestAwardReq = 5143,
  GetQuestAwardAck = 5144,
  RefreshQuestNtf = 5145,
  DeadInWarAck = 5146,
  GetCurPvpDataReq = 5147,
  GetCurPvpDataAck = 5148,
  GetAllRankReq = 5149,
  GetAllRankAck = 5150,
  GetFriendRankReq = 5151,
  GetFriendRankAck = 5152,
  GetSumRankReq = 5153,
  GetSumRankAck = 5154,
  ClearPvpCDReq = 5155,
  ClearPvpCDAck = 5156,
  GetPvpAwardReq = 5157,
  GetPvpAwardAck = 5158,
  PvpWarBeginReq = 5159,
  PvpWarBeginAck = 5160,
  PvpWarResultReq = 5161,
  PvpWarResultAck = 5162,
  ActionCountTickNtf = 5163,
  NowStartWarRpt = 5164,
  CustomerServiceUrlNtf = 5165,
  NewQuestMessageNtf = 5166,
  GetSkillListReq = 5167,
  GetSkillListAck = 5168,
  SaveSkillPageReq = 5171,
  SaveSkillPageAck = 5172,
  SaveActiveSkillReq = 5173,
  SaveActiveSkillAck = 5174,
  SysErrorNtf = 5175,
  EquipList = 5176,
  AddEquip = 5177,
  DelEquip = 5178,
  UpdateEquip = 5179,
  GoodsList = 5180,
  AddGoodsItem = 5181,
  UpdateGoodsNumber = 5182,
  PutOnEquipReq = 5183,
  PutOnEquipAck = 5184,
  StrengEquipReq = 5185,
  StrengEquipAck = 5186,
  JinJieEquipReq = 5187,
  JinJieEquipAck = 5188,
  HeChengEquipReq = 5189,
  HeChengEquipAck = 5190,
  SellGoodsReq = 5191,
  SellGoodsAck = 5192,
  EquipSetStoreReq = 5193,
  EquipSetStoreAck = 5194,
  ShareDataNtf = 5195,
  CompleteLoadDataNtf = 5196,
  SetPetNewStateReq = 5197,
  SetPetNewStateAck = 5198,
  UpdateBuyActionCounts = 5199,
  OneKeyGetEmailAwardReq = 5200,
  OneKeyGetQuestAwardReq = 5201,
  OneKeyGetChenJiuAwardReq = 5202,
  SubBianDuiReq = 5203,
  SubBianDuiAck = 5204,
  AddActiveChapterNtf = 5205,
  ChaptersLoseActivityNtf = 5206
};
bool ProtocType_IsValid(int value);
const ProtocType ProtocType_MIN = ClientLoginReq;
const ProtocType ProtocType_MAX = ChaptersLoseActivityNtf;
const int ProtocType_ARRAYSIZE = ProtocType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtocType_descriptor();
inline const ::std::string& ProtocType_Name(ProtocType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtocType_descriptor(), value);
}
inline bool ProtocType_Parse(
    const ::std::string& name, ProtocType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtocType>(
    ProtocType_descriptor(), name, value);
}
enum GSMsgType {
  GSChatNtf = 1,
  GSSystemMessageNtf = 2
};
bool GSMsgType_IsValid(int value);
const GSMsgType GSMsgType_MIN = GSChatNtf;
const GSMsgType GSMsgType_MAX = GSSystemMessageNtf;
const int GSMsgType_ARRAYSIZE = GSMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GSMsgType_descriptor();
inline const ::std::string& GSMsgType_Name(GSMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GSMsgType_descriptor(), value);
}
inline bool GSMsgType_Parse(
    const ::std::string& name, GSMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GSMsgType>(
    GSMsgType_descriptor(), name, value);
}
enum PythonMsgType {
  PythonMsg_example = 1,
  PyTalkDialog = 2,
  PyChouKaReq = 3,
  PyChouKaAck = 4,
  PyGetGenGaoReq = 5,
  PyGetGenGaoAck = 6,
  PyGetGoodActivePanelReq = 7,
  PyGetGoodActivePanelAck = 8,
  PyGetActiveAwardReq = 9,
  PyGetActiveAwardAck = 10,
  PyEveryDataActiveNtf = 11,
  PySaveGuideStepReq = 12,
  PySaveGuideStepAck = 13,
  PyBuyCheckPointChallengeCountReq = 14,
  PyBuyCheckPointChallengeCountAck = 15
};
bool PythonMsgType_IsValid(int value);
const PythonMsgType PythonMsgType_MIN = PythonMsg_example;
const PythonMsgType PythonMsgType_MAX = PyBuyCheckPointChallengeCountAck;
const int PythonMsgType_ARRAYSIZE = PythonMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PythonMsgType_descriptor();
inline const ::std::string& PythonMsgType_Name(PythonMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PythonMsgType_descriptor(), value);
}
inline bool PythonMsgType_Parse(
    const ::std::string& name, PythonMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PythonMsgType>(
    PythonMsgType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace protoc

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::ProtocType>() {
  return ::protoc::ProtocType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::GSMsgType>() {
  return ::protoc::GSMsgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protoc::PythonMsgType>() {
  return ::protoc::PythonMsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtocType_2eproto__INCLUDED
